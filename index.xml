<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>i</b:listType>
			<b:listData listID="index"/>
		</b:entriesMeta>

		<b:entry entryID="000800" baseName="chrome-emulator">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-06-26</b:date>
				<b:time>11:55:24</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>Chrome 開發工具的新模擬器</b:title>
			<b:content>
				<b:summary> Chrome 開發工具有個新的模擬器，介面改不少，其中最大的特點是多了網路模擬的功能，可以模擬網路速度了，目前在 Chrome Canary 已經可以用，可惜還沒有自定義選項的功能，不過我想到 Chrome 前應該會有～...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14486840456/" title="Chrome Emulator by othree, on Flickr"><img src="//farm4.staticflickr.com/3857/14486840456_74dce49944_b.jpg" width="857" height="850" alt="Chrome Emulator" srcset="//farm4.staticflickr.com/3857/14486840456_74dce49944.jpg 768w, //farm4.staticflickr.com/3857/14486840456_74dce49944_b.jpg 768w 2x" /></a></p>

<p>Chrome 開發工具有個新的模擬器，介面改不少，其中最大的特點是多了網路模擬的功能，可以模擬網路速度了，目前在 Chrome Canary 已經可以用，可惜還沒有自定義選項的功能，不過我想到 Chrome 前應該會有～</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000799" baseName="rgba">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-06-06</b:date>
				<b:time>14:47:38</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>RGBA_ 控字慾</b:title>
			<b:content>
				<b:summary>昨天去參加了 RGBA 很久沒辦的活動，這次主題是字體，剛好是我很有興趣的議題，所以從一開始就很想參與，結果報名時竟然忘記，而且還連續兩次都忘記了，想不到活動當天 hlb 沒辦法過去，我就順利的接手他的票了，然後覺得應該分享一下，所以就有了這篇文章。 一開始是由 Jason 的手寫西文毛筆字開始，我有拍些照片也錄了一段影片： 一直覺得寫這種字體用的筆很有趣，根本就是一片鐵片，要控制的好讓出墨平均應該需要不少練習吧， 接著就是 Even 介紹他挑選字形的方法，因為他基本上都是挑選黑體來用比較多，不過黑體也分很多種，所以先介紹了不同黑體的差異，基本上就是黑體字並不是所有都侷限現在框框內的，筆劃也不是都方方正正的，例如蒙納黑和 Arial Unicode MS 的底就不平，所以字體本身可能是有點歪斜的。 另外一種變化可以稱為喇叭口，也就是上圖那樣，在筆劃末端會放大，這種黑體比較適合小字使用，喇叭口可以讓視覺上感覺筆會比較粗，但是又不會影響整體的灰度，例如 Hiragino 這個 OSX 內建的日文字體。如果不要喇叭口的話可以選華康黑，華康黑又有一個特別的地方是他的一些筆劃是有裝飾的，我本來以為黑體就是不會有這些裝飾元素的，真是沒想到啊。最後講到信黑體，信黑體就是非常標準，文字侷限在方框內，灰度平均，沒有裝飾的黑體。然後 Even 還有用 fontshop 這個網站和 Sketch 示範一下不同字重的搭配。 接下來聽的是 but 介紹 OpenType 特殊功能和他做的一些實驗，OpenType 的規範有定義一些在西文排版上已經存在很久的功能，例如連字 Ligatures。 OpenType 有的功能時很很多，微軟有份文件有列出，據 but 說，OpenType 是微軟和 Adobe...</b:summary>
				<b:mainContent><p>昨天去參加了 RGBA 很久沒辦的活動，這次主題是字體，剛好是我很有興趣的議題，所以從一開始就很想參與，結果報名時竟然忘記，而且還連續兩次都忘記了，想不到活動當天 hlb 沒辦法過去，我就順利的接手他的票了，然後覺得應該分享一下，所以就有了這篇文章。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14345683145/" title="RGBA_ 控字慾 by othree, on Flickr"><img src="//farm6.staticflickr.com/5591/14345683145_0f9d9383c8_b.jpg" width="1024" height="683" alt="RGBA_ 控字慾" src-1="(max-width: 768px)  //farm6.staticflickr.com/5591/14345683145_0f9d9383c8.jpg 1x, //farm6.staticflickr.com/5591/14345683145_0f9d9383c8_b.jpg 2x" src-2="//farm6.staticflickr.com/5591/14345683145_2d460ebe22_k.jpg 2x" /></a></p>

<p>一開始是由 Jason 的手寫西文毛筆字開始，我有拍些照片也錄了一段影片：</p>

<iframe width="853" height="480" src="//www.youtube.com/embed/55-x6DcKyQc" frameborder="0" allowfullscreen="allowfullscreen"></iframe>

<p>一直覺得寫這種字體用的筆很有趣，根本就是一片鐵片，要控制的好讓出墨平均應該需要不少練習吧，</p>

<p>接著就是 Even 介紹他挑選字形的方法，因為他基本上都是挑選黑體來用比較多，不過黑體也分很多種，所以先介紹了不同黑體的差異，基本上就是黑體字並不是所有都侷限現在框框內的，筆劃也不是都方方正正的，例如蒙納黑和 Arial Unicode MS 的底就不平，所以字體本身可能是有點歪斜的。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14352869974/" title="喇叭口 by othree, on Flickr"><img src="//farm3.staticflickr.com/2911/14352869974_632f9dfaab_b.jpg" width="1024" height="1024" alt="喇叭口" src-1="(max-width: 768px)  //farm3.staticflickr.com/2911/14352869974_632f9dfaab.jpg 1x, //farm3.staticflickr.com/2911/14352869974_632f9dfaab_b.jpg 2x"  /></a></p>

<p>另外一種變化可以稱為喇叭口，也就是上圖那樣，在筆劃末端會放大，這種黑體比較適合小字使用，喇叭口可以讓視覺上感覺筆會比較粗，但是又不會影響整體的灰度，例如 Hiragino 這個 OSX 內建的日文字體。如果不要喇叭口的話可以選華康黑，華康黑又有一個特別的地方是他的一些筆劃是有裝飾的，我本來以為黑體就是不會有這些裝飾元素的，真是沒想到啊。最後講到信黑體，信黑體就是非常標準，文字侷限在方框內，灰度平均，沒有裝飾的黑體。然後 Even 還有用 <a href="http://fontshop.com">fontshop</a> 這個網站和 <a href="http://bohemiancoding.com/sketch/">Sketch</a> 示範一下不同字重的搭配。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14159167097/" title="RGBA_ 控字慾 by othree, on Flickr"><img src="//farm3.staticflickr.com/2934/14159167097_81c5f90da1_b.jpg" width="1024" height="683" alt="RGBA_ 控字慾" src-1="(max-width: 768px)  //farm3.staticflickr.com/2934/14159167097_81c5f90da1.jpg 1x, //farm3.staticflickr.com/2934/14159167097_81c5f90da1_b.jpg 2x" src-2="//farm3.staticflickr.com/2934/14159167097_f6ac61344f_k.jpg 2x" /></a></p>

<p>接下來聽的是 but 介紹 OpenType 特殊功能和他做的一些實驗，OpenType 的規範有定義一些在西文排版上已經存在很久的功能，例如連字 Ligatures。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/diegoiaconelli/4904028989/" title="Ligatures by dotcx, on Flickr"><img src="//farm5.staticflickr.com/4075/4904028989_0f6974d4ec_b.jpg" width="1024" height="765" alt="Ligatures" src-1="(max-width: 768px)  //farm5.staticflickr.com/4075/4904028989_0f6974d4ec.jpg 1x, //farm5.staticflickr.com/4075/4904028989_0f6974d4ec_b.jpg 2x"  /></a></p>

<p>OpenType 有的功能時很很多，微軟有份<a href="http://www.microsoft.com/typography/otspec/featurelist.htm">文件</a>有列出，據 but 說，OpenType 是<a href="http://www.microsoft.com/typography/otspec/default.htm">微軟</a>和 <a href="http://www.adobe.com/products/type/opentype.html">Adobe</a> 合作產出的，我後來搜尋一些相關資料時發現微軟有不少文件，可惜 IE 對於 OpenType feature 的支援卻落後不少，Firefox 和 Chrome 都已經支援一陣子了，雖然目前都還算是實驗中的功能， but 有用這些功能和他自己製作的字形弄了兩個實驗網站，兩個其實都是用連字辦到的，<a href="http://but.tw/font/">第一個</a>是完全用文字把日本的火車時刻表做出來，這樣做除了畫面呈現上可以和紙本一樣，SEO 也會表現的比插入 icon 來的好，當然親和力也自動跟著提昇，<a href="http://but.tw/font/bpmfpy.html">第二個</a>則是注音字形，可以邊打拼音邊顯示你輸入的注音符號，然後另外還做一個反向的，可以打注音拼音，兩個 demo 都蠻有趣的，而且可以在頁面上玩玩看連字。</p>

<p>另外因為有提到 emoji，因為 emoji 是彩色的，目前各家實做不一樣，蘋果是塞圖進字形、Firefox 我忘了，然後微軟是用多個圖層來處理多色的問題，所以我問了一下去年看過的 SVG in OpenType 的相關資訊，可惜 but 沒接觸過，後來我去搜尋看看到底這神秘的東西是誰推出來的，因為把 SVG 放進去字形裡面不是單純只是向量的彩色圖片，所有 SVG 可以做的事情都可以辦到，例如動畫之類的。總之發現是 Mozilla 開始這計畫的，在 W3C 有 <a href="http://www.w3.org/community/svgopentype/">community</a>，Adobe 的網站也有介紹過，應該不會是個孤兒格式才是，目前好像轉轉進到 MPEG 組織下維護了，Open Type 有個很神秘的地方是它現在是由 MPEG 組織來維護，屬於 <a href="http://www.adobe.com/aboutadobe/pressroom/pressreleases/200508/081505OpenTypeISO.html">MPEG-4</a> 檔案格式的一部分，真是令不解的狀況啊～</p>

<p>最後比較可惜的是 Vertical Rhyme 沒聽到，不知道之後會不會放出投影片（but 的投影片也想要啊），主要想聽的主題就差那個而已，有一些特別去聽的就是之前已經在別的場合聽過了，整體來說這次收穫算是很多的，最後還是要感謝一下辦活動的 Even 和突然沒辦法去的布丁了，然後就看一下當天的盛況吧。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14365818033/" title="RGBA_ 控字慾 by othree, on Flickr"><img src="//farm4.staticflickr.com/3859/14365818033_7ca0693d4d_b.jpg" width="1024" height="683" alt="RGBA_ 控字慾" src-1="(max-width: 768px)  //farm4.staticflickr.com/3859/14365818033_7ca0693d4d.jpg 1x, //farm4.staticflickr.com/3859/14365818033_7ca0693d4d_b.jpg 2x" src-2="//farm4.staticflickr.com/3859/14365818033_69f198a9da_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14345645395/" title="RGBA_ 控字慾 by othree, on Flickr"><img src="//farm6.staticflickr.com/5547/14345645395_a2e651b466_b.jpg" width="1024" height="683" alt="RGBA_ 控字慾" src-1="(max-width: 768px)  //farm6.staticflickr.com/5547/14345645395_a2e651b466.jpg 1x, //farm6.staticflickr.com/5547/14345645395_a2e651b466_b.jpg 2x" src-2="//farm6.staticflickr.com/5547/14345645395_9bf280927c_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14365860773/" title="RGBA_ 控字慾 by othree, on Flickr"><img src="//farm6.staticflickr.com/5154/14365860773_4a33f5f37b_b.jpg" width="1024" height="683" alt="RGBA_ 控字慾" src-1="(max-width: 768px)  //farm6.staticflickr.com/5154/14365860773_4a33f5f37b.jpg 1x, //farm6.staticflickr.com/5154/14365860773_4a33f5f37b_b.jpg 2x" src-2="//farm6.staticflickr.com/5154/14365860773_f616405d5d_k.jpg 2x" /></a></p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000798" baseName="wwdc-2014-keynote">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-06-03</b:date>
				<b:time>21:43:34</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>WWDC 2014 Keynote</b:title>
			<b:content>
				<b:summary> 昨天晚上的 WWDC 2014 Keynote 大概是在 Steve Jobs 後我看過最滿意的 Apple 發表會了吧，一來是因為發表的東西讓人期待，二是整場發表的品質非常好，還記得 Steve Jobs 過世前有一場發表會讓我印象深刻，那場 Steve Jobs 上場的時間很少，主要是做引言，主要的產品介紹是由蘋果的幾位 VP 輪流上來介紹，那場其實在我看來實在是蠻痛苦，因為每個人的用字、語調都很接近 Steve Jobs，看的出來是在模仿，但是就是無法那麼自然，所以那場看下來其實有點難過。 在 Tim Cook 剛接手那陣子的發表其實都還有這樣的狀況，不過可以感覺的出來事情有在慢慢的變化，像是 Craig Federighi，也就是這次發表三度上台的那位 VP，幾次上台的評價的還蠻不錯，比較不冷場，也比較有自己的風格，Tim Cook 模仿 Steve Jobs 的感覺也越來越淡，直到這次的 WWDC 2014，我覺得大概已經是完成某種程度的磨和了。 昨天這場發表主要有三個新東西要介紹，剛好都是軟體的，結果都是 Craig Federighi 在介紹，雖然三上三下感覺有點好笑，不過我覺得這安排蠻正確的，因為 Tim...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14150795840/" title="Apple by othree, on Flickr"><img src="//farm4.staticflickr.com/3857/14150795840_0e85d5a2aa_b.jpg" width="1024" height="575" alt="Apple" src-1="(max-width: 768px)  //farm4.staticflickr.com/3857/14150795840_0e85d5a2aa.jpg 1x, //farm4.staticflickr.com/3857/14150795840_0e85d5a2aa_b.jpg 2x"  /></a></p>

<p>昨天晚上的 WWDC 2014 Keynote 大概是在 Steve Jobs 後我看過最滿意的 Apple 發表會了吧，一來是因為發表的東西讓人期待，二是整場發表的品質非常好，還記得 Steve Jobs 過世前有一場發表會讓我印象深刻，那場 Steve Jobs 上場的時間很少，主要是做引言，主要的產品介紹是由蘋果的幾位 VP 輪流上來介紹，那場其實在我看來實在是蠻痛苦，因為每個人的用字、語調都很接近 Steve Jobs，看的出來是在模仿，但是就是無法那麼自然，所以那場看下來其實有點難過。</p>

<p>在 Tim Cook 剛接手那陣子的發表其實都還有這樣的狀況，不過可以感覺的出來事情有在慢慢的變化，像是 Craig Federighi，也就是這次發表三度上台的那位 VP，幾次上台的評價的還蠻不錯，比較不冷場，也比較有自己的風格，Tim Cook 模仿 Steve Jobs 的感覺也越來越淡，直到這次的 WWDC 2014，我覺得大概已經是完成某種程度的磨和了。</p>

<p>昨天這場發表主要有三個新東西要介紹，剛好都是軟體的，結果都是 Craig Federighi 在介紹，雖然三上三下感覺有點好笑，不過我覺得這安排蠻正確的，因為 Tim Cook 介紹效果絕對不會那麼好，他 CEO 又不能不上來，所以在台上就是非常穩重的感覺，四平八穩的引言、講公司的一些發展數字，最後做結尾，而且這次我覺得他要不是完全作自己，不然就是把以前模仿 Steve Jobs 的部分都已經內化了，不再有以前那種不協調的感覺了。我猜未來沒意外的話都是這樣的組合，不過這次完全沒硬體，有硬體要發表的話，可能 Tim Cook 還是會自己介紹吧，只好來期待一下 iPhone 6 的發表了。</p>

<p>最後想來抱怨一下，下面這兩張照片不知道有多少人知道問題在哪。</p>
</b:mainContent>
				<b:extendContent><p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14150895967/" title="HTC by othree, on Flickr"><img src="//farm4.staticflickr.com/3924/14150895967_4f46e2faf8_b.jpg" width="1024" height="692" alt="HTC" src-1="(max-width: 768px)  //farm4.staticflickr.com/3924/14150895967_4f46e2faf8.jpg 1x, //farm4.staticflickr.com/3924/14150895967_4f46e2faf8_b.jpg 2x"  /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14335719312/" title="Apple by othree, on Flickr"><img src="//farm4.staticflickr.com/3836/14335719312_869c853dc8_b.jpg" width="1024" height="575" alt="Apple" src-1="(max-width: 768px)  //farm4.staticflickr.com/3836/14335719312_869c853dc8.jpg 1x, //farm4.staticflickr.com/3836/14335719312_869c853dc8_b.jpg 2x"  /></a></p>

<p>我知道各方面要弄到像蘋果這樣水準的發表會不是很容易，也不打算苛求國內廠商，只是我很想好歹燈泡色溫和投影機色溫可以一樣嗎，HTC 那場其實我也有看轉播，當時攝影機的色溫是對到投影畫面的，所以台上每個人看起來都超黃，好難受，這張照片則是攝影師拍的，他很盡責的把人拍出正確的顏色，所以就會後面投影畫面的顏色怪怪的，而蘋果的場子，你可以看到人和畫面的顏色都很正確，也不會哪一個太亮（沒錯，亮度是另一個細節）。</p>
</b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000797" baseName="es6-iterable">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-05-24</b:date>
				<b:time>14:03:12</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>ES6 的 Generator 與 Iterator</b:title>
			<b:content>
				<b:summary>第一次看到 generator 時，我只有看到 yield 這個關鍵字，以為只是流程控制的機制，後來才聽到 generator（產生器）這個名字，一直以為說的是 factory pattern 那種角色，困惑了起來去查了一些介紹才知道也是很早就有的機制，主要都是用在迴圈上，命名雖然是用 generator（生產器）和 yield（產出），但是不是 factory 那種，generator 其實是用來產生 iterator 的。 Iterator 其實是一組定義好的介面，讓物件可以在迴圈裡面取得整個串列的資料，而在 ES6 裡，可以處理 iterator 的迴圈形式，就是上一篇文章介紹 Map 和 Set 時，有講到的 for of 這個新語法，在 ES6 裡面定義的 Iterator 介面其實很簡單，只有定義了一個 next method，每次執行會回傳一個物件，裡面兩個屬性： { value: 100, // 下一個元素的值...</b:summary>
				<b:mainContent><p>第一次看到 generator 時，我只有看到 <code>yield</code> 這個關鍵字，以為只是流程控制的機制，後來才聽到 generator（產生器）這個名字，一直以為說的是 factory pattern 那種角色，困惑了起來去查了一些介紹才知道也是很早就有的機制，主要都是用在迴圈上，命名雖然是用 generator（生產器）和 yield（產出），但是不是 factory 那種，generator 其實是用來產生 iterator 的。</p>

<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/The_Iterator_protocol">Iterator</a> 其實是一組定義好的介面，讓物件可以在迴圈裡面取得整個串列的資料，而在 ES6 裡，可以處理 iterator 的迴圈形式，就是上一篇文章介紹 Map 和 Set 時，有講到的 <code>for of</code> 這個新語法，在 ES6 裡面定義的 Iterator 介面其實很簡單，只有定義了一個 <code>next</code> method，每次執行會回傳一個物件，裡面兩個屬性：</p>

<pre><code>{
    value: 100, // 下一個元素的值
    done: false // Iterator 是否跑完了
}
</code></pre>

<p><code>value</code> 就是迴圈要的值，<code>done</code> 則是用來判斷迴圈是否該結束了，<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/function*">generator</a> 就是用 <code>yield</code> 這個語法來讓你簡單的可以產生 iterator，在 ES6 裡面的語法還算簡單，就是宣告 function 時加個 <code>*</code>：</p>

<pre><code>function* idMaker(){
    var index = 0;
    while(true)
        yield index++;
}
</code></pre>

<p>上面就是一個簡單的 generator，執行 <code>idMaker</code> 這個 generator function 才會回傳對應的 iterator：</p>

<pre><code>var gen = idMaker();

console.log(gen.next().value); // 0
console.log(gen.next().value); // 1
console.log(gen.next().value); // 2
</code></pre>

<p>當然這是一個不會結束的 iterator 就是了，使用時要小心不要直接把這種東西丟到迴圈裡面。最後要來介紹的是 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/iterable
">iterable</a> 介面，其實如果直接把 iterator 丟給 <code>for of</code> 是不能用的，要是有支援 iterable 介面的物件才可以，ES6 內建有 iterable 介面的<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/iterable#Builtin_iterables">物件型態</a>包括了：</p>

<ul>
<li>字串</li>
<li>陣列</li>
<li>Generator</li>
<li>Map, WeakMap</li>
<li>Set, WeakSet</li>
<li>arguments</li>
</ul>

<p>這些形式的資料都可以直接用 <code>for of</code> 迴圈來跑，然後當然，介面都已經定義出來了，表示我們也可以自己寫一個物件來用，iterable 的定義也很簡單，就是把該物件 iterator 的 generator 放在 "@@iterator" 這個屬性下，由於 iterator 只能用一次，所以每次需要都要用 generator 產生一個新的 iterator。另外文件有提到說 "@@iterator" 就是 <code>Symbol.iterator</code> 這個環境變數，不過我目前測試還不支援的樣子（Symbol 目前還在變動中，以後會在介紹）：</p>

<pre><code>var myIterable = {}
myIterable["@@iterator"] = () =&gt; (function*(){
    yield 1;
    yield 2;
    yield 3
})();

for (let value of myIterable) {
    console.log(value);
} // 1, 2, 3
</code></pre>

<p>通常會把 "@@iterator" 屬性放到 prototype 下比較保險。而有了自定義 iterable 物件的能力，就可以有很多東西可以玩啦，可以拿來跑二元樹、DOM tree、三維陣列或是特定應用領域的資料結構等等。</p>

<p>另外和 iterable 相關的東西還有一個，就是新的 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator">spread</a> 運算子 <code>...</code>，它可以把 iterable 物件展開，然後放到像是陣列或是參數、destructuring 等等：</p>

<pre><code>[...myIterable]; // [1, 2, 3]

myFunc(...myIterable); // myFunc(1, 2, 3)
</code></pre>

<p>這個新的運算子也是一個非常好用的新功能。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000796" baseName="es6-map-set">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-05-19</b:date>
				<b:time>21:07:07</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>ES6 的 Map 與 Set</b:title>
			<b:content>
				<b:summary>ECMAScript 6 多了兩個新的資料結構，分別是 Map 與 Set，剛開始看到時還因為太久沒接觸其他語言，整個想不起來是什麼東西，不過還是簡單介紹一下。 Set 我一開始想不起來到底和 Map 哪裡不一樣，後來還是看了說明才回憶起來，其實就是一組值，像是資料庫裡面的 enum 資料型態，也可以想像成是陣列那樣的結構，可是它沒辦法直接用索引取特定元素的值，只能用列舉的方法取值，常用的 method 有三個，add、delete 和 clear，預設是會幫你確保值都是唯一的，重複的值會被忽略，要列舉裡面的值基本上是要用 for...of 語法，這和以前的 for...in 語法不一樣，是直接取值出來的，也是 ES6 新的東西。 Map 則是和原來的 JS 物件好像重複到，都是 key value mapping 的資料結構，不過其實還是有個很重要的差異點，就是 Map 的 key 的可以用字串以外的值，例如你可以用 DOM Node 來當 Map 裡面的 key，用法基本上就是...</b:summary>
				<b:mainContent><p>ECMAScript 6 多了兩個新的資料結構，分別是 Map 與 Set，剛開始看到時還因為太久沒接觸其他語言，整個想不起來是什麼東西，不過還是簡單介紹一下。</p>

<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set">Set</a> 我一開始想不起來到底和 Map 哪裡不一樣，後來還是看了說明才回憶起來，其實就是一組值，像是資料庫裡面的 enum 資料型態，也可以想像成是陣列那樣的結構，可是它沒辦法直接用索引取特定元素的值，只能用列舉的方法取值，常用的 method 有三個，<code>add</code>、<code>delete</code> 和 <code>clear</code>，預設是會幫你確保值都是唯一的，重複的值會被忽略，要列舉裡面的值基本上是要用 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...of"><code>for...of</code></a> 語法，這和以前的 <code>for...in</code> 語法不一樣，是直接取值出來的，也是 ES6 新的東西。</p>

<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map">Map</a> 則是和原來的 JS 物件好像重複到，都是 key value mapping 的資料結構，不過其實還是有個很重要的差異點，就是 Map 的 key 的可以用字串以外的值，例如你可以用 DOM Node 來當 Map 裡面的 key，用法基本上就是 <code>set</code> 和 <code>get</code>，可以避免一些以前會遇到的問題，例如 jQuery 的 data，以前會需要幫每個 DOM Node 生 unique id，如果用 Map 來實做的話就不需要了。</p>

<p>目前 Firefox 和 Chrome 都已經有把這兩個資料結構實做好了，不過 Chrome 還沒有把 <code>for...of</code> 實做好就是～</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000795" baseName="disqus">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-05-16</b:date>
				<b:time>23:32:27</b:time>
			</b:datetime>
			<b:category>about</b:category>
			<b:title>留言切換到 Disqus</b:title>
			<b:content>
				<b:summary> 因為 MovableType 的反 spam 機制幾乎失靈了，最近廣告又太多，只好狠下心來換到 Disqus，其實是想換一陣子了，不過覺的話要花不少時間一直沒弄，結果果然弄了整個晚上，大概遇到三個問題。 其實 Disqus 對於轉移這件事做了不少工，不過我還是遇到匯出的檔案格式不支援的問題， Disqus 只支援 WordPress 的 wxr 格式，不過我的 MT 4 不能輸出這種格式，後來是使用 Disqus 的 MT plugin 來處理這個問題。 第二個問題是套用到頁面上的問題，因為這裡有使用 CSP，所以勢必要多開一些 domain，大概開了圖片和 script 的 *.disqus.com 和 *.disquscdn.com，不過還有一個我不太想開的 unsafe-eval，目前只能先暫時屈服，正在找管道回報這問題。 第三個問題就是留言對應的 url 不正確，因為我是用 plugin 處理匯出匯入的，他用的網址就是 MT 內部認為的網址，不過在這裡這不是正確的網址，本來我是在頁面讀入的...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14006265675/" title="奈良 東大寺 by othree, on Flickr"><img src="//farm8.staticflickr.com/7400/14006265675_5fe812acae_b.jpg" width="1024" height="683" alt="奈良 東大寺" src-1="(max-width: 768px)  //farm8.staticflickr.com/7400/14006265675_5fe812acae.jpg 1x, //farm8.staticflickr.com/7400/14006265675_5fe812acae_b.jpg 2x" src-2="//farm8.staticflickr.com/7400/14006265675_02fe3d9593_k.jpg 2x" /></a></p>

<p>因為 MovableType 的反 spam 機制幾乎失靈了，最近廣告又太多，只好狠下心來換到 <a href="http://disqus.com/">Disqus</a>，其實是想換一陣子了，不過覺的話要花不少時間一直沒弄，結果果然弄了整個晚上，大概遇到三個問題。</p>

<p>其實 Disqus 對於轉移這件事做了不少工，不過我還是遇到匯出的檔案格式不支援的問題， Disqus 只支援 WordPress 的 wxr 格式，不過我的 MT 4 不能輸出這種格式，後來是使用 Disqus 的 MT plugin 來處理這個問題。</p>

<p>第二個問題是套用到頁面上的問題，因為這裡有使用 CSP，所以勢必要多開一些 domain，大概開了圖片和 script 的 <code>*.disqus.com</code> 和 <code>*.disquscdn.com</code>，不過還有一個我不太想開的 <em>unsafe-eval</em>，目前只能先暫時屈服，正在找管道回報這問題。</p>

<p>第三個問題就是留言對應的 url 不正確，因為我是用 plugin 處理匯出匯入的，他用的網址就是 MT 內部認為的網址，不過在這裡這不是正確的網址，本來我是在頁面讀入的 script 內做處理，手動指定留言的網址，不過後來發現 Disqus 有 URL mapping 的功能，可以上傳 csv 檔來改網址，而且還支援下載現有的網址清單，設想蠻齊全的。</p>

<p>總之我就這樣換過來了，自己測試留言看來是 ok，還不知道是不是都沒問題了，因為這邊也很少人來留言啊，至於切換過來有什麼優點呢，最主要還是我不想處理 spam 了，再來我可以把 comment 進入點關掉，對網站來說安全些，還有可以把一些流量丟到外面（Disqus 是賺什麼啊？），剩下就是我可以用 Disqus 的一些特殊功能啦，像是訂閱討論串之類的。</p>

<p>對了，照片是隨便挑的，和內文沒關係～</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>


		</b:entry>

	</b:entries>
</b:blog>
