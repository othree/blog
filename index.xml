<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>i</b:listType>
			<b:listData listID="index"/>
		</b:entriesMeta>

		<b:entry entryID="000972" baseName="usb-cdisplayport">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2020-08-06</b:date>
				<b:time>23:30:04</b:time>
			</b:datetime>
			<b:category>buy</b:category>
			<b:title>USB-C、DisplayPort</b:title>
			<b:content>
				<b:summary> 前陣子為了買螢幕認真的研究了一下 USB-C 介面的問題，然後就在 FB 上快速的紀錄了一下，這篇就把那時的紀錄轉過來，每段文字前後有點不連貫還請忽略，然後尾巴加一些後來研究才知道的東西，當然因為我不是這方面專業的，內容有錯還請通知我～ 最有趣的大概是 USB-C to HDMI 幾乎都是走 DisplayPort Alt. mode 然後線上晶片轉成 HDMI 訊號吧，反而沒有什麼支援輸出 HDMI Alt. mode 的設備，就算有，用上這種主動線材也不能用，然後買線的時候，有些廠商又不寫他是支援 DisplayPort Alt. mode 還是 HDMI Alt. mode（像是那個 moshi，盒子上可能有寫但是網站上都沒寫），不過現在應該幾乎都是前者吧，後者專用的線材可能還要特別去找。 然後 Mac 之前 Thunderbolt 3 其實只有支援到傳輸 DisplayPort 1.2 的訊號，但是 DisplayPort 1.2...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="https://www.flickr.com/photos/othree/50176207458/" title="LG UltraFine 5K by othree, on Flickr"><img src="https://live.staticflickr.com/65535/50176207458_47d3e5420f_b.jpg" intrinsicsize="1024x768" width="1024" height="768" alt="LG UltraFine 5K" srcset="https://live.staticflickr.com/65535/50176207458_47d3e5420f_b.jpg 1024w, https://live.staticflickr.com/65535/50176207458_6984419dba_h.jpg 1600w" /></a></p>
<p>前陣子為了買螢幕認真的研究了一下 USB-C 介面的問題，然後就在 FB 上快速的紀錄了一下，這篇就把那時的紀錄轉過來，每段文字前後有點不連貫還請忽略，然後尾巴加一些後來研究才知道的東西，當然因為我不是這方面專業的，內容有錯還請通知我～</p>
<p>最有趣的大概是 USB-C to HDMI 幾乎都是走 DisplayPort Alt. mode 然後線上晶片轉成 HDMI 訊號吧，反而沒有什麼支援輸出  HDMI Alt. mode 的設備，就算有，用上這種主動線材也不能用，然後買線的時候，有些廠商又不寫他是支援 DisplayPort Alt. mode  還是 HDMI Alt. mode（像是那個 moshi，盒子上可能有寫但是網站上都沒寫），不過現在應該幾乎都是前者吧，後者專用的線材可能還要特別去找。</p>
<p>然後 Mac 之前 Thunderbolt 3 其實只有支援到傳輸 DisplayPort 1.2 的訊號，但是 DisplayPort 1.2  的資料傳輸量只有支援到 4K 60Hz，只是 Thunderbolt 3 可以傳輸兩組 DisplayPort 1.2 訊號，所以可以把 5K 60Hz 10bpc(bit per color) 的視訊資料塞進去。不過最近出的 Pro Display XDR 是 6K 螢幕，一樣只用一條 Thunderbolt 3 線傳輸，研究一番才發現應該是 Mac 換了新的 Thunderbolt 晶片，現在支援到 DisplayPort 1.4，所以可以輸出到 6K 訊號了，不過一般查 Thunderbolt 3 都還是只有寫支援到 DisplayPort 1.2，不知道是不是其實這部分是動態沒寫死的。</p>
<p>再來就是我之前貼的兩台螢幕，MSI 那台的 USB-C 頭在使用手冊內有寫說不支援數據傳輸，所以那個頭應該是用 USB-C 的 DisplayPort Alt. mode，而不是 Thunderbolt Alt. mode 去傳輸 DisplayPort 訊號，LG 的是後者，所以它可以一條線同時做訊號傳輸，還提供筆電充電和三個  USB-C 頭出來（真的是 USB 介面的），不過沒有 downstream 來串接 Thunderbolt 設備，4K 版才有多餘的頻寬。</p>
<p>蘋果那條 Pro Cable 厲害的點就是在它有 2M 長度，但是：</p>
<ol>
<li>支援 USB-C 資料傳輸，傳輸速度可以到 USB 3.1 Gen 2 的 10Gbps；</li>
<li>Thunderbolt 3 Alt. mode，傳輸速度可以到最高速的 40 Gbps；</li>
<li>DisplayPort Alt. mode 訊號，並且支援到 1.3 的 HBR3，資料量有到 25.92 Gbps；</li>
<li>支援充電到 100W，也是 Thunderbolt 3 規格的最高功率。</li>
</ol>
<p>可以說是目前最常見的模式都有支援到目前的頂級規格了，一般這種長度的線通常就是：1. 普通 USB-C 被動（沒晶片處理）線材，然後就無法乘載 Thunderbolt 3 的 40G 訊號；2. 主動的 Thunderbolt 3 or DisplayPort 線材，但是就會變成只能傳輸自己支援的訊號，不能當 USB-C 線用，蘋果那條線到底是怎麼同時達成其實還不清楚，充電要怎樣能到 100W 然後同時傳輸這樣大量的資料也是很厲害。其實也有廠商出過同時可以當 Thunderbolt 3 和 USB 的<a href="https://www.akitio.com.tw/accessories/40gbps-thunderbolt3-cable-2m">線材</a>，只是 USB 就不能到 10Gbps，充電也有差，總之就是沒有樣樣完美的。</p>
<p>MacBook Pro 16 現在有支援同時輸出給兩台 Pro Display XDR，不過要一台插左邊，一台插右邊，其實 5K 就需要了，官網文件有寫，所以大概可以知道四個 port 頻寬是左右兩邊分開的，其實 Apple 官方文件寫的還蠻仔細的，不同機種都有各自的文件說明：</p>
<ul>
<li><a href="https://support.apple.com/en-us/HT210754">MacBook Pro 16</a></li>
<li><a href="https://support.apple.com/en-us/HT208366">iMac Pro</a></li>
<li><a href="https://support.apple.com/en-us/HT210392">Mac Pro with Radeon Pro Vega II Duo MPX Module</a></li>
</ul>
<p>然後 DisplayPort 1.4 有支援到 8K 60Hz 的訊號，Dell 也有一台 8K 螢幕 UP3218K 支援到 8K 60Hz 10bpc，不過現在一來 macOS 不支援輸出 8K，二來 Dell 那台如果要支援 8K 60Hz 是用兩條 DisplayPort 1.3（標準接頭）來傳輸訊號的，因為 DisplayPort 1.3 只有支援到 8K 30Hz，單一條無法到達 60Hz。不過一來 30Hz 蘋果不喜歡，二來兩條線也不符合蘋果美學，所以這個組合在可見的未來大概也是無法搭配在一起吧，我推測蘋果的裝置要支援到 8K 螢幕應該是至少要先換到 Thunderbolt 4 的介面，用比較高效的編碼然後用到單向 80Gbps 的傳輸，不過單向傳輸的話其實就無法同時串接 Thunderbolt 裝置了，也會變成無法達成一條線同時傳視訊、資料和充電，到時候到底會怎樣還是很很讓人好奇啊。</p>
<p>說到這其實我就很好奇，兩條 DisplayPort 線輸出高解析度畫面，這靠的是什麼標準呢？以前在 DVI 時代，這叫做 Dual-Link，不過 DisplayPort 似乎沒有相對應的專有名詞，蘋果網站和 LG 說是 dual-link SST(Single Stream Transport) ，Thunderbolt 網站有看到寫 Dual DisplayPort 的，不過似乎都不是正式的名稱，我基於好奇搜尋許久，還找到看起來好像很有關連的 DisplayPort Dual Mode（DP++）這東西，但是其實這也不是我要找的，我要找的最後是在一份 VESA 在 Display Summit 用的投影片中找到，這份投影片叫：<a href="https://www.vesa.org/wp-content/uploads/2016/06/Display-Summit-USA-2016-AMD-VESA-SAH_Final_r1.pdf">DisplayPort Future Proofing Display Connectivity for VR and 8K HDR</a>，其實這個能力是真的沒有特別的專有名詞（行銷用詞），它是利用 <a href="https://en.wikipedia.org/wiki/DisplayID">DisplayID</a> 的一個功能「Tiled Display Topology Data Block」來達成的，意思就是顯示器的 DisplayID 會跟訊源說你可以把我當成是一組並排螢幕中的一個，Dell UP3218K 是需要實體的 DisplayPort 線兩條，顯示器只要其中一個孔位說是左邊，一個說是右邊就可以，然後解析度都是 3840 × 4320 at 60Hz ，像 Thunderbolt 3 可以傳輸兩組 DisplayPort 訊號，也是一樣的方式，接 UltraFine 5K 的話是兩組 2560 × 2880 at 60Hz 10bpc 的訊號。</p>
<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/50195209003/" title="Pro Cable by othree, on Flickr"><img src="https://live.staticflickr.com/65535/50195209003_39aa1b5807_b.jpg" intrinsicsize="1024x768" width="1024" height="768" alt="Pro Cable" srcset="https://live.staticflickr.com/65535/50195209003_39aa1b5807_b.jpg 1024w, https://live.staticflickr.com/65535/50195209003_60a2cb1dd3_h.jpg 1600w" /></a></p>
<p>最後，如果你看到一台螢幕號稱說是 USB-C 螢幕，那有三種可能性，一是它只支援 Thunderbolt Alt. mode，像是舊版的 LG UltraFine 5K；二是它只支援 DisplayPort Alt. mode，像是 MSI Prestige PS341WU；最後就是兩種都支援，像是新版的 LG UltraFine 5K。哇！除了線材挑選有學問之外，螢幕說支援 USB-C 接頭傳輸視訊，其實也有不同可能性了，USB-C 真的很難！</p>
</b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000971" baseName="upgrade-my-monitor">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2020-08-01</b:date>
				<b:time>23:22:17</b:time>
			</b:datetime>
			<b:category>buy</b:category>
			<b:title>更新螢幕</b:title>
			<b:content>
				<b:summary> 最近因為改用公司發的筆電，所以買了一台新螢幕，本來用的初代 Retina 5K iMac 就先搬回舊家了，這篇來記錄一下這次的螢幕的挑選過程。...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="https://www.flickr.com/photos/othree/50176899326/" title="LG UltraFine 5K by othree, on Flickr"><img src="https://live.staticflickr.com/65535/50176899326_873c44ed56_b.jpg" intrinsicsize="1024x768" width="1024" height="768" alt="LG UltraFine 5K" srcset="https://live.staticflickr.com/65535/50176899326_873c44ed56_b.jpg 1024w, https://live.staticflickr.com/65535/50176899326_4d8f5560db_h.jpg 1600w" /></a></p>
<p>最近因為改用公司發的筆電，所以買了一台新螢幕，本來用的初代 Retina 5K iMac 就先搬回舊家了，這篇來記錄一下這次的螢幕的挑選過程。</p>
</b:mainContent>
				<b:extendContent><p>初代的 5K iMac 到現在也已經有五年了，其實當初剛拿到就有點覺得硬體不是很夠力，沒有完美順暢的感覺，不過做 web 開發也還可以接受，直到前陣子有開始接觸 React Native 要編譯 native app 還有常常需要開模擬器，就很明顯的感受到電腦的速度不夠了，加上初代螢幕會有烙印問題，也是有點想更新，剛好拿到公司配發的筆電，於是就開始考慮要更換過去，然後就開始挑螢幕了，主要的挑選目標是：</p>
<ul>
<li>用 USB-C 做視訊傳輸介面</li>
<li>想要更大的工作區域，而且我不想要多螢幕</li>
</ul>
<p>因為想要單螢幕更大的工作區域，所以我一開始找 21:9 的螢幕，然後找到了買不太到的 <a href="https://www.lg.com/tw/monitors/lg-34WK95U-W">LG 34WK95U-W</a>，寬高比 21:9，解析度 5120 × 2160，對角線 34 吋，支援 Thunderbolt 3、DisplayPort Alt 和筆電充電，DCI-P3 色域還有支援 HDR，其實總共的點數是筆 5K iMac 還要少，但是如果改成 scaled 顯示就可以得到更大的工作區域，不過那個時間點已經找不太到貨了，當時蝦皮還有兩三台新品，但是我還沒要下單，結果某天突然就都消失了。</p>
<p>然後我就開始找看看有沒有其他同樣規格的螢幕，意外的 5K 螢幕其實很少，幾乎都是超寬的才有 5K，但是這樣垂直解析度就不夠了，結果只有找到 <a href="https://tw.msi.com/Monitor/Prestige-PS341WU.html">MSI Prestige PS341WU</a>，其實是 LG 同規格的面板，可能是不同型號，最近還有活動會送 X-Rite 的校色器和一張電腦椅，實在是很吸引人，不過雖然面板一樣，其他部分差異就蠻多了，像是它的 USB-C 接頭不支援 Thunderbolt 3，應該是只有 DisplayPort Alt Mode，所以筆電充電的能力也是個問號，要轉接 USB 還要多一條 up-stream 線到電腦，不過總之要 5K 螢幕好像也沒得選了，大概心裡就覺得就是這台了吧，不過我雖然好像差不多決定要買這台，但是因為當時還沒決定要把 iMac 弄到哪，所以還是一直拖著沒買（上面說的那台 LG 也是在這段時間賣掉的，之後才只剩下這台）。</p>
<p>不過就在我還在拖拖拉拉的這段時間，我就偶爾還會繼續研究，也花了些時間搞懂 USB-C 接頭的一些事，這部分之後會另外一篇文章寫，然後看到了 <a href="https://github.com/tonsky/FiraCode">Fira Code</a> 作者 Nikita Prokopov 寫的 <a href="https://tonsky.me/blog/monitors/">Time to upgrade your monitor</a> 這篇文章（內有簡體中文翻譯連結），這篇文章的總結其實作者也有整理出來：</p>
<ul>
<li>It needs to be at least a 4k monitor. Both 5k and 6k are also great, of course.</li>
<li>You need to use the integer scaling factor.</li>
</ul>
<p>其中第二點說的是要整數的 scaling factor，scaling factor 或許稱為 pixel density 比較有人知道，其實我本來也是有點堅持這點的，不過剛開始挑選新螢幕時有想要為了更大的工作空間妥協的，當時是因為我有先用筆電測試過，肉眼其實看不太出什麼問題，看完這篇我又開始猶豫是不是要 MSI 那台了，因為如果要整數倍（其實就是兩倍）的 scale，那 21:9 的 5K 螢幕實際上點數比正在用的 16:9 5K 還要少，工作區域事實上是變少的，所以，我找起了 16:9 5K 27 吋的螢幕，結果其實選擇一樣不多，基本上就是 <a href="https://www.lg.com/tw/monitors/lg-27MD5KL-B">LG UltraFine 5K</a>，但是這台有點舊了所以我其實有點卻步，花了很多時間看，發現這台根本就是 Apple Cinema Disaply 的 5K 版外包給 LG 做，雖然外觀不是 Apple 風格，但是各方面設計完全是 Apple 的精神在其中，列舉如下：</p>
<ul>
<li>有內建的 Web Cam 和喇叭，和 iMac、Cinema Display 一樣</li>
<li>只有一個 USB-C 輸入孔，完全沒有其他的輸入介面支援</li>
<li>沒有任何按鈕、沒有電源鍵、沒有 OSD 介面</li>
</ul>
<p>這也難怪 PCHome 網站上還要放上這串字「 <strong>《貼心叮嚀》僅thunderbolt3接頭，只支援apple設備輸出！！！</strong>」</p>
<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/50177002122/" title="LG UltraFine 5K by othree, on Flickr"><img src="https://live.staticflickr.com/65535/50177002122_0338b95e11_b.jpg" intrinsicsize="1024x577" width="1024" height="577" alt="LG UltraFine 5K" srcset="https://live.staticflickr.com/65535/50177002122_0338b95e11_b.jpg 1024w, https://live.staticflickr.com/65535/50177002122_1423a640cc_h.jpg 1600w" /></a></p>
<p>再繼續下去說我最後的選擇之前，先來說一下到底是不是有真的符合我目標的螢幕吧，其實是有的，就是 <a href="https://www.apple.com/tw/pro-display-xdr/">Apple Pro Display XDR</a>，介面不用說，他的解析度是 6016 × 3384，所以可以維持 scaling factor 保持 2，但是提供更大的工作空間，不過大家都知道他的價錢，所以就不用考慮了，然後其實我也蠻在意那個解析度數字不是很漂亮。</p>
<p>總之，最後我挑的是 LG UltraFine 5K，有幾個原因，一是工作區域大小，假如我願意接受非整數的 scale，那這台的實體點數 5120 × 2880 其實是可以提供更大的空間（相較於 5120 × 2160）；第二是這台在 2019 年有更新過，新款型號是 27MD5KL-B，舊款是 27MD5KA-B，其實更新的地方很少，就是晶片更新修正一些 bug、支援 USB-C DisplayPort Alt，所以可以直接接 iPad，然後其他都沒變動，面板也沒換，不過至少我可以知道這台規格現在還沒有過時；第三是我一直很想試試看 Apple 一直以來的只接一條線同時傳視訊、資料和充電的方案。然後我買的時候 PCHome 剩下兩台（現在已經沒了），而且我買來才發現「沒有任何按鈕、沒有電源鍵、沒有 OSD 介面」這個特色。</p>
<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/50176748601/" title="LG UltraFine 5K by othree, on Flickr"><img src="https://live.staticflickr.com/65535/50176748601_604c63ef62_b.jpg" intrinsicsize="768x1024" width="600" height="800" alt="LG UltraFine 5K" srcset="https://live.staticflickr.com/65535/50176748601_604c63ef62_b.jpg 768w, https://live.staticflickr.com/65535/50176748601_53bc3332f1_h.jpg 1200w" /></a></p>
<p>上週收到後花了一個下午把工作桌重新整理起來，除了螢幕之外其實還有一些其他的配件：</p>
<ul>
<li>螢幕懸臂：<a href="https://ergotechgroup.com/freedom-arms.html">ERGOTECH FDM-PC-S01</a>，這隻我是買 iMac 前買的，本來是要用在 iMac 上的，結果 5K 版好像不支援 VESA 轉接架</li>
<li>MBP 立架：<a href="https://www.twelvesouth.com/products/bookarc-macbook">Twelve South BookArc</a>，之前 Apple Store 有賣的（現在線上商店搜尋已經沒有了），本來也有考慮 <a href="https://www.raindesigninc.com/mtower.html">Rain Design mTower</a>，想要方正一點的話可以考慮這款，我挑選前一款的主因是它算是 Apple 認證的周邊廠商、然後覺得那個弧形下面如果要走線經過好像比較方便，不過結果而言是沒有線經過他的下方啦</li>
<li><a href="https://www.apple.com/tw/shop/product/MWP32FE/A/">Thunderbolt 3 Pro Cable</a> 冠上 Pro 之名的蘋果線材，兩公尺長度但是可以當 Thunderbolt 3 連接線也可以當 USB-C 連接線，不過我拿到螢幕後發現它也付了一條，不過沒有詳細的規格</li>
</ul>
<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/50176207438/" title="LG UltraFine 5K by othree, on Flickr"><img src="https://live.staticflickr.com/65535/50176207438_5f6682d214_b.jpg" intrinsicsize="768x1024" width="600" height="800" alt="LG UltraFine 5K" srcset="https://live.staticflickr.com/65535/50176207438_5f6682d214_b.jpg 768w, https://live.staticflickr.com/65535/50176207438_0e5b8853a7_h.jpg 1200w" /></a></p>
<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/50176207458/" title="LG UltraFine 5K by othree, on Flickr"><img src="https://live.staticflickr.com/65535/50176207458_47d3e5420f_b.jpg" intrinsicsize="1024x768" width="1024" height="768" alt="LG UltraFine 5K" srcset="https://live.staticflickr.com/65535/50176207458_47d3e5420f_b.jpg 1024w, https://live.staticflickr.com/65535/50176207458_6984419dba_h.jpg 1600w" /></a></p>
<p>還有一些是本來就有的，像是 <a href="https://www.benq.com/zh-tw/lighting/screenbar-lamp.html">Benq WiT ScreenBar</a>，之前是用 Plus，但是考慮到這次螢幕接上懸臂了，所以用回普通版，然後這個東西和 UltraFine 5K 螢幕不太和，如果裝正中間會檔到 WebCam；喇叭又換回 Bose Computer Music Monitor，體積比較小，可惜這對喇叭已經停產了，也沒有類似的後繼機種；另外就是弄完有點想要無線鍵盤，不過我還在等 Topre Realforce R2 的無線版本，當初 R2 剛發表的時候好像有稍微提到這件事情。</p>
<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/50176390553/" title="LG UltraFine 5K by othree, on Flickr"><img src="https://live.staticflickr.com/65535/50176390553_049b090e71_b.jpg" intrinsicsize="1024x768" width="1024" height="768" alt="LG UltraFine 5K" srcset="https://live.staticflickr.com/65535/50176390553_049b090e71_b.jpg 1024w, https://live.staticflickr.com/65535/50176390553_0d391d8473_h.jpg 1600w" /></a></p>
<p>裝起來後就開始試驗不同的 scaling factor 了，macOS 更新前好像不太正確，出現了 Pro Display XDR 的 3008 這種怪比例，還好更新到最新版後數字比較正常，比本來 2x 的 2560 × 1440 還要小的有：</p>
<ul>
<li>2880 × 1620、約是 1.78× (3.5/2)</li>
<li>3200 × 1800、1.6×</li>
</ul>
<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/50176210153/" title="LG UltraFine 5K by othree, on Flickr"><img src="https://live.staticflickr.com/65535/50176210153_7748ecd890_b.jpg" intrinsicsize="1024x684" width="1024" height="684" alt="LG UltraFine 5K" srcset="https://live.staticflickr.com/65535/50176210153_7748ecd890_b.jpg 1024w, https://live.staticflickr.com/65535/50176210153_075a421043_h.jpg 1336w" /></a></p>
<p>目前是先使用 2880 × 1620 的大小，最後還是想再強調一次，這台真的就是 Apple 跟 LG 合作的 Cinema Display 後繼機，連作業系統內都有專用的示意圖。</p>
</b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000970" baseName="safari-3rd-party-cookie">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2020-07-17</b:date>
				<b:time>21:51:00</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>Safari 3rd-Party Cookie</b:title>
			<b:content>
				<b:summary> Apple 之前有宣告要完全阻擋 3rd-party cookie，iThome 也有相關的報導，iOS 和 iPadOS 應該是已經上線了，然後最近 Mac 版 Safari 也快要上線了，所以這篇來記錄一下要怎樣因應還有一些參考資料。 其實真的會寫到第三方 cookie 的服務是沒想像多的，如果不是開發給其它網站用的第三方服務的話（不是掛 script 而已），那其實沒那麼常見，舉例來說：很多人可能會覺得 Google Analytic 會受影響，但是其實並沒有，一般網站掛 Google Analytic 算是掛上 3rd-party script，但是它寫的 cookie 是 1st party cookie，也就是寫在你的網站的 domain 下，Google 的文件也有很詳細的說明他的每個 cookie 的用途，然後仔細看就會找到還有寫如何跨網域追蹤，而這其實是需要帶一些參數過去的，如果 GA 是用 3rd-party cookie...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="https://www.flickr.com/photos/othree/50122828112/" title="Apple ITP by othree, on Flickr"><img src="https://live.staticflickr.com/65535/50122828112_79ce3e54d3_b.jpg" intrinsicsize="1024x837" width="936" height="765" alt="Apple ITP" srcset="https://live.staticflickr.com/65535/50122828112_79ce3e54d3_b.jpg 1024w, https://live.staticflickr.com/65535/50122828112_73eaebf7b0_h.jpg 1600w" /></a></p>
<p>Apple 之前有<a href="https://webkit.org/blog/10218/full-third-party-cookie-blocking-and-more/">宣告</a>要完全阻擋 3rd-party cookie，iThome 也有相關的<a href="https://www.ithome.com.tw/news/136565">報導</a>，iOS 和 iPadOS 應該是已經上線了，然後最近 Mac 版 Safari 也快要上線了，所以這篇來記錄一下要怎樣因應還有一些參考資料。</p>
<p>其實真的會寫到第三方 cookie 的服務是沒想像多的，如果不是開發給其它網站用的第三方服務的話（不是掛 script 而已），那其實沒那麼常見，舉例來說：很多人可能會覺得 Google Analytic 會受影響，但是其實並沒有，一般網站掛 Google Analytic 算是掛上 3rd-party script，但是它寫的 cookie 是 1st party cookie，也就是寫在你的網站的 domain 下，Google 的文件也有很詳細的說明他的每個 cookie 的<a href="https://developers.google.com/analytics/devguides/collection/analyticsjs/cookie-usage">用途</a>，然後仔細看就會找到還有寫如何<a href="https://developers.google.com/analytics/devguides/collection/analyticsjs/cross-domain">跨網域追蹤</a>，而這其實是需要帶一些參數過去的，如果 GA 是用 3rd-party cookie 寫在 Google 自己的 domain 的話，要跨網域追蹤就不需要這樣帶參數了，我是覺得 Apple 的 ITP 比較是針對廣告和 Facebook，早幾年前 Facebook 可以用 like button 來簡單的做到跨站追蹤，現在那些 iframe 都會被認為是 3rd-party，cookie 會和 1st-party 放不同區（partition），甚至本來如果有先去看過 facebook.com 之後，會有 24 小時可以存取該網域 3rd-party cookie 的能力也在 <a href="https://webkit.org/blog/8311/intelligent-tracking-prevention-2-0/">ITP 2.0</a> 移除，facebook 後來加上了 <code>fbclid</code> 這個參數來追蹤連出去的連結，然後 <a href="https://webkit.org/blog/8828/intelligent-tracking-prevention-2-2/">ITP 2.2</a> 就又針對這種連結裝飾（link decoration）也設了 cookie 的存取限制（剛好同時也影響到 Google Analytic）。</p>
<p>如果真的是需要作為 3rd-party 端提供服務的話怎麼辦呢？其實一開始 Apple 那篇<a href="https://webkit.org/blog/10218/full-third-party-cookie-blocking-and-more/">文章</a>，有列了幾個方案，其中正規的兩個方案：</p>
<ol>
<li>用 OAuth 2.0 作為 user auth 的方案，然後第一方網站拿到 token 後自己存好（作為 1st-party cookie 或是其它儲存方法）。</li>
<li>用 <a href="https://webkit.org/blog/8124/introducing-storage-access-api/">Storage Access API</a>，這是 Apple 所提出的 Web API，在被視為第三方的 context 中（例如 iframe），可以透過 Storage Access API 來取得 1st-party cookie 的存取權限，不過一般人直接用這個 API 要權限，可能會覺得奇怪怎麼 Safari 都沒有問使用者要不要給，權限就拿到了，其實這是因為 Apple 那邊的想法是這個 API 要盡可能的不干擾使用者，所以只有被歸類（classified）為有追蹤能力的域名才會跳出視窗跟使用者詢問，至於這個歸類的方法是在 <a href="https://webkit.org/blog/7675/intelligent-tracking-prevention/">ITP 1.0</a> 中提出的，Apple 考慮到隱私問題，所以這個機制是用機器學習的，每台電腦/裝置都維護自己的清單，沒有中心化的黑名單（Firefox 應該是用這種方法），而如果想要親自驗證自己的 domain 要是被歸類為追蹤網站的話，會發生什麼事的話，也有篇<a href="https://webkit.org/blog/8387/itp-debug-mode-in-safari-technology-preview-62/">文章</a>介紹，我自己有測試過也確實看到了那個詢問視窗。</li>
</ol>
<p>然後如果要用 Storage Access API，其實還有些限制，Safari 從 1.0 開始，就有個針對 3rd-party cookie 的限制，就是使用者要曾經直接訪問過該網域，並且寫入過 1st-party cookie，之後該網域才能對 3rd-party cookie 做存取，而這項限制也延伸到 Storage Access API 這邊，一樣要先作為 1st-party 寫入過 cookie，之後才能夠透過 Storage Access API 取得 1st-party cookie 的存取權限，Apple 負責 ITP 的 <a href="https://twitter.com/johnwilander">John Wilander</a> 最近正在寫相關的<a href="https://bugs.webkit.org/show_bug.cgi?id=193277#c7">文件</a>，裡面就有提到，然後這個限制 Firefox 也有，不過 Firefox 似乎是 30 天內有訪問過該網域就可以。</p>
<p>寫到這邊，其實有件事情忘記先提，就是網路上你去搜尋 <strong>Safari 3rd Party Cookie</strong> 會找到一些方法說可以成功讀寫 3rd-party cookie 的，那些全部都已經失效了，而且不只是 cookie，所有可以寫入的東西像是 DOM Storage 也是有受到一樣的限制保護的（然後 Storage Access API 現在<a href="https://twitter.com/jonathandavis/status/1204102948571119616">只能拿到 cookie 的權限</a>），目前也沒有出現其它的繞過方式，而且就算有人找到，Apple 都會修掉的，所以如果有這需求還是趕快用 Storage Access API 實做吧（別忘了 feature detection）。</p>
<p>然後或許有人會覺得 ITP 沒檔到 Google Analytic 好像沒什麼意義，其實 <a href="https://twitter.com/johnwilander">John Wilander</a> 早在 2017 年就有在 WebAppSec 稍微<a href="https://lists.w3.org/Archives/Public/public-webappsec/2017Mar/0034.html">提過 Single Trust</a> 這件事，提的就是網頁內掛的 3rd-party script 其實是安全性隱憂，應該只有同 domain 的東西可以信任，在 cookie 這邊來說就是 3rd-party script 不應該有存取網站 1st-party cookie 的權限（不過後來發生的是<a href="https://twitter.com/GossiTheDog/status/1038333980423204865">某航空公司的信用卡資訊輸入頁面放的第三方 script 會做 key log</a>），如果真的進行，這個改變可以想像的到影響非常的巨大，舉例來說，以前的 Performance Practice 其中一項是把 static file 放到 CDN 並且用不同 domain host，但是這樣其實就會被當成是 3rd-party script 了，雖然他在我們的認知下是可信任的，然後目前也有非常大量的現存網站是這樣做。目前 Apple 也有在做一些相關的研究，其中一個已經廣為人知(?)的就是 Safari 現在有在<a href="https://bugs.webkit.org/show_bug.cgi?id=204262">紀錄 3rd-party script 的數量</a>，另外就是我之前在 <a href="https://blog.othree.net/log/2019/05/27/incrementally-better-cookies/">SameSite Cookie</a> 這篇文章有提到的，Mike West 起草的 <a href="https://github.com/WICG/first-party-sets">First-Party Sets</a>，透過 <code>/.well-known/</code> 下的檔案定義可以被認為是 1st-party 的 domain 清單，假設未來真的要做到 single trust 的程度，要處理 CDN 之類的問題，像是 First-Party Sets 的機制就不可少。</p>
<p>最後附上一些延伸的參考資料：</p>
<ul>
<li><a href="https://github.com/whatwg/html/issues/3338#issuecomment-357790890">在提案 Storage Access API 時，Apple 工程師整理的 Safari 行為</a></li>
<li><a href="https://medium.com/@meistudio/the-rise-of-privacy-8c9ea5f53b09">Paul Li 之前在介紹 SameSite Cookie 時也有討論到相關的問題，並且還有一個 test suite</a></li>
<li><a href="https://www.tenmax.io/archives/14012">TenMax 介紹 ITP 的這篇文章的 ITP 發展歷程整理的很棒</a></li>
<li><a href="https://note.com/martech">日本的 AD EBiS マーテック研究会 的文章資訊都很新且深入</a></li>
</ul>
</b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000969" baseName="2019">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2020-05-02</b:date>
				<b:time>21:53:25</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>2019</b:title>
			<b:content>
				<b:summary> 2019 年的回顧也是拖很久，這次也是拖到五月了，不過基本上和去年一樣，沒有什麼拍照，所以只能做一個整年度的紀錄，這一年最大的不同就是整個年度都要照顧小孩，其實我的生活形態已經變成像是過一週算一週的方式了，每週維持一樣的生活步調，咬牙苦撐完 52 週就結束了這一年，還蠻沒有什麼過了一年的實感，不過小孩在兩歲前的成長真的是不等人，去年還在那邊爬來爬去，現在已經可以跑來跑去講一堆話了，根據我周邊同事和我的感想，小孩最可愛就是一歲半到兩歲中間這段時期了（其實有點跨到今年了），還沒有生小孩或是小孩還沒到這個年記得朋友還請把握這段時期XD 另外一件值得記錄的就是 COSCUP 還有負責辦 Open Web Technologies 議程（今年因為眾多考量就沒繼續了，留待明年再說），一開始投稿階段稿量很高，結果仔細一看發現一人多投的還不少，有點尷尬，最後選出來的海外講者也比我預期的還多，我自覺是沒有統整的很好，甚至有些 TODO 自己都沒做好，當然也是因為要照顧小還有些事情不能親自下去，而且其實意外的不好找人幫忙，像是 Moztw 社群內就找不太到人來幫忙當天的雜事，另外就是去年半下來我認為最需要避免再犯的就是在徵稿階段就需要提示主辦方對於講者能提供多少補助，像是 COSCUP 無法對講者旅費做補助，就讓兩位外國講者無法參與，我印象中其中一位是內部審稿已經過關了但是才確定不行，因為我在跟他聯絡後，該名講者也有自己去找他們公司內部的補助，不過沒有過關，如果能提早告知這個部分的資訊，應該是可以避免這個過程，也不用讓雙方都有錯誤的期待了。...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="https://www.flickr.com/photos/othree/49845723161/" title="2019 by othree, on Flickr"><img src="https://live.staticflickr.com/65535/49845723161_bccd876b09_b.jpg" intrinsicsize="768x1024" width="576" height="768" alt="2019" srcset="https://live.staticflickr.com/65535/49845723161_bccd876b09_b.jpg 768w, https://live.staticflickr.com/65535/49845723161_349079f004_h.jpg 1200w" /></a></p>
<p>2019 年的回顧也是拖很久，這次也是拖到五月了，不過基本上和去年一樣，沒有什麼拍照，所以只能做一個整年度的紀錄，這一年最大的不同就是整個年度都要照顧小孩，其實我的生活形態已經變成像是過一週算一週的方式了，每週維持一樣的生活步調，咬牙苦撐完 52 週就結束了這一年，還蠻沒有什麼過了一年的實感，不過小孩在兩歲前的成長真的是不等人，去年還在那邊爬來爬去，現在已經可以跑來跑去講一堆話了，根據我周邊同事和我的感想，小孩最可愛就是一歲半到兩歲中間這段時期了（其實有點跨到今年了），還沒有生小孩或是小孩還沒到這個年記得朋友還請把握這段時期XD</p>
<p>另外一件值得記錄的就是 COSCUP 還有負責辦 Open Web Technologies 議程（今年因為眾多考量就沒繼續了，留待明年再說），一開始投稿階段稿量很高，結果仔細一看發現一人多投的還不少，有點尷尬，最後選出來的海外講者也比我預期的還多，我自覺是沒有統整的很好，甚至有些 TODO 自己都沒做好，當然也是因為要照顧小還有些事情不能親自下去，而且其實意外的不好找人幫忙，像是 Moztw 社群內就找不太到人來幫忙當天的雜事，另外就是去年半下來我認為最需要避免再犯的就是在徵稿階段就需要提示主辦方對於講者能提供多少補助，像是 COSCUP 無法對講者旅費做補助，就讓兩位外國講者無法參與，我印象中其中一位是內部審稿已經過關了但是才確定不行，因為我在跟他聯絡後，該名講者也有自己去找他們公司內部的補助，不過沒有過關，如果能提早告知這個部分的資訊，應該是可以避免這個過程，也不用讓雙方都有錯誤的期待了。</p>
</b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000968" baseName="scroll-to-text">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2020-02-21</b:date>
				<b:time>00:15:26</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>Scroll to Text</b:title>
			<b:content>
				<b:summary> Chrome 最近有個新功能叫做 Scroll to Text Fragment，雖然在 Chrome Platform Status 網站那邊寫 M80 會可以用，不過我實際上測試正式版的 Chrome 80 還沒有，但是 Chrome Canary 已經是預設啟用了。這個功能讓你可以在網址內的 Fragment 段（# 後面那段），用新定義的語法來讓瀏覽器直接捲動到指定的文字位置，語法如下： #:~:text=[prefix-,]textStart[,textEnd][,-suffix] context |-------match-----| context 如果有在用 Chrome Canary 的可以直接試試看這個連結。這個語法其實還蠻靈活的，可以和以前 id identifier 並用： #targetID:~:text=theText 這樣如果找不到文字，瀏覽器還可以改用 targetID 定位；如果網頁內有多個一樣的文字，可以用 prefix- 和 -suffix...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="https://www.flickr.com/photos/othree/49561392806/" title="Scroll To Text by othree, on Flickr"><img src="https://live.staticflickr.com/65535/49561392806_362f83d4cd_b.jpg" intrinsicsize="1024x869" width="1024" height="869" alt="Scroll To Text" srcset="https://live.staticflickr.com/65535/49561392806_362f83d4cd_b.jpg 1024w, https://live.staticflickr.com/65535/49561392806_a7ec190efb_h.jpg 1600w" /></a></p>
<p>Chrome 最近有個新功能叫做 <a href="https://chromestatus.com/feature/4733392803332096">Scroll to Text Fragment</a>，雖然在 Chrome Platform Status 網站那邊寫 M80 會可以用，不過我實際上測試正式版的 Chrome 80 還沒有，但是 Chrome Canary 已經是預設啟用了。這個功能讓你可以在網址內的 Fragment 段（<code>#</code> 後面那段），用新定義的語法來讓瀏覽器直接捲動到指定的文字位置，語法如下：</p>
<pre><code>#:~:text=[prefix-,]textStart[,textEnd][,-suffix]
          context  |-------match-----|  context
</code></pre>
<p>如果有在用 Chrome Canary 的可以直接試試看<a href="https://blog.othree.net/log/2019/10/20/activation-behavior/#:%7E:text=%E6%AD%A3%E5%A4%A7%E5%85%89%E6%98%8E">這個連結</a>。這個語法其實還蠻靈活的，可以和以前 id identifier 並用：</p>
<pre><code>#targetID:~:text=theText
</code></pre>
<p>這樣如果找不到文字，瀏覽器還可以改用 targetID 定位；如果網頁內有多個一樣的文字，可以用 <code>prefix-</code> 和 <code>-suffix</code> 給出前後文來讓瀏覽器找到正確的目標；再來就是如果要標註的文字很長，也可以用 <code>textStart,textEnd</code> 來標註，這樣就不用在網址內放一大串文字了；然後也可以標註多段文字，用 <code>&amp;</code> 切開，和給參數的格式一樣：</p>
<pre><code>#:~:text=firstText&amp;text=secondText
</code></pre>
<p><a href="https://wicg.github.io/ScrollToTextFragment/">正式的文件</a>現在是放在 WICG 那邊，GitHub 那邊的 <a href="https://github.com/WICG/ScrollToTextFragment/">Proposal repo</a> 則是有一段解釋<a href="https://github.com/WICG/ScrollToTextFragment/#enter-">為什麼選擇用 <code>:~:</code></a> 當分割符號的段落，我覺得這種脈絡的紀錄是很重要的，這邊簡單說一下，一開始有考慮過 <code>##</code> 這種比較容易想到形式，但是有些 URL parser 是由右到左的可能會有錯誤，再來他們列出一堆不太會有人去用的組合來當候選，然後去看 Google 那邊過去五年的紀錄，結果就是 <code>:~:</code> 最沒人用，只有 0.0000039% 的比例，所以目前是選擇這個分割符號。</p>
<p>我是蠻喜歡這新功能（標準？）的，<a href="https://github.com/mozilla/standards-positions/issues/194">Mozilla 也覺得還可以考慮看看</a>，不過目前這個功能似乎還沒在 stable channel 啟用，應該是因為<a href="https://www.theregister.co.uk/2020/02/20/chrome_deploys_deeplinking/">隱私問題</a>，Chrome 負責的團隊也有整理相關的<a href="https://docs.google.com/document/d/1YHcl1-vE_ZnZ0kL2almeikAj2gkwCq8_5xwIae7PVik/edit#heading=h.uoiwg23pt0tx">資訊</a>，大概簡單說就是有可能透過頁面的讀取時間或是 <code>scrollTop</code> 的值來判斷你開啟的頁面內有沒有特定字串，然後就會有外洩的疑慮。另外還有一個讓人擔心的問題是這個功能可能會讓那些本來用 fragment 當成 route 的 SPA 壞掉，<a href="https://github.com/w3ctag/design-reviews/issues/392">W3C TAG design review</a> 那邊他們自己也有提到。</p>
<p>其實這個 scroll to text 的功能在之前還有一套提案，不過不是由瀏覽器開發商所提，而是 indieweb 提的，叫做 <a href="https://indieweb.org/fragmention">Fragmention</a>，這組提案功能就比較陽春而且不成熟了：</p>
<pre><code>#some%20text
</code></pre>
<p>重點在裡面那個 <code>%20</code>，也就是空白字元，Freagmention 的提案是你的目標文字要有空白，因為 HTML 的 id 不能包含空白字元，所以如果有空白字元就表示不是要找 id，這個提案由我來看就是很明顯沒搞過 i18n 的啊～</p>
</b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000967" baseName="w3c-tag">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2020-02-01</b:date>
				<b:time>23:40:51</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>W3C TAG</b:title>
			<b:content>
				<b:summary> 去年我在規劃 COSCUP 的 Open Web Technologies 的時候，有準備了一個備用的演講，題目是關於到哪裡可以追蹤到新的網路標準發展，其中的一個可以關注的資源，就是 W3C TAG(Technical Architecture Group) 的 design-reviews，我一開始其實是誤打誤撞發現這個 issue list 的，有點像是發現寶庫一樣，幾乎所有的新標準都會到這邊提出審查請求，而除了標准之外，Web 相關的比較重要的修改提案也會發到這邊來，像是最近要進行的 SameSite=Lax by default，還有剛提出的 Partial freezing of the User-Agent string。 W3C 有一份 Consortium Process Document 的文件（簡稱為 Process），內容包括了 W3C 的一些基本構成，規範如何建立 Working/Interest Group 以及這些小組如何發展技術報告（Technical Report），這邊說的技術報告包括了草稿到...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="https://www.flickr.com/photos/othree/49471463826/" title="3874462 by othree, on Flickr"><img src="https://live.staticflickr.com/65535/49471463826_8119bbecd7_n.jpg" width="320" height="320" alt="" srcset="https://live.staticflickr.com/65535/49471463826_8119bbecd7_n.jpg 320w" /></a></p>
<p>去年我在規劃 COSCUP 的 Open Web Technologies 的時候，有準備了一個備用的演講，題目是關於到哪裡可以追蹤到新的網路標準發展，其中的一個可以關注的資源，就是 <a href="https://www.w3.org/2001/tag/">W3C TAG(Technical Architecture Group)</a> 的 <a href="https://github.com/w3ctag/design-reviews">design-reviews</a>，我一開始其實是誤打誤撞發現這個 issue list 的，有點像是發現寶庫一樣，幾乎所有的新標準都會到這邊提出審查請求，而除了標准之外，Web 相關的比較重要的修改提案也會發到這邊來，像是最近要進行的 <a href="https://github.com/w3ctag/design-reviews/issues/373">SameSite=Lax by default</a>，還有剛提出的 <a href="https://github.com/w3ctag/design-reviews/issues/467">Partial freezing of the User-Agent string</a>。</p>
<p>W3C 有一份 <a href="https://www.w3.org/2019/Process-20190301/">Consortium Process Document</a> 的文件（簡稱為 Process），內容包括了 W3C 的一些基本構成，規範如何建立 Working/Interest Group 以及這些小組如何發展技術報告（Technical Report），這邊說的技術報告包括了草稿到 W3C Rec（推薦標準），除此之外，這份文件還有制訂了兩個獨立組別的構成方法，這兩個組分別為：<a href="https://www.w3.org/2002/ab/">Advisory Board</a>（顧問團） 和 Technical Architecture Group（TAG、技術架構組），兩者都有負責解決跨技術報告（aka 標準）之間的問題，前者是負責非技術的問題，後者則是負責技術問題。W3C TAG 的成員結構現在是：</p>
<ul>
<li>Tim Bernes Lee 為終生成員</li>
<li>W3C 總監</li>
<li>總監可以提名三位成員</li>
<li>另外有六名成員則是由 Advisory Committee（諮詢委員會，其實就是所有 W3C 會員代表人）選出</li>
</ul>
<p>其實看他們的審查意見都覺得真的很厲害，不過這些成員的名字其實曝光都很少。然後我一直很好奇，為什麼幾乎所有的技術報告都來這邊提審查，應該是有在技術報告開發流程上寫到才會這麼多，結果那份 Process 文件找來找去就是沒找到，花了幾個小時最後終於在其中一分外連的「如何建立一個工作/興趣小組」的文件中找到，其實找 TAG 做審查是 <a href="https://www.w3.org/Guide/process/charter.html#horizontal-review">Horizontal Review</a>（橫向審查） 的一部分，Horizontal Review 指的是技術報告在發展的過程中，找各個相關/相依的小組一起來做審查，而這些組別間的關係其實是寫在小組各自的章程裡面的，該份文件還有列出一些比較關鍵的組別：</p>
<ul>
<li><a href="https://www.w3.org/WAI/APA/">WAI Accessible Platform Architectures (APA) Working Group</a> 親和力</li>
<li><a href="https://www.w3.org/International/review-request">Internationalization Working Group</a> 多國語言支援</li>
<li><a href="https://www.w3.org/Security/wiki/IG">Security Interest Group</a> 安全性</li>
<li><a href="https://www.w3.org/Privacy/">Privacy Interest Group</a> 隱私</li>
<li><a href="https://www.w3.org/2001/tag/">Technical Architecture Group</a> 技術架構</li>
</ul>
<p>這五個確實是非常跨技術的主題，尤其是 TAG，技術的議題都跑不掉，我也循線去其它四個小組看了一下，發現真的也有相關的審查請求，不過不同小組申請審查的管道不一樣，有的還是用 W3C 傳統的 mailing-list，TAG 已經用 GitHub 算是非常先進而且方便訂閱了，從開發者的角度如果要關心網路標準的新發展可以以這邊為主，明顯比較缺的就是 CSS 的新東西不會發到這邊，我自己是還有訂 CSS Working Group 的 issue list。</p>
<p>最後就是現在台灣的 W3C 會員似乎只剩下 <a href="http://www.dpublishing.org.tw/">台灣數位出版聯盟</a>，日本現在倒是很多組織有加入了，像是不知道為什麼加入的 DWANGO，看起來也沒參加 Chinese Interest Group 的 <a href="https://w3c.github.io/danmaku/api.zh.html">Danmaku</a>。</p>
</b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

	</b:entries>
</b:blog>
