<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>i</b:listType>
			<b:listData listID="index"/>
		</b:entriesMeta>

		<b:entry entryID="000786" baseName="more-twitter-cards">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-01-05</b:date>
				<b:time>00:34:06</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>More Twitter Cards</b:title>
			<b:content>
				<b:summary>進入本題前，先岔題到 open graph 一下，就是前兩天才注意到要用 Open Graph protocol 的話，其實在 html 裡面要加上 prefix="og: http://ogp.me/ns#" 的屬性和值： &lt;!DOCTYPE html&gt; &lt;html xmlns="http://www.w3.org/1999/xhtml" lang="zh-tw" prefix="og: http://ogp.me/ns#" &gt; 這個 prefix 屬性其實是 RDFa 來的，所以其實 Open Graph Protocol 也是走 RDFa 系統，Twitter Card 就比較沒走的這麼語意網了。 這篇其實是要說 Twitter Card 的更新，首先是卡片的種類變多了，在一開始只有 Photo、Summary 和...</b:summary>
				<b:mainContent><p>進入本題前，先岔題到 open graph 一下，就是前兩天才注意到要用 <a href="http://opengraphprotocol.org/">Open Graph protocol</a> 的話，其實在 html 裡面要加上 <code>prefix="og: http://ogp.me/ns#"</code> 的屬性和值：</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html
    xmlns="http://www.w3.org/1999/xhtml"
    lang="zh-tw"
    prefix="og: http://ogp.me/ns#"
&gt;
</code></pre>

<p>這個 prefix 屬性其實是 <a href="http://www.w3.org/TR/rdfa-syntax/#s_syntax">RDFa</a> 來的，所以其實 Open Graph Protocol 也是走 RDFa 系統，Twitter Card 就比較沒走的這麼語意網了。</p>

<p>這篇其實是要說 Twitter Card 的更新，首先是卡片的種類變多了，在一開始只有 Photo、Summary 和 Player 三種，現在則又多了 App、Product、Gallery 和 Summary Large Image 四種。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11754350766/" title="Twitter Card by othree, on Flickr"><img src="//farm4.staticflickr.com/3755/11754350766_84fd72a647_b.jpg" width="853" height="1024" alt="Twitter Card" src-1="(max-width: 768px)  //farm4.staticflickr.com/3755/11754350766_84fd72a647.jpg 1x, //farm4.staticflickr.com/3755/11754350766_84fd72a647_b.jpg 2x"  /></a></p>

<p>其中 App 還蠻早就有了，以前如果貼 iTunes Store 連結的話就可以看到，只是一開始沒開放申請的樣子，新的幾種卡片我最想要的其實是 Summary Large Image，這個其實就是最早的 Photo 卡片的樣子，和 Photo 其實只差 description，我一開始會偷用 Photo 卡片來讓文章的圖片比較大，只是他們後來改成不會顯示我提供的文章摘要，直到前幾天才發現有新的 Summary Large Image，完全就是當初的 Photo 卡啊，所以看到就立馬申請下去。</p>

<p>申請的過程和以前也不一樣了，現在是在卡片<a href="https://dev.twitter.com/docs/cards/validation/validator">測試工具</a>那邊先測試，如果驗證格式沒問題就會出現黃色的通知和申請鈕可以按下去，如果是已經申請通過的話就會是綠色的。還有就是測試工具也多了組出 sample code 的功能，還算蠻不錯的，有些比較複雜的卡片格式就可以利用這個工具來搞清楚。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11754351616/" title="Twitter Card by othree, on Flickr"><img src="//farm3.staticflickr.com/2806/11754351616_f76fa313e2_b.jpg" width="1024" height="694" alt="Twitter Card" src-1="(max-width: 768px)  //farm3.staticflickr.com/2806/11754351616_f76fa313e2.jpg 1x, //farm3.staticflickr.com/2806/11754351616_f76fa313e2_b.jpg 2x" src-2="//farm3.staticflickr.com/2806/11754351616_4d814b31d0_k.jpg 2x" /></a></p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000785" baseName="scrolling-performance">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-01-01</b:date>
				<b:time>01:49:24</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>Scrolling Performance</b:title>
			<b:content>
				<b:summary>元旦就是要來發篇技術文章的啦。 一直覺得我的 blog 在 scroll 的時候好像不是很順暢，把之前亂加的 parallax 特效拿掉也沒什麼改善，於是週末花了些時間研究了一下，其實要改進捲動時效能可以作的事情大概就是那些，Fixing a parallax scrolling website to run in 60 FPS 這篇文章有整理成條目： Resize、scroll 事件不要在迴圈內綁 Resize、scroll 事件的 handler 用 requestAnimationFrame 來執行 避免 resize 大張圖片 避免 background-size HTML5 Rocks 的 Scrolling Performance 這篇文章則是介紹如何分析網站捲動的效能，也有提到一些上面那篇文章沒講到的項目，像是避免 repaint，避免一些計算比較昂貴的 style 等。另外最近還有一個很有名的...</b:summary>
				<b:mainContent><p>元旦就是要來發篇技術文章的啦。</p>

<p>一直覺得我的 blog 在 scroll 的時候好像不是很順暢，把之前亂加的 parallax 特效拿掉也沒什麼改善，於是週末花了些時間研究了一下，其實要改進捲動時效能可以作的事情大概就是那些，<a href="http://kristerkari.github.io/adventures-in-webkit-land/blog/2013/08/30/fixing-a-parallax-scrolling-website-to-run-in-60-fps/">Fixing a parallax scrolling website to run in 60 FPS</a> 這篇文章有整理成條目：</p>

<ol>
<li>Resize、scroll 事件不要在迴圈內綁</li>
<li>Resize、scroll 事件的 handler 用 requestAnimationFrame 來執行</li>
<li>避免 resize 大張圖片</li>
<li>避免 background-size</li>
</ol>

<p>HTML5 Rocks 的 <a href="http://www.html5rocks.com/en/tutorials/speed/scrolling/">Scrolling Performance</a> 這篇文章則是介紹如何分析網站捲動的效能，也有提到一些上面那篇文章沒講到的項目，像是避免 repaint，避免一些計算比較昂貴的 style 等。另外最近還有一個很有名的 <a href="http://www.thecssninja.com/javascript/pointer-events-60fps">hack</a>，是在捲動時，使用 <code>pointer-events: none;</code> 來避免元件產生 hover 的特效結果增加畫面 painting 的運算。</p>

<p>在講我遇到的問題前想先來說一下下面這張圖怎麼看：</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11624929755/" title="Scroll cause image resize by othree, on Flickr"><img src="//farm4.staticflickr.com/3780/11624929755_c33c8aa3f0_b.jpg" width="1024" height="750" alt="Scroll cause image resize" src-1="(max-width: 768px)  //farm4.staticflickr.com/3780/11624929755_c33c8aa3f0.jpg 1x, //farm4.staticflickr.com/3780/11624929755_c33c8aa3f0_b.jpg 2x"  /></a></p>

<p>這張圖是 Chrome 的內建開發工具，目前要作 performance tuning 最好的工具還是 Chrome 開發工具的這個 Timeline 和 Profile，網路上找的到的相關資源也是以 Chrome 為主。這張圖的上半是 framerate 的狀態表示，上面的綠色 bar 代表的是生成畫面前運算執行的時間，所以是越短越好，可以看到那個區塊有兩條橫線，右邊寫了 30fps 和 60fps，意思是執行時間只要能壓在那條線下面，就可以讓頁面有該 frame rate 的表現。下半部就可以拉近去細看不同時間點做了哪些事情，像是圖片 decode、resize、事件的 callback 執行等等都可以分辨。</p>

<p>使用這個開發工具來看到底是那邊計算很花時間，結果發現一直有 image resize 的運算在發生，即使我的圖片都已經全部讀好，頁面從頭卷到尾過，只要從新捲動就會發現 Chrome 又重新把 resize 過的 image 再 resize 一次，後來同事 <a href="http://blog.linmic.net/">Linmic</a> 寫了 test case 來測試各種定義圖片寬高的方法：</p>

<ul>
<li><code>&lt;img&gt;</code> width/height 屬性</li>
<li>CSS 相對長度定義（百分比、em）</li>
<li>CSS 絕對長對定義（px）</li>
<li>CSS 背景圖 + background-size</li>
</ul>

<p>等等，結果發現只有第一個方法圖片不會因為頁面捲動而需要重新 resize，簡單說就是，如果圖片的寬高是用到 CSS 的定義來決定的話，那在 Chrome 下就會有個 bug 是，頁面捲動時，即使圖片尺寸沒有變過，Chrome 還是會重新去 resize。根據目測，這問題在 Firefox 和 Safari 上是沒有的樣子，Chrome 的差距比較大，而且現在因為 responsive design 的關係，文章內的插圖很多寬高都是相對的寬高，像是很多人用的 <a href="http://getbootstrap.com/">Bootstrap</a> 就是這樣，其實影響的範圍蠻廣的，而且找不到方法可以避開，搜尋一下看起來是有一張 <a href="https://code.google.com/p/chromium/issues/detail?id=162514">issue</a>，希望能夠早點修復啊。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000784" baseName="2013">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2013-12-28</b:date>
				<b:time>20:01:51</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>2013</b:title>
			<b:content>
				<b:summary> 今年終於要結束了，照慣例來回顧一下，一樣是一個月挑一張照片，今年拍的照片數量比去年多了四千張左右，上傳的照片數量更是倍數成長，無法像去年一張一張看，只好從重要的事件中挑選了。因為強迫限制了一個月一張，所以也很多我很喜歡的照片無法貼在這篇，像是研討會今年去了有六場也只挑到其中兩場的照片，去日本的櫻花雖然覺的醍醐寺的最漂亮，但是因為天氣沒很好還是放棄那邊的照片。...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="http://www.flickr.com/photos/othree/8377172426/" title="WebConf 2013 Day 1 by othree, on Flickr"><img src="//farm9.staticflickr.com/8323/8377172426_f61d9b4002_b.jpg" width="1024" height="683" alt="WebConf 2013 Day 1" src-1="(max-width: 768px)  //farm9.staticflickr.com/8323/8377172426_f61d9b4002.jpg 1x, //farm9.staticflickr.com/8323/8377172426_f61d9b4002_b.jpg 2x" src-2="//farm9.staticflickr.com/8323/8377172426_a7a7fc1c96_k.jpg 2x" /></a></p>

<p>今年終於要結束了，照慣例來回顧一下，一樣是一個月挑一張照片，今年拍的照片數量比去年多了四千張左右，上傳的照片數量更是倍數成長，無法像去年一張一張看，只好從重要的事件中挑選了。因為強迫限制了一個月一張，所以也很多我很喜歡的照片無法貼在這篇，像是研討會今年去了有六場也只挑到其中兩場的照片，去日本的櫻花雖然覺的醍醐寺的最漂亮，但是因為天氣沒很好還是放棄那邊的照片。</p>
</b:mainContent>
				<b:extendContent><p><a class="thumbnail" href="http://www.flickr.com/photos/othree/8477826443/" title="FF21 by othree, on Flickr"><img src="//farm9.staticflickr.com/8374/8477826443_45100488aa_b.jpg" width="1024" height="683" alt="FF21" src-1="(max-width: 768px)  //farm9.staticflickr.com/8374/8477826443_45100488aa.jpg 1x, //farm9.staticflickr.com/8374/8477826443_45100488aa_b.jpg 2x" src-2="//farm9.staticflickr.com/8374/8477826443_af234665df_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/8601062182/" title="Mozilla 15週年小 Party by othree, on Flickr"><img src="//farm9.staticflickr.com/8367/8601062182_89c3c88036_b.jpg" width="1024" height="683" alt="Mozilla 15週年小 Party" src-1="(max-width: 768px)  //farm9.staticflickr.com/8367/8601062182_89c3c88036.jpg 1x, //farm9.staticflickr.com/8367/8601062182_89c3c88036_b.jpg 2x" src-2="//farm9.staticflickr.com/8367/8601062182_012fb1072e_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/8664825451/" title="清水寺 夜櫻 by othree, on Flickr"><img src="//farm9.staticflickr.com/8245/8664825451_447f9e3de4_b.jpg" width="1024" height="683" alt="清水寺 夜櫻" src-1="(max-width: 768px)  //farm9.staticflickr.com/8245/8664825451_447f9e3de4.jpg 1x, //farm9.staticflickr.com/8245/8664825451_447f9e3de4_b.jpg 2x" src-2="//farm9.staticflickr.com/8245/8664825451_254684d8a2_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/8815321259/" title="大稻埕碼頭 by othree, on Flickr"><img src="//farm8.staticflickr.com/7282/8815321259_48a43c162a_b.jpg" width="1024" height="683" alt="大稻埕碼頭" src-1="(max-width: 768px)  //farm8.staticflickr.com/7282/8815321259_48a43c162a.jpg 1x, //farm8.staticflickr.com/7282/8815321259_48a43c162a_b.jpg 2x" src-2="//farm8.staticflickr.com/7282/8815321259_d16e8239c0_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/9158987767/" title="台大 at Night by othree, on Flickr"><img src="//farm8.staticflickr.com/7394/9158987767_2c2c9649a7_b.jpg" width="1024" height="683" alt="台大 at Night" src-1="(max-width: 768px)  //farm8.staticflickr.com/7394/9158987767_2c2c9649a7.jpg 1x, //farm8.staticflickr.com/7394/9158987767_2c2c9649a7_b.jpg 2x" src-2="//farm8.staticflickr.com/7394/9158987767_eab77f0438_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/9238189089/" title="台南夕陽 by othree, on Flickr"><img src="//farm3.staticflickr.com/2881/9238189089_f3dbea33e2_b.jpg" width="1024" height="683" alt="台南夕陽" src-1="(max-width: 768px)  //farm3.staticflickr.com/2881/9238189089_f3dbea33e2.jpg 1x, //farm3.staticflickr.com/2881/9238189089_f3dbea33e2_b.jpg 2x" src-2="//farm3.staticflickr.com/2881/9238189089_8e17feff18_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/9441279600/" title="COSCUP 2013 Day 2 by othree, on Flickr"><img src="//farm3.staticflickr.com/2841/9441279600_e3ceecf7d2_b.jpg" width="1024" height="218" alt="COSCUP 2013 Day 2" src-1="(max-width: 768px)  //farm3.staticflickr.com/2841/9441279600_e3ceecf7d2.jpg 1x, //farm3.staticflickr.com/2841/9441279600_e3ceecf7d2_b.jpg 2x" src-2="//farm3.staticflickr.com/2841/9441279600_cd527072cd_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/9848423285/" title="wedding by othree, on Flickr"><img src="//farm8.staticflickr.com/7307/9848423285_b16120d18d_b.jpg" width="1024" height="683" alt="wedding" src-1="(max-width: 768px)  //farm8.staticflickr.com/7307/9848423285_b16120d18d.jpg 1x, //farm8.staticflickr.com/7307/9848423285_b16120d18d_b.jpg 2x" src-2="//farm8.staticflickr.com/7307/9848423285_4bfcaab152_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/10320981036/" title="Mozilla San Francisco by othree, on Flickr"><img src="//farm3.staticflickr.com/2820/10320981036_fe6d198645_b.jpg" width="1024" height="683" alt="Mozilla San Francisco" src-1="(max-width: 768px)  //farm3.staticflickr.com/2820/10320981036_fe6d198645.jpg 1x, //farm3.staticflickr.com/2820/10320981036_fe6d198645_b.jpg 2x" src-2="//farm3.staticflickr.com/2820/10320981036_2ab7f610ea_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/10927028886/" title="福壽山農場 by othree, on Flickr"><img src="//farm3.staticflickr.com/2822/10927028886_0803fb0752_b.jpg" width="1024" height="683" alt="福壽山農場" src-1="(max-width: 768px)  //farm3.staticflickr.com/2822/10927028886_0803fb0752.jpg 1x, //farm3.staticflickr.com/2822/10927028886_0803fb0752_b.jpg 2x" src-2="//farm3.staticflickr.com/2822/10927028886_09ef3ae64a_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11497654454/" title="新北歡樂耶誕城 by othree, on Flickr"><img src="//farm4.staticflickr.com/3787/11497654454_51337d0be8_b.jpg" width="1024" height="683" alt="新北歡樂耶誕城" src-1="(max-width: 768px)  //farm4.staticflickr.com/3787/11497654454_51337d0be8.jpg 1x, //farm4.staticflickr.com/3787/11497654454_51337d0be8_b.jpg 2x" src-2="//farm4.staticflickr.com/3787/11497654454_8a4798e8c6_k.jpg 2x" /></a></p>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000783" baseName="w3c-validator-suite">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2013-12-25</b:date>
				<b:time>22:13:16</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>W3C Validator Suite</b:title>
			<b:content>
				<b:summary>W3C 不知道何時推出了 Validator Suite，有別於 Markup Validator，這次是個收費服務，目前註冊帳號會送 20 個使用額度，收費也是買使用額度，而不是算時間的，Validator Suite，是基於 Markup Validator 而發展的，本身是 close source，兩者最主要的差別在於 Validator Suite 是可以一口氣檢查大量網頁的，你丟網址給它，它可以一直往下深入檢查每個子頁面，Markup Validator 則是一次只有一頁，這樣設計的目標對象其實應該是商業網站之類的，至於 W3C 的 Markup Validator 則是 open source 的，這幾年也一直有更新，整個進步很多，很多新標準的支援都很快，像是 itemprop、itemscope 之類的屬性都能真正的判斷是否有正確使用，而不只是單純的判斷是不是個合法的屬性。...</b:summary>
				<b:mainContent><p>W3C 不知道何時推出了 <a href="https://validator-suite.w3.org/">Validator Suite</a>，有別於 <a href="http://validator.w3.org/">Markup Validator</a>，這次是個收費服務，目前註冊帳號會送 20 個使用額度，收費也是買使用額度，而不是算時間的，Validator Suite，是基於 Markup Validator 而發展的，本身是 close source，兩者最主要的差別在於 Validator Suite 是可以一口氣檢查大量網頁的，你丟網址給它，它可以一直往下深入檢查每個子頁面，Markup Validator 則是一次只有一頁，這樣設計的目標對象其實應該是商業網站之類的，至於 W3C 的 Markup Validator 則是 open source 的，這幾年也一直有更新，整個進步很多，很多新標準的支援都很快，像是 itemprop、itemscope 之類的屬性都能真正的判斷是否有正確使用，而不只是單純的判斷是不是個合法的屬性。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11547188533/" title="W3C Validator Suite by othree, on Flickr"><img src="//farm8.staticflickr.com/7397/11547188533_3c7063ebd6_b.jpg" width="1024" height="759" alt="W3C Validator Suite" src-1="(max-width: 768px)  //farm8.staticflickr.com/7397/11547188533_3c7063ebd6.jpg 1x, //farm8.staticflickr.com/7397/11547188533_3c7063ebd6_b.jpg 2x"  /></a></p>
</b:mainContent>
				<b:extendContent><p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11547188043/" title="W3C Validator Suite by othree, on Flickr"><img src="//farm8.staticflickr.com/7429/11547188043_349956d8f8_b.jpg" width="1024" height="759" alt="W3C Validator Suite" src-1="(max-width: 768px)  //farm8.staticflickr.com/7429/11547188043_349956d8f8.jpg 1x, //farm8.staticflickr.com/7429/11547188043_349956d8f8_b.jpg 2x"  /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11547187753/" title="W3C Validator Suite by othree, on Flickr"><img src="//farm8.staticflickr.com/7375/11547187753_caccfa7ac7_b.jpg" width="1024" height="759" alt="W3C Validator Suite" src-1="(max-width: 768px)  //farm8.staticflickr.com/7375/11547187753_caccfa7ac7.jpg 1x, //farm8.staticflickr.com/7375/11547187753_caccfa7ac7_b.jpg 2x"  /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11547187353/" title="W3C Validator Suite by othree, on Flickr"><img src="//farm8.staticflickr.com/7344/11547187353_5f87f77d7d_b.jpg" width="1024" height="759" alt="W3C Validator Suite" src-1="(max-width: 768px)  //farm8.staticflickr.com/7344/11547187353_5f87f77d7d.jpg 1x, //farm8.staticflickr.com/7344/11547187353_5f87f77d7d_b.jpg 2x"  /></a></p>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000782" baseName="asmjs-1half-x-slower-than-native">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2013-12-24</b:date>
				<b:time>00:59:41</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>asm.js 效能再提昇</b:title>
			<b:content>
				<b:summary> Mozilla 之前發表 asm.js 後，公佈的速度大約是原生應用是的兩倍慢，不過最近這個數字又變好了，根據 20 日 Mozilla Hacks 發表的文章，現在這個數字已經變成 1.5 倍了，主要是歸功於 float32 數值處理最佳化，不過目前還不建議直接使用這個新的 float32 最佳化機制，Mozilla Blog 有一篇文章則是在講比較技術面的內容，大概看一下，應該是犧牲精確度來換取速度。本來我是覺的要真的和 native 一樣快不太可能，不過看到新的 benchmark 結果，覺的這天或許不會太久就會到來吧。...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11517198133/" title="asm1.5b by othree, on Flickr"><img src="//farm6.staticflickr.com/5520/11517198133_293174bb1e_b.jpg" width="1024" height="509" alt="asm1.5b" src-1="(max-width: 768px)  //farm6.staticflickr.com/5520/11517198133_293174bb1e.jpg 1x, //farm6.staticflickr.com/5520/11517198133_293174bb1e_b.jpg 2x"  /></a></p>

<p>Mozilla 之前發表 asm.js 後，公佈的速度大約是原生應用是的兩倍慢，不過最近這個數字又變好了，根據 20 日 Mozilla Hacks 發表的<a href="https://hacks.mozilla.org/2013/12/gap-between-asm-js-and-native-performance-gets-even-narrower-with-float32-optimizations/">文章</a>，現在這個數字已經變成 1.5 倍了，主要是歸功於  float32 數值處理最佳化，不過目前還不建議直接使用這個新的 float32 最佳化機制，Mozilla Blog 有一篇<a href="https://blog.mozilla.org/javascript/2013/11/07/efficient-float32-arithmetic-in-javascript/">文章</a>則是在講比較技術面的內容，大概看一下，應該是犧牲精確度來換取速度。本來我是覺的要真的和 native 一樣快不太可能，不過看到新的 benchmark 結果，覺的這天或許不會太久就會到來吧。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000781" baseName="ipad-air">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2013-12-21</b:date>
				<b:time>22:06:51</b:time>
			</b:datetime>
			<b:category>buy</b:category>
			<b:title>iPad Air</b:title>
			<b:content>
				<b:summary> 前陣子入手的 iPad Air 真是很讓人滿意，歷代最輕，更好的螢幕，這些大家都知道的部份就不用說了，所以我要來說的是 smart cover 的部份。這次隨著 iPad 尺寸的改變，也推出了新版的 smart cover，針對之前的使用者回報做了許多的改進，官方有說到的就是和 iPad 接觸連接的地方有加上保護層，不會像以前一樣刮傷 iPad 表面，另外我還發現兩點改進比較少人講到。 這次發售前就已經可以發現，新版的 smart cover 的折線少了一條變成只有兩條，以前有三條四面，然後可以組成一個可以固定住的三角形，不過新版的只有三面，照理說三角形會不能固定，所以發表時我就開始很好奇會怎樣讓三角形固定，結果蘋果是用磁鐵來讓三角形固定住，真的是沒想到可以在邊邊還加磁鐵啊。 另外一個則是如果把 smart cover 翻到 iPad 後面，在主機的後面也有隱藏的磁鐵來幫你把 smart cover 定位好，說定位不是固定其實是因為雖然有磁鐵，但是這邊用的比較弱，像照片那樣其實很容易掉下來，但是手拿時好拿很多，也比較不會因為長期這樣拿而讓 smart cover 的轉軸那邊變形。 我覺的這些改進雖然小，但是卻可以表現出蘋果確實有在根據使用者習慣來改進產品，感覺不錯。...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11453059264/" title="iPad Air by othree, on Flickr"><img src="//farm8.staticflickr.com/7331/11453059264_69bdb81298_b.jpg" width="1024" height="683" alt="iPad Air" src-1="(max-width: 768px)  //farm8.staticflickr.com/7331/11453059264_69bdb81298.jpg 1x, //farm8.staticflickr.com/7331/11453059264_69bdb81298_b.jpg 2x" src-2="//farm8.staticflickr.com/7331/11453059264_c8c4363402_k.jpg 2x" /></a></p>

<p>前陣子入手的 iPad Air 真是很讓人滿意，歷代最輕，更好的螢幕，這些大家都知道的部份就不用說了，所以我要來說的是 smart cover 的部份。這次隨著 iPad 尺寸的改變，也推出了新版的 smart cover，針對之前的使用者回報做了許多的改進，官方有說到的就是和 iPad 接觸連接的地方有加上保護層，不會像以前一樣刮傷 iPad 表面，另外我還發現兩點改進比較少人講到。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11452986475/" title="iPad Air by othree, on Flickr"><img src="//farm8.staticflickr.com/7449/11452986475_ca2f9dcf9c_b.jpg" width="1024" height="683" alt="iPad Air" src-1="(max-width: 768px)  //farm8.staticflickr.com/7449/11452986475_ca2f9dcf9c.jpg 1x, //farm8.staticflickr.com/7449/11452986475_ca2f9dcf9c_b.jpg 2x" src-2="//farm8.staticflickr.com/7449/11452986475_12bddee1a9_k.jpg 2x" /></a></p>

<p>這次發售前就已經可以發現，新版的 smart cover 的折線少了一條變成只有兩條，以前有三條四面，然後可以組成一個可以固定住的三角形，不過新版的只有三面，照理說三角形會不能固定，所以發表時我就開始很好奇會怎樣讓三角形固定，結果蘋果是用磁鐵來讓三角形固定住，真的是沒想到可以在邊邊還加磁鐵啊。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11478998005/" title="iPad Air smart cover by othree, on Flickr"><img src="//farm4.staticflickr.com/3772/11478998005_4ea7cae18c_b.jpg" width="1024" height="683" alt="iPad Air smart cover" src-1="(max-width: 768px)  //farm4.staticflickr.com/3772/11478998005_4ea7cae18c.jpg 1x, //farm4.staticflickr.com/3772/11478998005_4ea7cae18c_b.jpg 2x" src-2="//farm4.staticflickr.com/3772/11478998005_68fce9a600_k.jpg 2x" /></a></p>

<p>另外一個則是如果把 smart cover 翻到 iPad 後面，在主機的後面也有隱藏的磁鐵來幫你把 smart cover 定位好，說定位不是固定其實是因為雖然有磁鐵，但是這邊用的比較弱，像照片那樣其實很容易掉下來，但是手拿時好拿很多，也比較不會因為長期這樣拿而讓 smart cover 的轉軸那邊變形。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11479017524/" title="iPad Air smart cover by othree, on Flickr"><img src="//farm4.staticflickr.com/3690/11479017524_4a81b2693e_b.jpg" width="1024" height="683" alt="iPad Air smart cover" src-1="(max-width: 768px)  //farm4.staticflickr.com/3690/11479017524_4a81b2693e.jpg 1x, //farm4.staticflickr.com/3690/11479017524_4a81b2693e_b.jpg 2x" src-2="//farm4.staticflickr.com/3690/11479017524_53b6672b6d_k.jpg 2x" /></a></p>

<p>我覺的這些改進雖然小，但是卻可以表現出蘋果確實有在根據使用者習慣來改進產品，感覺不錯。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

	</b:entries>
</b:blog>
