<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>y</b:listType>
			<b:listData listID="2010">2010</b:listData>

			<b:previous>
				<b:mTitle>2009</b:mTitle>
				<b:mDate>2009</b:mDate>
			</b:previous>


			<b:next>
				<b:mTitle>2011</b:mTitle>
				<b:mDate>2011</b:mDate>				
			</b:next>

		</b:entriesMeta>

		<b:entry entryID="000665" baseName="eye-fi-experience">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-12-15</b:date>
				<b:time>11:24:25</b:time>
			</b:datetime>
			<b:category>buy</b:category>
			<b:title>eye-fi 無線記憶卡之講在前頭</b:title>
			<b:content>
				<b:summary>知道現在有 SD 卡內建無線模組可以直接傳照片出來的人可能不多，不過隨著 Mobile01 的 介紹 後，知道的人也是有在增加，我自己是在今年七月就拖朋友幫忙從美國帶了一張目前最頂級的 Pro X2 ，用了約半年有不少經驗，都是入手前不太容易知道的事情，我覺得可以分享一下免得有人誤入歧途。...</b:summary>
				<b:mainContent><p>知道現在有 SD 卡內建無線模組可以直接傳照片出來的人可能不多，不過隨著 Mobile01 的 <a href="http://www.mobile01.com/newsdetail.php?id=9703">介紹</a> 後，知道的人也是有在增加，我自己是在今年七月就拖朋友幫忙從美國帶了一張目前最頂級的 <a href="http://www.eye.fi/products/prox2">Pro X2</a> ，用了約半年有不少經驗，都是入手前不太容易知道的事情，我覺得可以分享一下免得有人誤入歧途。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/4713524095/" title="Flickr 上 othree 的 Eye-Fi"><img src="//farm5.static.flickr.com/4028/4713524095_6474fab9f9.jpg" width="500" height="375" alt="Eye-Fi" /></a></p>
</b:mainContent>
				<b:extendContent><p>首先是建議的 <a href="http://www.eye.fi/products/compare-cards">卡款</a>，我個人是建議買到 <a href="http://www.eye.fi/products/explorex2">Explorer X2</a> 就可以了，甚至如果你只需要 4G 的話那我建議可以 <a href="http://www.eye.fi/products/geox2">Geo X2</a> 就可以，我當初買到 <a href="http://www.eye.fi/products/prox2">Pro X2</a> 其實是為了 <a href="http://zh.wikipedia.org/zh-tw/%E7%84%A1%E7%B7%9A%E9%9A%A8%E6%84%8F%E7%B6%B2%E8%B7%AF">ad hoc</a> 點對點傳輸功能，不過這個功能我幾乎沒用到，我當初設想我的使用情境是出外玩時，晚上可以把相片傳到筆電裡面，即時我的電腦沒網路也可以用 ad hoc ，可是 Eye-Fi 強制要求你的接收端機器要能連上網路，相片才有辦法傳進去，所以這個功能我只有用過幾次，至於熱點台灣都沒有，完全不用考慮，所以第二個看的功能就是要支援地理資訊標籤（Geo Tag），Geo Tag 有抓到的話基本上都蠻準的，不過我最近覺得它越來越抓不到了，可能是和老化有關，而且有時候在家裡拍的他還是抓到家裡的位置，不過這些照片其實我不想加上地理資訊標籤的，也有時候會回家傳照片時才抓位置，然後就標錯位置，再來它是用 Wi-Fi 定位，所以去郊外的話基本上是沒用的，其實這也有點諷刺，我是覺得 Geo Tag 還是要相機本身支援才比較方便，SONY最近已經開始有些相機有了，希望其它幾家也能跟進。</p>

<p>第二點是根據我的觀察， Eye-Fi 的運作機制其實不是從你的電腦上傳照片到網路上，而是會存一份在他們的主機上，再從那邊丟到相簿，我不知道使用者條款上有沒有寫，不過我想有些人可能會不能接受，最近 Eye-Fi 提供了一個加值服務就是讓使用者可以存取這些他們備份的照片，叫做 <a href="http://www.eye.fi/how-it-works/eyefiview">Eye-Fi View</a> ，而這個自動上傳到他們主機上的功能(?)似乎是不能關掉的，雖然新版軟體設定有個選項是要不要上傳到 Eye-Fi View，不過我實在不確定這兩件事是不是等價，前面說的 ad hoc 傳輸還是需要接收端有連外網路我想一部分原因就是這個。</p>

<p>第三點是它和讀卡機相容性不好，很容易就抓不到卡片，尤其是記憶卡內有還沒上傳的照片時，即使是它用自己的讀卡機也會出現一下又消失，如果要有線傳輸的話，最穩定的方法反而是放相機裡面用傳輸線。</p>

<p>第四點是網路設定一定要先裝在電腦上設定，這不是要說他壞話，而是要說沒有其他方法可以做到沒電腦也可以改設定，如果 iPad + Camera Kit 可以在外面即時新增網路 SSID 的話會方便很多，所以如果你要到某個沒去過的地方用那邊的無線網路，那就一定要在那邊有電腦，裝上 Eye-Fi 程式和讀卡機才能修改設定，當然筆電也可以，不過有時候就是不想要帶筆電啊。</p>

<p>第五點是和 <a href="http://www.apple.com/tw/ipad/">iPad</a> 的混和應用，這也是我在買之前就很期待的功能之一，不過我到最近才買了 iPad ， iPad 上有個 App 叫 <a href="http://2ndnature.thebrew.dk/shuttersnitch/">ShutterSnitch</a> ，基本上是一個相片管理工具，不過他最引人注目的就是它可以讓 iPad 接收 Eye-Fi 的檔案，只要有 Wi-Fi 區網就可以，iPad 也不需要連的上外部網路，不過使用上有些小細節要注意，第一次（相機開機後）連結會比較花時間，因為 Eye-Fi 要去搜尋區網內的機器，然後似乎 ShutterSnitch 會去偽裝成 Eye-Fi 的主機來接收檔案，這個搜尋的時間要花比較久，不過之後就蠻快了，傳輸速度其實 X2 系列一直都不差，網路好的話我 5MB 的照片也只要數秒鐘就可以進電腦，所以出外的話就變成看你的無線網路品質了，當然配合 iPad 目前最好的用法是買個無線 AP 隨身帶著，不過這部份我我目前還沒有機器測試，至少我有朋友已經這樣操作一段時間了，然後他的作法是相機同時存 RAW + JPG，JPG 只存 2M 大小，然後也只傳 JPG 到 iPad 做預覽用。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5223460439/" title="Flickr 上 othree 的 台大卡漫講座"><img src="//farm6.static.flickr.com/5084/5223460439_ed7678486c.jpg" width="375" height="500" alt="台大卡漫講座" /></a></p>

<p>比較可惜的是 iPad 不支援 ad hoc ，不然應該可以省去那個搜尋時間，相機要一直開機對小 DC 實在是很傷電，說到耗電，還有一點一定要講的，就是用上 Eye-Fi 的話，吃電會吃比較快，尤其是如果你移植在測試網路和設定來設定去的話，所以我現在都還是會帶一張普通記憶卡備用。</p>

<p>另外 JB 過的 iPad 據說可以開 Wi-Fi AP 做網路分享，至於能不能用來接收 Eye-Fi 照片我就不知道了，iOS 4.2.1 目前還沒完美的 JB 所以我還不會去嘗試，或許有朋友有機會可以試試看，順便提一下，ShutterSnitch 在 iOS 4 之後，在設定 <a href="http://www.flickr.com/">Flickr</a> 相簿的認證時會出問題，有人試出了方法避開問題，首先是把 ShutterSnitch 的 Flickr 設定砍掉，然後 Safari 登出 Flickr ，接著照正常步驟重來一次，到登入 flickr 頁面的時候，按兩下 Home 鍵去程序管理那邊把 ShutterSnitch 關掉，然後回 Safari 那邊登入並同意授權，接著系統會自動開啟 ShutterSnitch ，這時候認證資訊它應該就能正確接到了。</p>

<p>最後要講的就是無線記憶卡這東西，其實有在 <a href="http://www.engadget.com/2010/06/22/toshiba-looking-to-standardize-wireless-memory-cards-crash-eye/">制定標準</a> 了，現在只有一家廠商，所以什麼都要照他的遊戲規則來，如果有個標準的規格可以走，那應該未來用途會更加廣泛，不過從新聞出來到現在也四五個月了，其實也沒個影就是了Q_Q。</p>
</b:extendContent>
			</b:content>

			<b:comments commentCount="6"></b:comments>


		</b:entry>

		<b:entry entryID="000664" baseName="carcassonne-die-pest">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-12-12</b:date>
				<b:time>22:36:37</b:time>
			</b:datetime>
			<b:category>buy</b:category>
			<b:title>卡卡頌 黑死病擴充 中文規則</b:title>
			<b:content>
				<b:summary>黑死病在卡卡頌遊戲中開始散佈了，當有疫區版塊進入遊戲的話，每個玩家都必須要在他的回合散佈鼠疫，如果跟隨者碰上有的版塊成為疫區，跟隨者就必須被移走，而且不會得到分數，但是你可以試著逃離鼠疫，不過僅限於該條道路、農田或城市的範圍，或是你可以試著控制蔓延的方向，也因此有些地方可能永遠都不會成為疫區。 新東西 6 個疫情爆發點版塊。 6 個方形疫區爆發點標記物，正面為數字 1 到 6 ，背面為草地。 18 個圓形的蒼蠅標記物，用於標記哪些版塊是疫區，正面深紅色為有帶原，背面粉紅色為無帶原。 疫區定義 一片疫情爆發版塊加上所有相鄰的有深紅色蒼蠅的版塊。如果只有疫情爆發點也是疫區。 相連於疫區的粉紅色蒼蠅所在的版塊。 沒有連接到的粉紅色蒼蠅所在的版塊則不算在疫區範圍內。 遊戲前準備 先洗其他基本版塊，然後隨機挑出 17 張先放旁便，把 6 張疫區版塊放進剩下的版塊內，混在一起洗過，先放在旁邊。 遊戲過程 先從那 17 張沒有混入疫區爆發點的部分開始遊戲，因此疫情爆發點會在第 17 張版塊出現之後才有機會出現，當第一次抽到時，拿出標有 1 的方形的疫情爆發點記號，放在版塊上，抽到疫區版塊的人不能放跟隨者，不過他可以選擇把爆發點放在對他有利的位置。 備註：紅色的數字標記並不會切開任何區塊，即使它蓋在上面。 情蔓延 從第一個疫區版塊進入遊戲後，黑死病就開始蔓延了，每個玩家在他的回合都要拿一個圓形蒼蠅標記放進遊戲，並且要紅面朝上，連接到疫區上（不可斜角連接），疫區的定義包括疫情爆發點和有蒼蠅而且有接上疫區的板塊了，當然，已經有蒼蠅的板塊上不可以在放其他蒼蠅了。 如果蒼蠅放到一塊有跟隨者的板塊上，這些跟隨者都要回到玩家手上，並且不會得到任何分數。 玩家可以選擇讓黑死病往任意的方向散佈。 逃離 當開始有黑死病蔓延之後，玩家就可以執行一個特殊的動作，他可以讓他的跟隨者逃離鼠疫的疫區。不過只限制在他所站區塊的範圍內（城市、路、農田）。 備註：小偷不能穿過路口，農夫可以穿過橋下，但是不能跨越道路，修道士則完全不能逃離。 跟隨者們可以逃到同一塊版塊上，但是不可以是疫區的範圍內。 疫情再次爆發...</b:summary>
				<b:mainContent><p>黑死病在卡卡頌遊戲中開始散佈了，當有疫區版塊進入遊戲的話，每個玩家都必須要在他的回合散佈鼠疫，如果跟隨者碰上有的版塊成為疫區，跟隨者就必須被移走，而且不會得到分數，但是你可以試著逃離鼠疫，不過僅限於該條道路、農田或城市的範圍，或是你可以試著控制蔓延的方向，也因此有些地方可能永遠都不會成為疫區。</p>

<h4>新東西</h4>

<ul>
<li>6 個疫情爆發點版塊。</li>
<li>6 個方形疫區爆發點標記物，正面為數字 1 到 6 ，背面為草地。</li>
<li>18 個圓形的蒼蠅標記物，用於標記哪些版塊是疫區，正面深紅色為有帶原，背面粉紅色為無帶原。</li>
</ul>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5251400282/" title="Flickr 上 othree 的 卡卡頌 黑死病擴充"><img src="//farm6.static.flickr.com/5001/5251400282_dcc36325c0.jpg" width="500" height="375" alt="卡卡頌 黑死病擴充" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5251401306/" title="Flickr 上 othree 的 卡卡頌 黑死病擴充"><img src="//farm6.static.flickr.com/5168/5251401306_c26e591c91.jpg" width="500" height="375" alt="卡卡頌 黑死病擴充" /></a></p>

<h4>疫區定義</h4>

<ul>
<li>一片疫情爆發版塊加上所有相鄰的有深紅色蒼蠅的版塊。如果只有疫情爆發點也是疫區。</li>
<li>相連於疫區的粉紅色蒼蠅所在的版塊。</li>
</ul>

<p>沒有連接到的粉紅色蒼蠅所在的版塊則不算在疫區範圍內。</p>

<h4>遊戲前準備</h4>

<p>先洗其他基本版塊，然後隨機挑出 17 張先放旁便，把 6 張疫區版塊放進剩下的版塊內，混在一起洗過，先放在旁邊。</p>

<h4>遊戲過程</h4>

<p>先從那 17 張沒有混入疫區爆發點的部分開始遊戲，因此疫情爆發點會在第 17 張版塊出現之後才有機會出現，當第一次抽到時，拿出標有 1 的方形的疫情爆發點記號，放在版塊上，抽到疫區版塊的人不能放跟隨者，不過他可以選擇把爆發點放在對他有利的位置。</p>

<p>備註：紅色的數字標記並不會切開任何區塊，即使它蓋在上面。</p>

<h4>情蔓延</h4>

<p>從第一個疫區版塊進入遊戲後，黑死病就開始蔓延了，每個玩家在他的回合都要拿一個圓形蒼蠅標記放進遊戲，並且要紅面朝上，連接到疫區上（不可斜角連接），疫區的定義包括疫情爆發點和有蒼蠅而且有接上疫區的板塊了，當然，已經有蒼蠅的板塊上不可以在放其他蒼蠅了。</p>

<p>如果蒼蠅放到一塊有跟隨者的板塊上，這些跟隨者都要回到玩家手上，並且不會得到任何分數。</p>

<p>玩家可以選擇讓黑死病往任意的方向散佈。</p>

<h4>逃離</h4>

<p>當開始有黑死病蔓延之後，玩家就可以執行一個特殊的動作，他可以讓他的跟隨者逃離鼠疫的疫區。不過只限制在他所站區塊的範圍內（城市、路、農田）。</p>

<p>備註：小偷不能穿過路口，農夫可以穿過橋下，但是不能跨越道路，修道士則完全不能逃離。</p>

<p>跟隨者們可以逃到同一塊版塊上，但是不可以是疫區的範圍內。</p>

<h4>疫情再次爆發</h4>

<p>當另外一個疫情爆發點被抽到且拼上地圖時，拿出下一個疫區記號（下一個號碼）放在板塊上，抽到爆發點的玩家不能馬上放蒼蠅散佈鼠疫，但從下個玩家開始，他可以選擇散佈那一個疫區。</p>

<p>當沒有可以用的蒼蠅記號時，號碼最小的那個疫區記號就要翻到反面，並把蒼蠅記號也翻到背面變為潛伏期，而這些潛伏期的蒼蠅變成可以取走作為擴散其它疫區的蒼蠅。</p>

<p>當場上沒有潛伏期的蒼蠅時，在把下一個數字最小的疫區記號翻面，並照前面的規則進行。</p>

<p>如果有任何的蒼蠅記號沒有和疫區板塊連在一起時，不論是因為它旁邊的蒼蠅都進入潛伏期或是因為旁邊的疫區記號被翻面進入潛伏期，該蒼蠅都要翻面進入潛伏期。</p>

<h4>疫區合併</h4>

<p>不同的疫區很常接在一起，如果有兩個以上的疫區板塊連接進同個疫區，只保留數字最大的疫區記號，其它的疫區記號都要翻面進入潛伏期，確保場上有可用的蒼蠅。</p>

<p>如果疫區的範圍接上在潛伏期的蒼蠅記號，這些潛伏期的蒼蠅都會翻面成為該疫區的一部分，不過疫區記號如果翻面過，永遠不會再翻回來恢復成為疫區。</p>

<h4>特殊情形</h4>

<p>如果全部18個蒼蠅記號都連在同一個疫區上，玩家必須要從這些蒼蠅中選一個出來換到新的位置。只有當有下一個疫區板塊出現時，才恢復從潛伏期的蒼蠅記號中挑蒼蠅出來散佈疫區。</p>

<h4>計分</h4>

<p>其它的記分方式都照原來的規則，即使你的領地內有蒼蠅。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000663" baseName="mozilla-frontend-code-sta">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-12-12</b:date>
				<b:time>16:54:25</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>Mozilla 的 Frontend Code Standard</b:title>
			<b:content>
				<b:summary>之前 Bob 提到 Mozilla 有 WebDev:FrontendCodeStandards 這份文件，然後我就順手翻了一下，不知道之後會放到哪裡就是，不過本文本來就公開的，所以應該沒差。 中文版 WebDev:FrontendCodeStandards...</b:summary>
				<b:mainContent><p>之前 <a href="http://blog.bobchao.net/">Bob</a> 提到 Mozilla 有 <a href="https://wiki.mozilla.org/WebDev:FrontendCodeStandards">WebDev:FrontendCodeStandards</a> 這份文件，然後我就順手翻了一下，不知道之後會放到哪裡就是，不過本文本來就公開的，所以應該沒差。</p>

<ul>
<li><a href="https://docs.google.com/document/pub?id=1oqDLU-Ya61V4EmVhzbTzxAh6w-neGH_3AjjYxF6O5w0">中文版 WebDev:FrontendCodeStandards</a></li>
</ul>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000662" baseName="jsfck">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-29</b:date>
				<b:time>23:35:10</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>JSF*ck</b:title>
			<b:content>
				<b:summary>之前介紹過 jjencode 和 aaencode 這兩個讓 JavaScript 程式碼變難讀的編碼，作者又推出更厲害的 JSF*ck 了，只用了 []()!+ 這六種符號，不過是個簡單的 alert Hello World 就會編碼成上萬個字元，實在是厲害！...</b:summary>
				<b:mainContent><p><a href="http://blog.othree.net/log/2010/11/18/pprrjjaaencode/">之前</a>介紹過 jjencode 和 aaencode 這兩個讓 JavaScript 程式碼變難讀的編碼，作者又推出更厲害的 <a href="http://utf-8.jp/public/jsfuck.html">JSF*ck</a> 了，只用了 <code>[]()!+</code> 這六種符號，不過是個簡單的 alert Hello World 就會編碼成上萬個字元，實在是厲害！</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000661" baseName="wheel-of-fortune">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-27</b:date>
				<b:time>21:04:14</b:time>
			</b:datetime>
			<b:category>buy</b:category>
			<b:title>卡卡頌命運之輪中文規則</b:title>
			<b:content>
				<b:summary>今天剛入手，因為沒有中文規則就順手翻譯了，規則基本上是和基本版一樣，一些地方（和輪子相關的）有修改而已...</b:summary>
				<b:mainContent><p>今天剛入手，因為沒有中文規則就順手翻譯了，規則基本上是和基本版一樣，一些地方（和輪子相關的）有修改而已</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5211458978/" title="Flickr 上 othree 的 卡卡頌 命運之輪"><img src="//farm5.static.flickr.com/4112/5211458978_6d061c8721.jpg" width="375" height="500" alt="卡卡頌 命運之輪" /></a></p>
</b:mainContent>
				<b:extendContent><h4>準備</h4>

<p>4*4的命運之輪先放在桌面中間，粉紅色小豬放在 fortune 那格，頭朝著箭頭方向，接著以這個版塊為起始點，上面的路、城市和農地的計分規則不變</p>

<h4>遊戲進行</h4>

<p>如果玩家抽到一片命運之輪版塊上面有數字的，那就進入特殊行動（後述）</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5210874035/" title="Flickr 上 othree 的 卡卡頌 命運之輪"><img src="//farm6.static.flickr.com/5125/5210874035_c1b89df2ab.jpg" width="500" height="375" alt="卡卡頌 命運之輪" /></a></p>

<p>如果玩家沒有放任何一個跟隨者上剛拼上的版塊，他可以選擇把跟隨者放在命運之輪上空的皇冠區，圖上輪子邊邊那圈，一個位子上有三個皇冠，共有九個位子。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5210871205/" title="Flickr 上 othree 的 命運之輪"><img src="//farm5.static.flickr.com/4108/5210871205_22406902c6.jpg" width="500" height="375" alt="命運之輪" /></a></p>

<h4>命運之輪版塊（特殊行動）</h4>

<p>如果玩家抽到命運之輪版塊，他要執行下面的動作：</p>

<ol>
<li>移動粉紅色小豬，照著版塊上的數字移動 n 格</li>
<li>執行小豬移動到的位子指定的動作（命運之輪動作，後述）</li>
<li>計算在該格皇冠區上跟隨者的分數，跟隨者由玩家回收</li>
<li>接著進行其他正常遊戲步驟</li>
</ol>

<h5>1. 移動小豬</h5>

<p>玩家照著命運之輪上的小豬箭頭符號的方向移動小豬（順時針），而且必須完整移動命運之輪版塊上數字的格數。</p>

<h5>2. 執行命運之輪動作</h5>

<p>命運之輪上有六格，每格有不同的動作需要執行，只有小豬所在格子的動作需要執行，只有 "Fortune" 這格是只影響移動小豬的玩家，其他格子的影響都是所有玩家，這六個動作分別是：</p>

<p><strong>FORTUNE</strong></p>

<p>移動小豬的玩家得到三分</p>

<p><strong>TAX</strong></p>

<p>每位玩家的每個騎士都能得到分數： <br />
每位騎士可以得到該城市內自己同色的騎士數加上徽章數的分數 <br />
例如：一座城市有兩個徽章，兩個藍色騎士和一個紅色騎士，藍色騎士每個可以得到：2 騎士 + 2 徽章 = 4 分，藍色兩名騎士共得到 4 * 2 = 8 分；紅色騎士每名可以得到：1 騎士 + 2 徽章 = 3 分，紅色一名騎士共得到 3 * 1 = 3 分。</p>

<p><strong>FAMINE</strong></p>

<p>玩家所擁有的農田（要比人數）中有連結到完整的城市的話，每個城市得一分。</p>

<p><strong>STORM</strong></p>

<p>玩家手上（未使用的）有多少跟隨者就得幾分。</p>

<p><strong>INQUISITION</strong></p>

<p>看玩家有多少僧侶跟隨者，每個僧侶得兩分</p>

<p><strong>PLAGUE（鼠疫）</strong></p>

<p>每位玩家都要從地圖上拿回一位跟隨者，不可以從命運之輪上的皇冠區拿，玩家照順時鐘（玩家輪流的順序）的順序輪流執行。</p>

<h5>3. 皇冠區計分</h5>

<p>現在可以計算小豬停留該格皇冠區的跟隨者分數了，小豬只是經過的格子則不計算。</p>

<p>該格有一個皇冠區：站在上面的跟隨者得三分。該格有兩個皇冠區：如果只有一個跟隨者，該跟隨者得六分，如果有兩個跟隨者，每個個得三分，相同顏色的話該共得到六分。</p>

<p>算完分數後，得到分數的跟隨者都回到玩家手上，到遊戲結束時還沒得分的跟隨者就沒有分數了。</p>

<h5>4.照往常結束這個回合</h5>

<p>接這就照平常的遊戲步驟繼續進行</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5210872633/" title="Flickr 上 othree 的 命運之輪 浮水印"><img src="//farm6.static.flickr.com/5207/5210872633_3aa5e49634.jpg" width="500" height="375" alt="命運之輪 浮水印" /></a></p>
</b:extendContent>
			</b:content>

			<b:comments commentCount="1"></b:comments>


		</b:entry>

		<b:entry entryID="000660" baseName="carcassonne-and-expansions">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-24</b:date>
				<b:time>21:52:52</b:time>
			</b:datetime>
			<b:category>buy</b:category>
			<b:title>時至今日的卡卡頌擴充整理</b:title>
			<b:content>
				<b:summary>去年寫過一篇卡卡頌的 介紹 ，時至今日又出了一些擴充，所以決定另外單獨一篇來整理。 卡卡頌可以分為基本組合、大擴充、小擴充和其他分支三種，這篇主要整理的是前三種。 基本組合 卡卡頌, Carcassonne, 72 瘋小貓的卡卡頌介紹 命運之輪, Wheel of Fortune 2009, 72 2009 出的新版的基本組合，可以獨立遊戲，也可以和其他擴充甚至是原來的基本組合一起玩，72片版塊都是以前出現過的，其中63片是原來的基本組合中挑出的，另外新的初始版塊是一塊 4*4 的命運之輪，放在上面的小人可以藉由抽到的版塊移動，觸發不同的事件。...</b:summary>
				<b:mainContent><p>去年寫過一篇卡卡頌的 <a href="//blog.othree.net/log/2009/06/17/carcassonne/">介紹</a> ，時至今日又出了一些擴充，所以決定另外單獨一篇來整理。</p>

<p>卡卡頌可以分為基本組合、大擴充、小擴充和其他分支三種，這篇主要整理的是前三種。</p>

<h4>基本組合</h4>

<h5>卡卡頌, Carcassonne, 72</h5>

<p><a href="http://crazycat1130.pixnet.net/blog/post/1345560">瘋小貓的卡卡頌介紹</a></p>

<p><a href="http://www.flickr.com/photos/othree/3869472033/" title="Flickr 上 othree 的 P8301887"><img src="//farm3.static.flickr.com/2572/3869472033_676a22c735.jpg" width="500" height="375" alt="P8301887" /></a></p>

<h5>命運之輪, Wheel of Fortune 2009, 72</h5>

<p>2009 出的新版的基本組合，可以獨立遊戲，也可以和其他擴充甚至是原來的基本組合一起玩，72片版塊都是以前出現過的，其中63片是原來的基本組合中挑出的，另外新的初始版塊是一塊 4*4 的命運之輪，放在上面的小人可以藉由抽到的版塊移動，觸發不同的事件。</p>

<p><a href="http://www.flickr.com/photos/othree/5210871205/" title="Flickr 上 othree 的 命運之輪"><img src="//farm5.static.flickr.com/4108/5210871205_22406902c6.jpg" width="500" height="375" alt="命運之輪" /></a></p>
</b:mainContent>
				<b:extendContent><h4>大擴充</h4>

<h5>主教, Inns and Cathedrals, Wirtshäuser und Kathedralen, 2002, 18</h5>

<p>其實全名是旅館與主教教堂，這兩個東西都分別是可以讓路和城市的分數增加用的，不過副作用是沒完成不算分，所以我覺得那個主教教堂根本是婊人用的。</p>

<p>主教擴充有一個特點是，有了它才能擴充為六人的遊戲，它多了灰色的跟隨者。</p>

<h5>小豬, Traders and Builders, Händler und Baumeister, 2003, 24</h5>

<p>這個擴充多了貨物、小豬、建築師三種東西，我覺得最大的改變是多了幫人完成城堡的動機，小豬擴充還有付一個抽版塊用的袋子，不過買大盒版的話就沒有了。</p>

<p><a href="http://www.boardgamegeek.com/image/63832"><img src="//blog.othree.net/log/2009/06/17/carcassonne/1219907584800345382.jpg" width="400" height="300" alt="小豬擴充內容：包和新版塊、新單位、貨物和袋子" /></a></p>

<h5>火龍, The Princess and the Dragon, Burgfräulein und Drache, 2005, 30</h5>

<p>從這個擴充開始，卡卡頌就從闔家歡樂的溫馨遊戲開始慢慢變成友情破壞、互相廝殺的遊戲了～～，這個擴充的重點就是那個火龍，被火龍走過版塊上的小人都會被趕跑，卡卡頌終於開始可以攻擊對手了。</p>

<p><a href="http://www.flickr.com/photos/othree/3870259644/" title="Flickr 上 othree 的 可憐的黑米寶"><img src="//farm3.static.flickr.com/2585/3870259644_08307da97e.jpg" width="500" height="375" alt="可憐的黑米寶" /></a></p>

<h5>高塔, The Tower, Der Turm, March 2006, 18</h5>

<p>高塔也是友情破壞系列之一，可以建塔囚禁別的玩家的小人，而且被囚禁到還蠻慘的。除了新增的高塔，這個擴充還真的附了一個放地圖版塊的塔，不過似乎只能放到150多片。</p>

<p><a href="http://www.flickr.com/photos/othree/3920290602/" title="Flickr 上 othree 的 高塔"><img src="//farm3.static.flickr.com/2586/3920290602_3047e49f3e.jpg" width="500" height="375" alt="高塔" /></a></p>

<h5>市長, Abbey and Mayor, Abtei und Bürgermeister, October 2007, 18</h5>

<p>這個擴充比較不那麼刺激，每位玩家多了一片萬能的大修道院，另外還多了榖倉、車車、市長三種新單位。</p>

<h5>投石車, The Catapult, Das Katapult, 2008, 12</h5>

<p>投石車是最新的大擴充，真的就如標題，有台小小投石車和一些小紙片（石頭）可以丟東西，這款還蠻新的，目前比較不清楚，不過看來也是友情破壞擴充。</p>

<h5>橋樑與市集</h5>

<p>主要是多了橋樑、市集和堡壘三種要素，最西引人注目的便是橋樑，可以把本來接不起來的路接通，會被路切斷的農田也會因此接在一起，不過橋樑體積蠻大的，攜帶有點困難。市集則是競標活動，大家可以針對對手想要的版塊故意抬價，讓對方不致於賺太多。</p>

<p><a href="http://www.flickr.com/photos/othree/4809110588/" title="Flickr 上 othree 的 橋樑"><img src="//farm5.static.flickr.com/4136/4809110588_4d958fb130.jpg" width="500" height="375" alt="橋樑" /></a></p>

<h4>小擴充</h4>

<h5>河流, The River, Der Fluss, 2001, 12</h5>

<p>替代起始版塊的河流擴充，一開始就要先把河流拼完，然後農夫得分力量就大減XD。</p>

<h5>國王, King and Scout, König und Späher, 2003, 5</h5>

<p>多了城王和路王（這其實是卡坦用語），另外還有五個一般版塊，沒有很特別的地方就是。</p>

<h5>圍城, The Cathars, Die Katharer, 2004, 4</h5>

<p>其實應該叫異教徒，這個小擴充比較少見到，已經絕版了，現在改叫 Siege （圍城），不過實際上版塊圖不太一樣，舊版城市的城牆是被攻破的，新版則否，不知道是不是受了什麼壓力才改的@_@，2004年的異教徒也是目前唯一絕版的一組擴充，詳細規則可以看PTT 桌遊版精華區文章。</p>

<h5>異教徒, Cult, 2008, 5+1</h5>

<p>類似修道院的版塊，又稱為祭壇版塊，放在上面的小人就稱為異教徒，把祭壇放在修道院旁邊還會引發宗教對決XD，這組擴充的版塊數比較特別，其中第六片只有Cult, Siege and Creativity這個組合有，裡面的 Siege 就是包含新版的圍城版塊，今年出的新版 Big Box 也只有五片祭壇，會有這一片差距其實是因為版塊製作時，數量一定都是六的倍數，規則一樣在PTT 精華區那篇文章有。</p>

<h5>伯爵, The Count of Carcassonne, Der Graf von Carcassonne, 2004, 12</h5>

<p>伯爵擴充裡面的這座城才是真的卡卡頌城！以前作的那些都是城市喔～～，有圖為證，這款擴充規則稍微複雜點。</p>

<p><a href="http://www.flickr.com/photos/othree/3878300774/" title="Flickr 上 othree 的 卡卡頌城"><img src="//farm3.static.flickr.com/2170/3878300774_a41cf8d433.jpg" width="500" height="375" alt="卡卡頌城" /></a></p>

<h5>河流二, The River II, Der Fluss II, November 2005, 12</h5>

<p>新的河流二代多了一條支流，讓河流的變化更多，還可以和河流一起用，作出超長河流XD。</p>

<p><a href="http://www.flickr.com/photos/othree/3611434742/" title="Flickr 上 othree 的 做洞"><img src="//farm4.static.flickr.com/3376/3611434742_9a51480785.jpg" width="500" height="375" alt="做洞" /></a></p>

<h5>桌遊季刊, The Mini-Expansion, Winter 2006, 12</h5>

<p>雜誌附送的12片基本版塊，其中兩片是河流，沒有浮水印，是唯一丟進去後就不好挑出來的擴充組合，其他的大小擴充不是有浮水印，就是很好判斷（像是祭壇、圍城）。</p>

<h5>麥田, Crop Circles 2010, 6</h5>

<p>好像是現在德國買基本組合會送的小擴充（相當於以前的河流擴充），抽到麥田的人可以根據麥田上的圖形來做出特殊動作，像是多放一個人或是移除一個小人。</p>

<h5>隧道, The Tunnel 2009, 4</h5>

<p>SpeilBox 2009 第六期的小擴充，多了四塊有隧道的版塊以及一些連結隧道用的 Token，讓道路的連結多了一點變化。</p>

<p><a href="http://www.flickr.com/photos/othree/5030500636/" title="Flickr 上 othree 的 三格四分的路"><img src="//farm5.static.flickr.com/4110/5030500636_a63158519c.jpg" width="500" height="375" alt="三格四分的路" /></a></p>

<h5>鼠疫, The Plague, 6</h5>

<p>SpeilBox 2010 第六期新的小擴充，目前只有版塊圖，規則還沒出來。</p>

<p><a href="http://www.flickr.com/photos/othree/5250799023/" title="Flickr 上 othree 的 卡卡頌 黑死病擴充"><img src="//farm6.static.flickr.com/5165/5250799023_d5097c3874.jpg" width="500" height="375" alt="卡卡頌 黑死病擴充" /></a></p>

<p>總計共有 343 片版塊了。</p>
</b:extendContent>
			</b:content>

			<b:comments commentCount="4"></b:comments>


		</b:entry>

		<b:entry entryID="000659" baseName="higher-order-javascript">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-23</b:date>
				<b:time>00:07:47</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>Higher Order JavaScript</b:title>
			<b:content>
				<b:summary>網路上已經有三篇類似標題的文章了，其中還有一篇是前幾天才出來的，不過那篇是用 CoffeeScript 寫的，所以我看不太下去，三篇依照我看到的順序： Higher-Order JavaScript by Sean M. Burke 這篇是三篇之中最長的，裡面似乎用了很多 Higher Order Perl 的內容來轉換到 JavaScript ，東西很多，我覺得蠻適合慢慢一次看一些的。 Higher Order Programming in JavaScript 這篇內容比較少，裡面講的是一些 JavaScript 使用的技巧，像是丟 function 做參數或是 return function 等，說基本也不算很基本，進階也不是很進階的內容。 Higher Order JavaScript by Piers Cawley 這篇是最新的，可是因為是 CoffeeScript 我完全看不下去，要看懂程式碼太累了，對 CoffeeScript 完全不熟習啊～～～...</b:summary>
				<b:mainContent><p>網路上已經有三篇類似標題的文章了，其中還有一篇是前幾天才出來的，不過那篇是用 <a href="http://jashkenas.github.com/coffee-script/">CoffeeScript</a> 寫的，所以我看不太下去，三篇依照我看到的順序：</p>

<h4><a href="http://interglacial.com/hoj/hoj.html">Higher-Order JavaScript</a> by Sean M. Burke</h4>

<p>這篇是三篇之中最長的，裡面似乎用了很多 <a href="http://hop.perl.plover.com/">Higher Order Perl</a> 的內容來轉換到 JavaScript ，東西很多，我覺得蠻適合慢慢一次看一些的。</p>

<h4><a href="http://w3future.com/html/stories/hop.xml">Higher Order Programming in JavaScript</a></h4>

<p>這篇內容比較少，裡面講的是一些 JavaScript 使用的技巧，像是丟 function 做參數或是 return function 等，說基本也不算很基本，進階也不是很進階的內容。</p>

<h4><a href="http://www.bofh.org.uk/2010/11/18/higher-order-javascript">Higher Order JavaScript</a> by Piers Cawley</h4>

<p>這篇是最新的，可是因為是 <a href="http://jashkenas.github.com/coffee-script/">CoffeeScript</a> 我完全看不下去，要看懂程式碼太累了，對 CoffeeScript 完全不熟習啊～～～</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000658" baseName="vim-for-python">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-22</b:date>
				<b:time>11:00:33</b:time>
			</b:datetime>
			<b:category>vim</b:category>
			<b:title>Vim for Python</b:title>
			<b:content>
				<b:summary> 昨天去參加了 OpenFoundry 辦的 Python 3 初學者課程，請到 Mosky 來介紹，結果我大概只聽了一半內容，一半的時間花在弄環境和調 Vim ，主要是參考 Python and vim: Make your own IDE 這篇，因為我沒有很常寫 Python ，所以只是大概裝一下， Syntax 和 縮排 和 自動完成 ，而且大部分時間是花在自動完成套件，因為他要 Vim 編譯出 +python ，我之前編的一直是 +python/dyn +python3/dyn ，差別在動態讀取，而且事實上我不知道怎樣動態讀取，所以實際上是沒有讀到 python library 的，後來經過不斷嘗試，暫時是先把 +python3 拿掉，就可以編出 +python...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5198373889/" title="Flickr 上 othree 的 pythoncomplete"><img src="//farm5.static.flickr.com/4131/5198373889_10fbb7c65a.jpg" width="500" height="347" alt="pythoncomplete" /></a></p>

<p>昨天去參加了 <a href="http://www.openfoundry.org/">OpenFoundry</a> 辦的 Python 3 初學者課程，請到 <a href="http://www.plurk.com/mosky">Mosky</a> 來介紹，結果我大概只聽了一半內容，一半的時間花在弄環境和調 Vim ，主要是參考 <a href="http://dancingpenguinsoflight.com/2009/02/python-and-vim-make-your-own-ide/">Python and vim: Make your own IDE</a> 這篇，因為我沒有很常寫 Python ，所以只是大概裝一下， <a href="http://www.vim.org/scripts/script.php?script_id=790">Syntax</a> 和 <a href="http://www.vim.org/scripts/script.php?script_id=974">縮排</a> 和 <a href="http://www.vim.org/scripts/script.php?script_id=1542">自動完成</a> ，而且大部分時間是花在自動完成套件，因為他要 Vim 編譯出 +python ，我之前編的一直是 +python/dyn +python3/dyn ，差別在動態讀取，而且事實上我不知道怎樣動態讀取，所以實際上是沒有讀到 python library 的，後來經過不斷嘗試，暫時是先把 +python3 拿掉，就可以編出 +python -python3 的版本，雖然沒有 pytohn3 ，不過這樣就夠執行 pythoncomplete 了，再配合像是 <a href="http://www.vim.org/scripts/script.php?script_id=1879">autocomplpop</a> 這個 plugin 就很方便了。</p>

<p><a href="http://www.vim.org/scripts/script.php?script_id=1542">pythoncomplete</a> 實在是很厲害，因為它會實際用 python 執行，所以 class 屬性這種實際執行下去才會知道的項目都能自動完成，這種功能在 Vim 下其實不太容易做出來，都還是要整合完整的 IDE 才有，我就很希望 JavaScript 也能做到這樣。雖然說 <a href="http://www.vim.org/scripts/script.php?script_id=1542">pythoncomplete</a> 沒做到很完美， function 回傳的值就無法判斷型別，算是小可惜，不過也還是很厲害了。</p>

<p><a href="http://dancingpenguinsoflight.com/2009/02/python-and-vim-make-your-own-ide/">Python and vim: Make your own IDE</a> 這篇文章還有不少和 Python 相關的設定，像是 <a href="http://www.vim.org/scripts/script.php?script_id=910">pydoc</a> 和 <a href="http://www.logilab.org/857">pylint</a> 的整合等等，有興趣的還可以在深入看看，我接下來要研究 Ruby 的部份了:P。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000657" baseName="pprrjjaaencode">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-18</b:date>
				<b:time>22:47:58</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>(pp|rr|jj|aa)encode</b:title>
			<b:content>
				<b:summary>很久以前聽 gugod 分享過 唐鳳 在 YAPC 那邊介紹的 ppencode， ppencode 是把 Perl 程式轉成只有英文字母的程式碼。 print "Hello World" 會變成像是下面這樣： #!/usr/bin/perl -w length q defined and print chr ord q open no and print chr ord q qr q and print chr ord q...</b:summary>
				<b:mainContent><p>很久以前聽 <a href="http://gugod.org/">gugod</a> 分享過 <a href="http://pugs.blogs.com/">唐鳳</a> 在 <a href="http://yapcasia.org/2010/">YAPC</a> 那邊介紹的 <a href="http://www.slideshare.net/autang/ppencode">ppencode</a>， ppencode 是把 Perl 程式轉成只有英文字母的程式碼。</p>

<pre><code>print "Hello World"
</code></pre>

<p>會變成像是下面這樣：</p>

<pre><code>#!/usr/bin/perl -w
length q defined and print chr ord q open no and print chr ord q qr q and print chr ord q tie lt and print chr ord qw q ne q and print chr ord q lt eval and print chr ord qq q q and print chr hex length q q not eval getsockname q and print chr ord uc q chr lc and print chr ord q ref or and print chr ord qw q le q and print chr ord qw q le q and print chr ord q local and print chr ord qq q q and print chr ord uc q qw eq and print chr ord q pop and print chr ord q qr eq and print chr ord qw q le q and print chr ord qw q die q and print chr hex length qq q getprotobyname while q and print chr oct oct ord q pop
</code></pre>

<p>網路上還有 <a href="http://namazu.org/~takesako/ppencode/demo.html">JS 實作</a>  ，投影片中其實還介紹了 Ruby 的 <a href="http://www.lab2.kuis.kyoto-u.ac.jp/~yyoshida/rrencode.html">rrencode</a> ，和 ppencode 相反，變成完全是符號編碼。</p>

<p>去年有人發表了 <a href="http://utf-8.jp/public/jjencode.html">jjencode</a> （ <a href="http://atnd.org/events/1021">JUI</a> 的 <a href="http://utf-8.jp/public/20090710/jjencode.pps">投影片</a> ），把 JavaScript 轉成只有符號的編碼，和 rrencode 作的事情差不多，不過更厲害的是還有個 <a href="http://utf-8.jp/public/aaencode.html">aaencode</a> ，兩個都是 <a href="http://twitter.com/#!/hasegawayosuke">Yosuke HASEGAWA</a> 寫的。</p>

<pre><code>alert("Hello, JavaScript")
</code></pre>

<p>用 aaencode 編譯過會看起來像這樣：</p>

<pre><code>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟΘﾟ)+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟΘﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_');
</code></pre>

<p>全部是表情符號啊～～～</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000656" baseName="rocket-surgery">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-18</b:date>
				<b:time>22:07:11</b:time>
			</b:datetime>
			<b:category>books</b:category>
			<b:title>DIY一次搞定網站易用性問題</b:title>
			<b:content>
				<b:summary> 圖片放在 Flickr 本書評由othree 評論於2010/11/17 ，評分為4.5分（滿分5分） ，採創用 CC 姓名標示 授權條款釋出。 Steve Krug 的新書，他之前寫過 Don't Make Me Think （如何設計好網站），這次的主題也是 Usability，中文有人翻譯為易用性、優使性等，不過焦點是在意用性測試這點，整本書就是教你如何設計、安排易用性測試，並將測試安排進你的開發流程。其實會買到這本書完全是意外，大概兩週前難得去天瓏想要敗家的時候，一如往常，只花一點點時間在中文區晃一下，不過突然發現某本封面特色讓我很熟悉的書，一哪起來才發現竟然是 Don't Make Me Think 作者的新書，所以二話不說就直接買下了，現在想想就覺得還好出版社沒隨便自己設計新封面，不然我大概完全不會注意到。 整本書大概可以分為兩部分，第一部分是講說他這幾年的經驗，為什麼會需要易用性測試，如何說服長官，什麼時候該開始等等算是前置的問題，第二部分則是如何安排和進行易用性測試，場地軟體的挑選，一些必須遵守的準則等，整本書以我的說法來說就是很實用，就是一步一步的教你把易用性設計導入你的開發流程內，相信有不少人或公司有想進行易用性測試卻不知道該從何開始的，這本書正好適合你，非常值得一讀，當然，最好不要讀完就沒事了，實際下去操作才是重點。 一點補充的，今天剛好看到癮科技報導 DELL 創新設計中心，最後一張照片就是一個使用性測試的房間。...</b:summary>
				<b:mainContent><div class="hreview">
  <p>
    <a class="thumbnail" href="http://www.grandtech.com.tw/About/books_det.aspx?id=906" ><img src="//farm2.static.flickr.com/1270/5184180091_0f1057d55f.jpg" width="391" height="500" alt="ROCKET SURGERY MADE EASY" /></a><br/>
<a href="http://www.flickr.com/photos/othree/5160266544/" title="Flickr 上 othree 的 ROCKET SURGERY MADE EASY">圖片放在 Flickr</a>
  </p>
  <p>
  本書評由<b class="reviewer vcard nickname">othree</b>
  評論於<abbr class="dtreviewed" title="20101117">2010/11/17</abbr>
  ，評分為<abbr class="rating" title="4.5">4.5分（滿分5分）</abbr>
  ，採<a rel="license" href="http://creativecommons.org/licenses/by/2.5/tw/">創用 CC 姓名標示 授權條款</a>釋出。
  </p>
  <div class="description">

<p>
<a href="http://www.sensible.com/">Steve Krug</a> 的新書，他之前寫過 Don't Make Me Think （<a href="http://www.grandtech.com.tw/About/books_det.aspx?id=467">如何設計好網站</a>），這次的主題也是 Usability，中文有人翻譯為易用性、優使性等，不過焦點是在意用性測試這點，整本書就是教你如何設計、安排易用性測試，並將測試安排進你的開發流程。其實會買到這本書完全是意外，大概兩週前難得去天瓏想要敗家的時候，一如往常，只花一點點時間在中文區晃一下，不過突然發現某本封面特色讓我很熟悉的書，一哪起來才發現竟然是 Don't Make Me Think 作者的新書，所以二話不說就直接買下了，現在想想就覺得還好出版社沒隨便自己設計新封面，不然我大概完全不會注意到。
</p>

<p>
整本書大概可以分為兩部分，第一部分是講說他這幾年的經驗，為什麼會需要易用性測試，如何說服長官，什麼時候該開始等等算是前置的問題，第二部分則是如何安排和進行易用性測試，場地軟體的挑選，一些必須遵守的準則等，整本書以我的說法來說就是很實用，就是一步一步的教你把易用性設計導入你的開發流程內，相信有不少人或公司有想進行易用性測試卻不知道該從何開始的，這本書正好適合你，非常值得一讀，當然，最好不要讀完就沒事了，實際下去操作才是重點。
</p>

<p>
一點補充的，今天剛好看到癮科技報導 <a href="http://chinese.engadget.com/2010/11/18/dells-new-experience-design-group-office/">DELL 創新設計中心</a>，最後一張照片就是一個使用性測試的房間。
</p>

  </div>
</div></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000655" baseName="lanyu-part-2">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-17</b:date>
				<b:time>11:39:26</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>蘭嶼 Part 2</b:title>
			<b:content>
				<b:summary>接著 上一篇...</b:summary>
				<b:mainContent><p>接著 <a href="//blog.othree.net/log/2010/11/08/lanyu-part-1/">上一篇</a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/4998804990/" title="Flickr 上 othree 的 蘭嶼 Day 3"><img src="//farm5.static.flickr.com/4091/4998804990_419d48e249.jpg" 
width="500" height="375" alt="蘭嶼 Day 3" /></a></p>
</b:mainContent>
				<b:extendContent><p>第三天因為工作的關係，跑了島上的四所學校，蘭嶼的學校幾乎每間都是倚山傍水，都可以見到不錯的景色，而且學生都蠻大方熱情的。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/4998182801/" title="Flickr 上 othree 的 蘭嶼 Day 3 東清國小"><img src="//farm5.static.flickr.com/4125/4998182801_7d3252eec0.jpg" width="500" height="375" alt="蘭嶼 Day 3 東清國小" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4998801546/" title="Flickr 上 othree 的 蘭嶼 Day 3 蘭嶼國小"><img src="//farm5.static.flickr.com/4149/4998801546_95e62e2c52.jpg" width="500" height="375" alt="蘭嶼 Day 3 蘭嶼國小" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4998204653/" title="Flickr 上 othree 的 蘭嶼 Day 3"><img src="//farm5.static.flickr.com/4126/4998204653_106895a178.jpg" width="500" height="375" alt="蘭嶼 Day 3" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4998841822/" title="Flickr 上 othree 的 蘭嶼 Day 3 椰油國小"><img src="//farm5.static.flickr.com/4084/4998841822_2ea09eed3e.jpg" width="500" height="375" alt="蘭嶼 Day 3 椰油國小" /></a></p>

<p>運氣不錯，遇上的校長都蠻不錯的，確實也很為學生在著想，其中有一位特別讓我印象深刻，好像才到任兩三年，卻對當地風俗民情非常了解，而且也一直為了學生東奔西跑，還跟我們講了不少故事，印象特別深刻。</p>

<p>這天從早跑到太陽下山工作才差不多結束，晚上則是有夜遊行程，跑到森林裡找角鴞，運氣不錯發現兩隻。不過角鴞現在雖然是蘭嶼的觀光重點之一，但是其實當地人是把它當成不祥的鳥類，因為要是有人過世的話，角鴞就會跑下山來在村邊叫。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/4998259649/" title="Flickr 上 othree 的 蘭嶼 Day 3"><img src="//farm5.static.flickr.com/4083/4998259649_a25ab237d3.jpg" width="500" height="375" alt="蘭嶼 Day 3" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4998267481/" title="Flickr 上 othree 的 蘭嶼 Day 3 角鴞"><img src="//farm5.static.flickr.com/4133/4998267481_498af2a58c.jpg" width="500" height="375" alt="蘭嶼 Day 3 角鴞" /></a></p>

<p>第四天繼續第三天未完成的工作，把最後一間學校跑完，這間學校就是我前面說到校長很多故事可以講的，所以在那邊光聊就聊了很久，像是角鴞的事情，一些當地民俗等等，像是下面這張照片兩座山中間的地方，據校長說就是用來埋葬意外過世人們的地方，如果是壽終正寢的話則是埋葬在不同地方。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5003010061/" title="Flickr 上 othree 的 蘭嶼 Day 4"><img src="//farm5.static.flickr.com/4086/5003010061_6de210d59e.jpg" width="500" height="375" alt="蘭嶼 Day 4" /></a></p>

<p>工作結束後，下午的時間也剩下不多，就很悠閒的吃飛魚炒飯，那家飛魚炒飯蠻有名的，而且有一隻超可愛的小貓咪，顏色漂亮又愛玩。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5003014495/" title="Flickr 上 othree 的 蘭嶼 Day 4"><img src="//farm5.static.flickr.com/4129/5003014495_8249167fa6.jpg" width="500" height="375" alt="蘭嶼 Day 4" /></a></p>

<p>吃完還有一些時間，就跑去看看燈塔，本來還想去小天池的，不過完全沒注意到路。燈塔本身是有管制不能進去，不過到那邊的路上風景蠻不錯的。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5003037715/" title="Flickr 上 othree 的 蘭嶼 Day 4"><img src="//farm5.static.flickr.com/4146/5003037715_e31058e322.jpg" width="500" height="375" alt="蘭嶼 Day 4" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5003661930/" title="Flickr 上 othree 的 蘭嶼 Day 4"><img src="//farm5.static.flickr.com/4125/5003661930_673db6d12f.jpg" width="375" height="500" alt="蘭嶼 Day 4" /></a></p>

<p>最後回程經過情人洞時順便也去看看，往情人洞的路算是沒有開，所以真的要走到最邊邊其實還要走一段崎嶇不平的石頭路，雖然不是很安全，不過我覺得蘭嶼就是因為沒有太多的開發才這麼漂亮又讓人難忘。</p>

<p>由於機票難買的關係，我們還多停留一天，這天終於看到朝思暮想的日出了。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5004765626/" title="Flickr 上 othree 的 蘭嶼 Day 5 日出"><img src="//farm5.static.flickr.com/4144/5004765626_e7d771c7fe.jpg" width="500" height="375" alt="蘭嶼 Day 5 日出" /></a></p>

<p>而且雖然是最後一天，卻還是看了不少東西，因為看日出的關係，還有不少時間可以晃，先是去了青青草原走走，吃完早餐後又去冷泉晃了一下。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5004616184/" title="Flickr 上 othree 的 蘭嶼 Day 5 青青草原"><img src="//farm5.static.flickr.com/4129/5004616184_545a1d245b.jpg" width="500" height="375" alt="蘭嶼 Day 5 青青草原" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5004640810/" title="Flickr 上 othree 的 蘭嶼 Day 5 青青草原"><img src="//farm5.static.flickr.com/4132/5004640810_dd9f76e4a1.jpg" width="500" height="375" alt="蘭嶼 Day 5 青青草原" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5004063111/" title="Flickr 上 othree 的 蘭嶼 Day 5 冷泉"><img src="//farm5.static.flickr.com/4089/5004063111_3387651f1c.jpg" width="500" height="375" alt="蘭嶼 Day 5 冷泉" /></a></p>

<p>離開前還去參觀了地下屋，這間地下屋是民宿主人施爸施媽的，順便介紹一下，這次去住的民宿是服恩民宿，在野銀村，主人施爸對大家都很親切，而且房間也很便宜，民宿屋頂還可以跑上去看星星聊天，最後這天參觀的地下屋就是他們家族留下來的，上面還有門牌，也還可以住人，有些熟客還會特別跑來這邊睡覺，不過白天裡面實在是超熱的，不知道是哪個傢伙介紹寫說冬暖夏涼的。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5004067231/" title="Flickr 上 othree 的 蘭嶼 Day 5"><img src="//farm5.static.flickr.com/4084/5004067231_1337a22883.jpg" width="500" height="375" alt="蘭嶼 Day 5" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5004706084/" title="Flickr 上 othree 的 蘭嶼 Day 5"><img src="//farm5.static.flickr.com/4111/5004706084_b6ce1bb7fe.jpg" width="500" height="375" alt="蘭嶼 Day 5" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5004690472/" title="Flickr 上 othree 的 蘭嶼 Day 5"><img src="//farm5.static.flickr.com/4088/5004690472_30264c41be.jpg" width="500" height="375" alt="蘭嶼 Day 5" /></a></p>

<p>這五天在蘭嶼的生活實在是讓我非常難忘，很想要之後再找時間過去，畢竟我還有不少地方還沒去到，像是大天池小天池、燕子洞、還有監獄廢墟也很想去拍拍照（不過沒打算晚上去），蘭嶼真的是非常棒，有山有水、加上一些充滿神祕色彩的廢墟，晚上又可以看星星，只是要到處跑大概還是要年輕一點，年紀太大的話雖然還是可以看到不錯的景色，可是就不適合到處跑景點了，像是大天池來回要三小時，而且是走山路，聽說還要拉繩索，往燈塔的路雖然是可以騎車過去，不過那段山路狹窄，路上又不少石頭，感覺也是蠻危險的。私心希望蘭嶼能更盡量保持著現在的樣子，不要過度開發，雖然很多地方不方便，但就是這樣才有它的特色，在台灣已經很難看到幾乎沒有人工物的風景了，畢竟我光是到台東就強烈的感受到我已經在台灣，不是在蘭嶼了。</p>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000654" baseName="jslint-git-repo">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-16</b:date>
				<b:time>10:48:10</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>JSLint 官方 git repo</b:title>
			<b:content>
				<b:summary>JSLint 以前沒有公開的版本管理機制，所以一直都只能看到版本的日期，不知道改了什麼東西，還有人為此寫了 mirror script 抓下來自己丟 git 看修改，我也 fork 了 一份 來天天盯更新，不過今天早上看到他在 github 上開始維護 正式的 repository 了，這樣以後要更新什麼的就簡單許多了。...</b:summary>
				<b:mainContent><p><a href="http://jslint.com/">JSLint</a> 以前沒有公開的版本管理機制，所以一直都只能看到版本的日期，不知道改了什麼東西，還有人為此寫了 mirror script 抓下來自己丟 git 看修改，我也 fork 了 <a href="https://github.com/othree/jslint.com-mirror">一份</a> 來天天盯更新，不過今天早上看到他在 github 上開始維護 <a href="https://github.com/douglascrockford/JSLint">正式的 repository</a> 了，這樣以後要更新什麼的就簡單許多了。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000653" baseName="javascript-patterns">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-11</b:date>
				<b:time>14:35:08</b:time>
			</b:datetime>
			<b:category>books</b:category>
			<b:title>JavaScript Patterns</b:title>
			<b:content>
				<b:summary> 圖片放在 Flickr 本書評由othree 評論於2010/11/09 ，評分為4.5分（滿分5分） ，採創用 CC 姓名標示 授權條款釋出。 Stoyan Stefanov ， phpied.com 的作者，Yahoo Search! 的前端工程師，之前寫過 Object Oriented JavaScript （之前寫的 書評），這次的新書是 JavaScript Patterns ，內容以 JavaScript 的 Coding Style 和 Design Pattern 為主，程式設計師們長年累積的經驗為主，而且內容扎實，沒有灌水章節，不像 Test-Driven JavaScript Development 前面又塞了一堆基本的東西，雖然有部分內容之前也在別本書看過，像是 The Good Part...</b:summary>
				<b:mainContent><div class="hreview">
  <p>
    <a target="_blank" href="http://oreilly.com/catalog/9780596806767" class="fn"><img src="http://farm2.static.flickr.com/1436/5160266544_760d569054.jpg" width="381" height="500" alt="JavaScript Patterns" /></a><br/>
<a href="http://www.flickr.com/photos/othree/5160266544/" title="Flickr 上 othree 的 JavaScript Patterns">圖片放在 Flickr</a>
  </p>
  <p>
  本書評由<b class="reviewer vcard nickname">othree</b>
  評論於<abbr class="dtreviewed" title="2010-11-09">2010/11/09</abbr>
  ，評分為<abbr class="rating" title="4.5">4.5分（滿分5分）</abbr>
  ，採<a target="_blank" rel="license" href="http://creativecommons.org/licenses/by/2.5/tw/">創用 CC 姓名標示 授權條款</a>釋出。
  </p>
  <div class="description">

<p>
<a href="http://www.phpied.com/">Stoyan Stefanov</a> ， phpied.com 的作者，Yahoo Search! 的前端工程師，之前寫過 <a href="https://www.packtpub.com/object-oriented-javascript-applications-libraries/book">Object Oriented JavaScript</a> （之前寫的 <a href="http://blog.othree.net/log/2009/03/29/object-oriented-javascrip/">書評</a>），這次的新書是 <b>JavaScript Patterns</b> ，內容以 JavaScript 的 Coding Style 和 Design Pattern 為主，程式設計師們長年累積的經驗為主，而且內容扎實，沒有灌水章節，不像 <a href="http://my.safaribooksonline.com/9780321684097">Test-Driven JavaScript Development</a> 前面又塞了一堆基本的東西，雖然有部分內容之前也在別本書看過，像是 <a href="http://oreilly.com/catalog/9780596517748">The Good Part</a> 和 <a href="http://jspro.org/">Pro JavaScript Techniques</a>這幾本書都有一些內容在這邊也有出現，不過重新整理過放在一起看感覺還是不一樣，目前市面上也蠻缺少這種書籍的，Douglas 的 The Good Part 算是一本，不過內容的涵蓋範圍還是不太一樣。
</p>

<p>
分章節來介紹一下：第一章是語言背景概念還有工具介紹，介紹的工具是 <a href="http://jslint.com/">JSLint</a> 和 Console ，分別是用來作程式碼檢查和除錯測試用的，JSLint 我也介紹過不少次。第二章則是寫作 JavaScript 程式必要的知識，裡面包括不少 Good Part 的內容，還有一些基礎的效率問題，比較特別的是還介紹了如何用 JSDoc 這類工具自動產生 API 文件。第三章是程式語法和建構函式，這章開始講到物件的部份，不過還是很初步的接觸而已，第四章是函式的部份，一些函式的使用方法都在這章介紹，像是 callback 或是 return function 、 curry function 等都有。第五章則是回到物件的部份，不過還沒到繼承，而是介紹了不少架構 Framework 的方法，像是 Namespace 的概念，還有比較少人介紹過的 sandbox pattern。第六章終於講到物件繼承的部份，不過其實這章是在講程式碼再利用，所以除了物件繼承外還介紹了 call 和 apply 。第七章就是設計模式了，介紹了 Singleton、Factory、Iterator、Decorator、Strategy、Facade、Proxy （和 jQuery 的 proxy 不一樣）、Mediator 和  Observer，除了 Pattern 的實作外，都還有提到怎樣的場合適合使用。最後一章是比較現實層面的 DOM 操作和瀏覽器差異等，另外還介紹了 <a href="http://en.wikipedia.org/wiki/JSON#JSONP">JSONP</a> 。
</p>

<p>
過去我覺得 JavaScript 有兩本必讀的書，第一本是 <a href="http://www.quirksmode.org/book/">PPK on JavaScript</a>，第二本是 JavaScript The Good Part，現在 JavaScript Patterns 或許可以成為第三本，天瓏那邊也賣的蠻不錯的，我要買的時候老闆還問了我一下這本是什麼，現在也缺貨中。PPK 和 Good Part 都有出中文版，希望這本之後也能出版，不過 O'Reilly 退出台灣後，會是哪間出版社來出版就不知道了。
</p>

  </div>
</div></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000652" baseName="lanyu-part-1">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-08</b:date>
				<b:time>00:55:47</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>蘭嶼 Part 1</b:title>
			<b:content>
				<b:summary>今年九月因為一些因緣際會所以去了蘭嶼五天，是我第一次去外島，對我來說也是一次難得的體驗，難得有機會可以五天完全不必顧慮平常處理的東西狀況，而且蘭嶼的景色也是超棒的，非常值得去看看。...</b:summary>
				<b:mainContent><p>今年九月因為一些因緣際會所以去了蘭嶼五天，是我第一次去外島，對我來說也是一次難得的體驗，難得有機會可以五天完全不必顧慮平常處理的東西狀況，而且蘭嶼的景色也是超棒的，非常值得去看看。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/4995852625/" title="Flickr 上 othree 的 蘭嶼 Day 1"><img src="//farm5.static.flickr.com/4154/4995852625_1bec0d8abb.jpg" width="500" height="375" alt="蘭嶼 Day 1" /></a></p>
</b:mainContent>
				<b:extendContent><p>到蘭嶼的方法有兩種，坐船或飛機，因為同行的朋友已經很怕坐船了，所以我們是坐飛機過去，飛機很小，從台東出發，大概就20人左右的空間而已。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/4995850239/" title="Flickr 上 othree 的 蘭嶼 Day 1 小飛機"><img src="//farm5.static.flickr.com/4084/4995850239_8a6518e58a.jpg" width="500" height="375" alt="蘭嶼 Day 1 小飛機" /></a></p>

<p>坐起來還蠻有趣的，不過飛機年紀有些大了，我還可以看到機艙內的殼有些裂，好在也不會飛很高所以影響不大，不要外面的殼裂影響結構安全就好了。到蘭嶼之後馬上就被蘭嶼的碧海藍天給驚艷到了，蘭嶼那邊的海水顏色比較黑，可以清楚的區分天空和海洋，加上又有大片綠地，未經開發的地方很多，實在是很漂亮。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/4996464684/" title="Flickr 上 othree 的 蘭嶼 Day 1"><img src="//farm5.static.flickr.com/4153/4996464684_0d9db2c432.jpg" width="500" height="375" alt="蘭嶼 Day 1" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4996470294/" title="Flickr 上 othree 的 蘭嶼 Day 1"><img src="//farm5.static.flickr.com/4112/4996470294_4af6f10c1d.jpg" width="500" height="375" alt="蘭嶼 Day 1" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4995870445/" title="Flickr 上 othree 的 蘭嶼 Day 1 小婦人"><img src="//farm5.static.flickr.com/4106/4995870445_13331df6da.jpg" width="500" height="375" alt="蘭嶼 Day 1 小婦人" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4996472378/" title="Flickr 上 othree 的 蘭嶼 Day 1 人魚與貓"><img src="//farm5.static.flickr.com/4090/4996472378_c66392f8d6.jpg" width="375" height="500" alt="蘭嶼 Day 1 人魚與貓" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4995888561/" title="Flickr 上 othree 的 蘭嶼 Day 1"><img src="//farm5.static.flickr.com/4124/4995888561_6eae516414.jpg" width="500" height="375" alt="蘭嶼 Day 1" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4995896359/" title="Flickr 上 othree 的 蘭嶼 Day 1"><img src="//farm5.static.flickr.com/4103/4995896359_7cdbd445b1.jpg" width="500" height="375" alt="蘭嶼 Day 1" /></a></p>

<p>第一天中午過後才到蘭嶼，就騎著租來的機車到處晃，順便勘查一下蘭嶼島上的學校位置，還找了個點看夕陽，結果太陽下山之後一片漆黑，回程經過好長一段沒有路燈的路段，超可怕的，後來那段路就在也沒有在晚上的時間走過了，不過也托福第一天就環島一週了。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/4995906813/" title="Flickr 上 othree 的 蘭嶼 Day 1 夕陽"><img src="//farm5.static.flickr.com/4133/4995906813_5a858a3a9a.jpg" width="500" height="375" alt="蘭嶼 Day 1 夕陽" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4995911233/" title="Flickr 上 othree 的 蘭嶼 Day 1 無餓不坐"><img src="//farm5.static.flickr.com/4133/4995911233_2721968a28.jpg" width="375" height="500" alt="蘭嶼 Day 1 無餓不坐" /></a></p>

<p>第二天主要是觀光行程，先去吃了民宿老闆推薦的早餐店，然後體驗中橫公路一趟，還上氣象站上看，蘭嶼可以想像成一座迷你的台灣，島中間是座高山，五個村落都在周邊平地靠海岸的地方，第一天晚上走的那段路就是為了從島的西邊繞到東邊，不過這段路距離蠻長的，而中橫公路就是直接切山路，接通東西兩岸的公路，氣象站則是在島中央的山頂之上，中橫公路中間的岔路進去就可以到達，那邊的景色也很棒，而且還有一棟蠻有趣的廢墟，有顆樹長在裡面，我在五天內就去了氣象站三四次，</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/4997689596/" title="Flickr 上 othree 的 蘭嶼 Day 2 美亞美"><img src="//farm5.static.flickr.com/4131/4997689596_f64e518b2e.jpg" width="500" height="375" alt="蘭嶼 Day 2 美亞美" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4997095065/" title="Flickr 上 othree 的 蘭嶼 Day 2 氣象台"><img src="//farm5.static.flickr.com/4110/4997095065_a22b94f38f.jpg" width="500" height="375" alt="蘭嶼 Day 2 氣象台" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4997704842/" title="Flickr 上 othree 的 蘭嶼 Day 2 氣象台廢墟"><img src="//farm5.static.flickr.com/4105/4997704842_a4b1f41feb.jpg" width="500" height="375" alt="蘭嶼 Day 2 氣象台廢墟" /></a></p>

<p>中午過後就一群人跑去浮潛，這是我睽違非常久的下水，在池塘區(?)算是玩的非常盡興，珊瑚礁非常漂亮，不過沒照片，因為我沒有防水相機，不過海水非常難喝，嗆到的話也是超不舒服，是真的 <strong>超難受</strong> 而且很痛，我在由當地人帶下海裡的時候就嗆到一次，害我有一半的時間都沒辦法看海下面的樣子，不過海裡面就沒池塘裡面漂亮就是，只是也是不同的風光，錯過也是蠻可惜的，而且下去體驗一次大海的威力算是不錯的經驗。</p>

<p>第二天傍晚也是跑到蘭嶼的西邊，只是回程我們不再走第一天的環島公路到東邊了，改走中橫過去，雖然山路好像比較危險，不過實際上整段山路都沒什麼風（到氣象站中間一段才有強風），而且兩邊都有貓眼石，對於馬路邊界的掌握反而比環島公路還好，花的時間又少很多，所以後來幾乎都是走中橫來往東西兩邊，本來這天回程時還順便跑上氣象站想拍日落，結果角度不是很好，很快太陽就被擋住了，看來看氣象站是看日出比較方便。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/4997716160/" title="Flickr 上 othree 的 蘭嶼 Day 2 環島公路"><img src="//farm5.static.flickr.com/4127/4997716160_aeae9d3371.jpg" width="500" height="375" alt="蘭嶼 Day 2 環島公路" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4997113501/" title="Flickr 上 othree 的 蘭嶼 Day 2 氣象台日落"><img src="//farm5.static.flickr.com/4127/4997113501_6ffde59529.jpg" width="500" height="375" alt="蘭嶼 Day 2 氣象台日落" /></a></p>

<p>第二天的晚上在東清村的 <em>人魚與貓</em> 吃晚餐，從店名就知道有很多貓了，這邊的食物也蠻不錯的，尤其是冰沙真的蠻好喝的，而且我們托同行友人的福吃到已經不賣的合菜，吃完之後就直接在蘭嶼唯一的夜市逛一下，現場還有發財車卡拉OK，當地人還很熱情的邀我們下去唱，不過我不太會唱的啦～</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/4997123797/" title="Flickr 上 othree 的 蘭嶼 Day 2 人魚與貓"><img src="//farm5.static.flickr.com/4131/4997123797_d1df82c985.jpg" width="500" height="375" alt="蘭嶼 Day 2 人魚與貓" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4997727804/" title="Flickr 上 othree 的 蘭嶼 Day 2 人魚與貓"><img src="//farm5.static.flickr.com/4144/4997727804_eafb961bb4.jpg" width="375" height="500" alt="蘭嶼 Day 2 人魚與貓" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4997732948/" title="Flickr 上 othree 的 蘭嶼 Day 2 夜市"><img src="//farm5.static.flickr.com/4130/4997732948_f3f41c3f7d.jpg" width="500" height="375" alt="蘭嶼 Day 2 夜市" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/4997125533/" title="Flickr 上 othree 的 蘭嶼 Day 2 夜市"><img src="//farm5.static.flickr.com/4083/4997125533_f215e09ba2.jpg" width="500" height="375" alt="蘭嶼 Day 2 夜市" /></a></p>

<p>我還趁機向夜晚的大海拍了幾張照片，蘭嶼那邊沒什麼光害，所以可以拍的到很多星星，不過夜晚的大海超恐怖的，整片漆黑，有了下午嗆到海水的經驗，我完全不會想靠近。</p>

<p><a href="http://www.flickr.com/photos/othree/4997734402/" title="Flickr 上 othree 的 蘭嶼 Day 2"><img src="//farm5.static.flickr.com/4084/4997734402_8f68e01725.jpg" width="500" height="375" alt="蘭嶼 Day 2" /></a></p>

<p>接著，我不確定是第二天還第三天的晚上（朋友說是第三天，不過第三天有夜遊還遇上下雨，所以我覺得比較像是第二天，偏偏上去拍的照片找不太到），我和另外兩位同行的朋友一起上了氣象站看星星，兩位朋友一位是學長的同學 <a href="http://www.wretch.cc/blog/rt009211">小盛</a> ，一位是他朋友 <a href="http://www.wretch.cc/blog/beauty31083">mika</a> 。看星星的過程不重要，是回來的時候發生了一件很有趣的事，氣象台有隻狗狗叫小白，學長的同學之前上去的時候好像和他玩了好一陣子，晚上上去小白還跑過來黏他要玩，看起來就是很喜歡他，結果我們要回民宿時，機車才剛騎一下下，就聽到小白在後面叫了好幾聲，好像是在叫我們，想說停下來看看是不是會跑過來要幹嘛，沒想到他真的跑過來護送我們下山，因為蘭嶼很多羊會跑來跑去，晚上的時候山路上就超多，而且晚上也比較不讓人車，小白就幫我們把山羊群趕跑，中途還有兩隻不太服氣想反擊，最後還是被吠跑了，而且我說護送不是說假的，我本來還想說他會不會跟到民宿這邊想要跟著小盛，結果他在中橫山路最後一個轉彎的地方就停下來了，停在那邊看我們，我又往下騎一小段回頭在看他就不見了，我想應該是跑回山上了吧，雖然我養過狗也很喜歡狗，也常常聽說狗有靈性 blahblah，不過親身體驗到這種程度還是地一次，這也是這次蘭嶼行中最驚奇的一次體驗了。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5158595686/" title="Flickr 上 othree 的 小白"><img src="//farm5.static.flickr.com/4008/5158595686_6fbe48474f.jpg" width="500" height="375" alt="小白" /></a></p>

<p>接 <a href="http://blog.othree.net/log/2010/11/17/lanyu-part-2/">Part2</a></p>
</b:extendContent>
			</b:content>

			<b:comments commentCount="3"></b:comments>


		</b:entry>

		<b:entry entryID="000651" baseName="kaohsiung-day-3">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-07</b:date>
				<b:time>23:33:18</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>高雄 Day 3</b:title>
			<b:content>
				<b:summary>延續 前一篇，接著第三天行程，一樣圖多～...</b:summary>
				<b:mainContent><p>延續 <a href="//blog.othree.net/log/2010/11/06/kaohsiung-day-2/">前一篇</a>，接著第三天行程，一樣圖多～</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5146381390/" title="Flickr 上 othree 的 武德殿"><img src="//farm2.static.flickr.com/1176/5146381390_93ecab7b74.jpg" width="375" height="500" alt="武德殿" /></a></p>
</b:mainContent>
				<b:extendContent><p>第三天行程就比較少了，因為下午要參加連續聚，然後就要回台北，所以只有早上又逛了幾個地方，首先是，白天的武德殿XD。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5146389888/" title="Flickr 上 othree 的 武德殿 內部"><img src="//farm2.static.flickr.com/1328/5146389888_57852032a2.jpg" width="500" height="375" alt="武德殿 內部" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5146409558/" title="Flickr 上 othree 的 武德殿"><img src="//farm5.static.flickr.com/4060/5146409558_db27f29124.jpg" width="500" height="375" alt="武德殿" /></a></p>

<p>白天來看才發現整個場地很棒，地板超漂亮的，而且實際上是可以借用來練習的，聽我表哥說武德殿本來到處都有，是日據時期日本人蓋來練武（應該是國家政策吧），不過現在大部分都被拆掉了，高雄這座在日本人撤離後被鼓山國小當成員工宿舍用過一陣子，後來沒用了又變成廢墟狀態，不過現在已經是市定古蹟了，也維護的很好。</p>

<p>接著還去了高雄舊火車站和真愛碼頭，路上還看到鴨子船。不過可惜的是舊火車站周末竟沒開放，然後鴨子船沒拍到他在水上的樣子（雖然有看到），我來三天時間，天空顏色最漂亮的就是第三天了，不過可惜下午時間都待在室內。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5148310811/" title="Flickr 上 othree 的 舊高雄車站"><img src="//farm5.static.flickr.com/4070/5148310811_bfc59042a4.jpg" width="500" height="375" alt="舊高雄車站" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5148331067/" title="Flickr 上 othree 的 世運娃娃"><img src="//farm5.static.flickr.com/4008/5148331067_7d2056e109.jpg" width="500" height="375" alt="世運娃娃" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5148939372/" title="Flickr 上 othree 的 高雄歷史博物館"><img src="//farm2.static.flickr.com/1398/5148939372_56645882d5.jpg" width="500" height="375" alt="高雄歷史博物館" /></a></p>

<p>下午就是連續聚啦～</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5135780153/" title="Flickr 上 othree 的 高雄摩茲連續聚"><img src="//farm2.static.flickr.com/1060/5135780153_92faa30248.jpg" width="500" height="375" alt="高雄摩茲連續聚" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5135797435/" title="Flickr 上 othree 的 高雄摩茲連續聚"><img src="//farm5.static.flickr.com/4039/5135797435_c10119a89f.jpg" width="500" height="375" alt="高雄摩茲連續聚" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5135818733/" title="Flickr 上 othree 的 高雄摩茲連續聚"><img src="//farm2.static.flickr.com/1429/5135818733_fe5944f307.jpg" width="375" height="500" alt="高雄摩茲連續聚" /></a></p>

<p>不過回家前，還跑去拍了花媽氣球，剛好場地就在附近。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5147344769/" title="Flickr 上 othree 的 花媽"><img src="//farm5.static.flickr.com/4047/5147344769_dce614a3d6.jpg" width="500" height="375" alt="花媽" /></a></p>

<p>這幾年高雄的環境真的是改善很多，尤其是捷運系統完成後，對於整個都市發展又更進一步，雖然有人覺得他一直虧錢問題很大，不過我覺得捷運系統確實應該要提早在需求到達前建立起來，像台北整個是慢一大步，捷運建設的那幾年交通整個慘烈，加上都市發展是要靠交通帶動的，我一直到去完日本後才體認到交通和經濟都市發展的關係實在是密不可分，而除了捷運，高雄還有捷運加公車一個月通行票 1200 元，超優惠的，不過也可以知道他們多努力在推動大眾運輸，雖然目前成效還不是很好，當然也是交通量還不夠，像台北有些地方自己開車去不會比較方便，可能是路程長、難停車、有塞車機會，不果是何者，都是足夠讓人改念做捷運的。</p>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000650" baseName="kaohsiung-day-2">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-06</b:date>
				<b:time>17:39:00</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>高雄 Day 2</b:title>
			<b:content>
				<b:summary>延續 前一篇，接著第二天行程，一樣圖多～...</b:summary>
				<b:mainContent><p>延續 <a href="//blog.othree.net/log/2010/11/06/kaohsiung-day-1/">前一篇</a>，接著第二天行程，一樣圖多～</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5142798790/" title="Flickr 上 othree 的 台鐵軌道"><img src="//farm5.static.flickr.com/4069/5142798790_9202c1399c.jpg" width="375" height="500" alt="台鐵軌道" /></a></p>
</b:mainContent>
				<b:extendContent><p>第二天我中午過後才開始行程，本來預計是想去旗津、打狗英國理事館看看的，結果我表哥跟我說有個橋頭糖廠不大可以先去看看，然後我就整個下午都耗在那邊了～</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5142191405/" title="Flickr 上 othree 的 橋頭糖廠"><img src="//farm5.static.flickr.com/4128/5142191405_cf4c060b73.jpg" width="500" height="375" alt="橋頭糖廠" /></a></p>

<p>橋頭糖廠確實可以看的東西不會很多，走馬看花一個小時綽綽有餘，不過對於喜歡拍照的人來說那邊真是很棒，橋頭糖廠現在叫做 <a href="http://www.tscleisure.com.tw/museum/">台灣糖業博物館</a> ，裡面保留有糖廠本體、許多倉庫、日劇時期的宿舍和大量的糖鐵遺跡，而重新整理後除了介紹台灣糖業的博物館外，糖鐵火車頭和糖廠遺跡都很棒，另外還有上不少的廢鐵打造的藝術品。而且也沒人管，可以讓你到處逛，人又不多，天空稍微藍一點就可以拍出很棒的照片。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5142802834/" title="Flickr 上 othree 的 Feather"><img src="//farm5.static.flickr.com/4104/5142802834_d1043414e5.jpg" width="375" height="500" alt="Feather" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5142206131/" title="Flickr 上 othree 的 糖鐵火車頭"><img src="//farm5.static.flickr.com/4069/5142206131_c55cf240f0.jpg" width="500" height="375" alt="糖鐵火車頭" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5142221487/" title="Flickr 上 othree 的 糖鐵火車頭"><img src="//farm2.static.flickr.com/1433/5142221487_0eb254b2ae.jpg" width="500" height="375" alt="糖鐵火車頭" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5142218357/" title="Flickr 上 othree 的 Rails &amp; Flowers"><img src="//farm5.static.flickr.com/4017/5142218357_ba1e3fd52e.jpg" width="375" height="500" alt="Rails &amp; Flowers" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5142879376/" title="Flickr 上 othree 的 窗"><img src="//farm2.static.flickr.com/1143/5142879376_cd9db597ed.jpg" width="500" height="375" alt="窗" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5142286113/" title="Flickr 上 othree 的 橋頭糖廠"><img src="//farm5.static.flickr.com/4110/5142286113_058befdb10.jpg" width="500" height="375" alt="橋頭糖廠" /></a></p>

<p>這次高雄行我最喜歡的照片也是在這裡拍到的。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5142899208/" title="Flickr 上 othree 的 蓮花池"><img src="//farm5.static.flickr.com/4024/5142899208_93c56754c9.jpg" width="500" height="375" alt="蓮花池" /></a></p>

<p>之後傍晚太陽下山之時，我離開頭城糖廠，途中經過世運站還下來拍了幾張照片，可惜那時間天色不太好，沒辦法拍到漂亮的世運主場館，不過世運站本身也很特別，在軌道上方有價高的天橋，而且不像台北的都是全密封的，所以可以拍出很清楚的捷運軌道和車廂。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5145836878/" title="Flickr 上 othree 的 高雄捷運"><img src="//farm2.static.flickr.com/1390/5145836878_ee75efb6d1.jpg" width="375" height="500" alt="高雄捷運" /></a></p>

<p>希望下次有時間靠主場館近一點，當然天氣也要好些。晚餐在 <a href="http://www.dakawei.com.tw/">漁人碼頭</a> 解決後，表哥就騎車帶我到處晃，去了文化中心、<a href="http://heritage.khcc.gov.tw/home02.aspx?ID=$2900&amp;IDK=2&amp;EXEC=D&amp;DATA=25">武德殿</a>、<a href="http://www.khhuk.org.tw/">打狗英國領事館</a> 和愛河幾個地方，在愛河那邊拍夜景的時候，我突然領會了夜拍的白平衡應該怎樣調才好，所以拍了不少色彩繽紛的愛河夜景:P，本來還去壽山想看夜景，不過一時找不到要去的位置只好作罷，最後回到住處也已經超過12點了～</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5145273453/" title="Flickr 上 othree 的 漁人碼頭"><img src="//farm5.static.flickr.com/4130/5145273453_7656c33e8b.jpg" width="500" height="375" alt="漁人碼頭" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5145903888/" title="Flickr 上 othree 的 香蕉碼頭"><img src="//farm5.static.flickr.com/4144/5145903888_00722cfab4.jpg" width="500" height="375" alt="香蕉碼頭" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5146378628/" title="Flickr 上 othree 的 武德殿"><img src="//farm2.static.flickr.com/1188/5146378628_6eb35a5d39.jpg" width="500" height="375" alt="武德殿" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5148889198/" title="Flickr 上 othree 的 愛河"><img src="//farm2.static.flickr.com/1141/5148889198_ebccf3df35.jpg" width="500" height="375" alt="愛河" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5148908184/" title="Flickr 上 othree 的 愛河"><img src="//farm2.static.flickr.com/1193/5148908184_e0eb7a054b.jpg" width="500" height="375" alt="愛河" /></a></p>

<p>接 <a href="//blog.othree.net/log/2010/11/07/kaohsiung-day-3/">第三天</a></p>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000649" baseName="kaohsiung-day-1">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-06</b:date>
				<b:time>00:53:28</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>高雄 Day 1</b:title>
			<b:content>
				<b:summary>很久沒寫日記遊記了，上週五高雄電影節有上映台灣不太有機會上映的 Redline ，剛好週日又有 高雄場摩茲連續聚 ，加上高雄有表哥家可以借宿，就決定那個週末下去三天了，結果三天就拍了六百多張照片，挑一挑也上傳了兩百多張，比去蘭嶼五天還多，所以本篇也圖多這樣XD。...</b:summary>
				<b:mainContent><p>很久沒寫日記遊記了，上週五高雄電影節有上映台灣不太有機會上映的 <a href="http://red-line.jp/index.html">Redline</a> ，剛好週日又有 <a href="http://registrano.com/events/moztw-gathering-kh-2010">高雄場摩茲連續聚</a> ，加上高雄有表哥家可以借宿，就決定那個週末下去三天了，結果三天就拍了六百多張照片，挑一挑也上傳了兩百多張，比去蘭嶼五天還多，所以本篇也圖多這樣XD。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5135677976/" title="Flickr 上 othree 的 駁二藝術特區"><img src="//farm2.static.flickr.com/1245/5135677976_a576b9ebdd.jpg" width="500" height="375" alt="駁二藝術特區" /></a></p>
</b:mainContent>
				<b:extendContent><p>這次行程幾乎都沒規劃，就只有第一天傍晚要看電影和第三天下午要參加連續劇兩件事，不過為了保險起見我是搭乘早上的高鐵就下去了，所以到高雄時才中午，前一天晚上才決定下午的時間要去 <a href="http://takao.railway.tw/">打狗鐵道故事館</a> 和 <a href="http://pier-2.khcc.gov.tw/">駁二藝術特區</a> 。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5131978251/" title="Flickr 上 othree 的 打狗驛"><img src="//farm2.static.flickr.com/1126/5131978251_519ce08268.jpg" width="500" height="375" alt="打狗驛" /></a></p>

<p>打狗鐵道故事館是很新的景點，在西子灣站二號出口一出來就是，完全不用找，主要構成是當初的打狗站加上月台和一小段鐵道遺跡，規模比預期的小了些，不過站內的東西都很有歷史，週末的話還會有熱心的鐵道迷幫忙解說（而且還是從台北下去的，我有認識所以知道:P），我去的時間是週五比較可惜，就只有參觀一下，拍拍照片，蓋紀念章而已。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5131985319/" title="Flickr 上 othree 的 打狗鐵道故事館"><img src="//farm5.static.flickr.com/4085/5131985319_324eaa05a0.jpg" width="500" height="375" alt="打狗鐵道故事館" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5131992333/" title="Flickr 上 othree 的 站長辦公桌"><img src="//farm5.static.flickr.com/4032/5131992333_a1a4fdd8c5.jpg" width="500" height="375" alt="站長辦公桌" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5132602442/" title="Flickr 上 othree 的 打狗鐵道故事館"><img src="//farm5.static.flickr.com/4144/5132602442_2c495dcfc6.jpg" width="500" height="375" alt="打狗鐵道故事館" /></a></p>

<p>比較可惜的是鐵道部分範圍不大，邊緣還是用不太美觀的綠色鐵皮圍起來而已，和 <a href="http://www.ttrav.org/taitungartvillage/index.php">台東鐵道藝術村</a> 比起來規模就小很多，不知道以後會不會有什麼規劃。</p>

<p><a href="http://www.flickr.com/photos/othree/5149152346/" title="Flickr 上 othree 的 台東鐵道藝術村"><img src="//farm2.static.flickr.com/1090/5149152346_e59dc9b775.jpg" width="500" height="375" alt="台東鐵道藝術村" /></a></p>

<p>接著到了離西子灣只有一站距離的 <em>駁二藝術特區</em> 。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5135741506/" title="Flickr 上 othree 的 駁二"><img src="//farm2.static.flickr.com/1145/5135741506_c6ed58ce0b.jpg" width="500" height="375" alt="駁二" /></a></p>

<p>現在同時有藝術能、鋼鋼好和高雄電影節三個比較長時間的活動，區內還有一間勞工博物館蠻有趣的，我在台灣還蠻少看到這種對象比較是針對小孩的教育宣導性博物館。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5138072155/" title="Flickr 上 othree 的 勞工博物館"><img src="//farm5.static.flickr.com/4104/5138072155_19536e3c03.jpg" width="500" height="375" alt="勞工博物館" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5138691334/" title="Flickr 上 othree 的 勞工博物館"><img src="//farm2.static.flickr.com/1350/5138691334_eb2fc51d7d.jpg" width="375" height="500" alt="勞工博物館" /></a></p>

<p>鋼鋼好是免費的大型鋼雕藝術展，展出的作品真的都很大，像是等比例的馬或是比人還大些的18羅漢等。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5138669406/" title="Flickr 上 othree 的 鋼鋼好"><img src="//farm5.static.flickr.com/4031/5138669406_6a7a571d6f.jpg" width="500" height="375" alt="鋼鋼好" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5138058135/" title="Flickr 上 othree 的 鋼鋼好"><img src="//farm2.static.flickr.com/1114/5138058135_40406a90fa.jpg" width="500" height="375" alt="鋼鋼好" /></a></p>

<p>藝術能則是要收費的展覽，除了 <em>藝術能賣</em> 這塊不用驗票外，其他幾區都要驗票XD，其中我最喜歡的就是下面這個見佛殺佛的裝置藝術了。</p>

<p><a href="http://www.flickr.com/photos/othree/5139672292/" title="Flickr 上 othree 的 見佛殺佛"><img src="//farm2.static.flickr.com/1311/5139672292_850c9ffbff.jpg" width="375" height="500" alt="見佛殺佛" /></a></p>

<p>就掛在 <em>人與神</em> 這展間的門口，剛好我的帽子是比克大魔王標誌，所以不能免俗的一定要合照一下的。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5139719460/" title="Flickr 上 othree 的 神與人與魔"><img src="//farm5.static.flickr.com/4086/5139719460_b9c3d052d0.jpg" width="500" height="375" alt="神與人與魔" /></a></p>

<p>逛到時間差不多我就出發去夢時代了，真是超大，因為還和阪急百貨接在一起，感覺上大概有兩到三個美麗華的大小吧，還有傳說中的 OPEN 小將魔法餐廳，而且影展用的影廳螢幕也超大，實在是很棒，最厲害的時還可以在裡面辦跆拳道比賽XD。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5140397146/" title="Flickr 上 othree 的 Open將魔法餐廳"><img src="//farm2.static.flickr.com/1326/5140397146_3cf6627803.jpg" width="500" height="375" alt="Open將魔法餐廳" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5139844745/" title="Flickr 上 othree 的 廣州亞運 中華跆拳道代表隊團體對抗賽"><img src="//farm2.static.flickr.com/1121/5139844745_81fa6f9d0b.jpg" width="500" height="375" alt="廣州亞運 中華跆拳道代表隊團體對抗賽" /></a></p>

<p>然後我必須說夢時代我逛起來還不會覺得乏味，因為裡面空間大，所以多了不少平常百貨不會有地方給的攤位，像是一整排的創意市集。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5140425918/" title="Flickr 上 othree 的 夢時代創意市集"><img src="//farm5.static.flickr.com/4035/5140425918_7cd655c736.jpg" width="500" height="375" alt="夢時代創意市集" /></a></p>

<p>裡面的藝術裝置也很漂亮。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5139851623/" title="Flickr 上 othree 的 夢時代"><img src="//farm5.static.flickr.com/4012/5139851623_1fdecc352b.jpg" width="500" height="375" alt="夢時代" /></a></p>

<p>第一天最後一個行程是瑞豐夜市，也是想像以上的大，人又超多，光是從頭走到尾就花了快要一個小時，還沒在裡面吃東西或是挑什麼東西，裡面的丟圈圈規模大到嚇人，更厲害的是還有棒球九宮格和籃球九宮格XDD。除了場地大，攤位多之外，夜市整體的規劃也很不錯，雖然走道窄了點，不過就是一排一排的也不太會迷路，賣食物的也會和其他攤位分開，就連停機車拿機車都有專人幫忙，真的是台北都看不太到這樣的作法。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/5142042068/" title="Flickr 上 othree 的 瑞豐夜市"><img src="//farm2.static.flickr.com/1172/5142042068_2364210cbe.jpg" width="375" height="500" alt="瑞豐夜市" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5142079596/" title="Flickr 上 othree 的 豪華丟圈圈"><img src="//farm2.static.flickr.com/1148/5142079596_f2c391d2c0.jpg" width="500" height="375" alt="豪華丟圈圈" /></a>
<a class="thumbnail" href="http://www.flickr.com/photos/othree/5141480643/" title="Flickr 上 othree 的 棒球九宮格"><img src="//farm5.static.flickr.com/4003/5141480643_3dd2f22c2b.jpg" width="500" height="375" alt="棒球九宮格" /></a></p>

<p>接 <a href="//blog.othree.net/log/2010/11/06/kaohsiung-day-2/">第二天</a> 。</p>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000648" baseName="google-page-speed-module">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-11-04</b:date>
				<b:time>14:28:00</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>Google Page Speed Module for Apache</b:title>
			<b:content>
				<b:summary>Google 推出 Page Speed 很久沒有動作後，今天突然出了 mod_pagespeed ，藉由 Apache Module 的方式來直接實作許多 Page Speed 的建議準則，讓開發者可以減少花費在最佳化網站速度的時間，mod_pagespeed 所做的都是前端的最佳化工作，基本上架構在 rewrite, minify, cache 三件事上，rewrite 是指重寫檔案內容，而不是 mod_rewrite ，根據設定，它可以修改你的網頁原始碼，刪除多餘的空白字元、甚至合併多個 CSS 檔案、最小化 CSS/JS 檔案等，安裝和基本設定都很簡單，不過實際使用時發現如果送出網頁 header 為 application/xhtml+xml 的話就不會動，還有我本來有自己設定 .htaccess 檔案內的 deflate 設定，也造成 mod_pagespeed 不會動，還好目前都有排除解決問題，只剩下 fastcgi 的部份還在測試。 實際佈署的時候還有一些小地方需要注意，像是要合併的 CSS 檔案要在同一個路徑下，不然不會合併（而且其實我目前還沒測試合併成功），JS...</b:summary>
				<b:mainContent><p>Google 推出 <a href="http://code.google.com/intl/zh-TW/speed/page-speed/index.html">Page Speed</a> 很久沒有動作後，今天突然出了 <a href="http://code.google.com/intl/zh-TW/speed/page-speed/docs/module.html">mod_pagespeed</a> ，藉由 Apache Module 的方式來直接實作許多 Page Speed 的建議準則，讓開發者可以減少花費在最佳化網站速度的時間，mod_pagespeed 所做的都是前端的最佳化工作，基本上架構在 rewrite, minify, cache 三件事上，rewrite 是指重寫檔案內容，而不是 mod_rewrite ，根據設定，它可以修改你的網頁原始碼，刪除多餘的空白字元、甚至合併多個 CSS 檔案、最小化 CSS/JS 檔案等，安裝和基本設定都很簡單，不過實際使用時發現如果送出網頁 header 為 application/xhtml+xml 的話就不會動，還有我本來有自己設定 .htaccess 檔案內的 deflate 設定，也造成 mod_pagespeed 不會動，還好目前都有排除解決問題，只剩下 fastcgi 的部份還在測試。</p>

<p>實際佈署的時候還有一些小地方需要注意，像是要合併的 CSS 檔案要在同一個路徑下，不然不會合併（而且其實我目前還沒測試合併成功），JS 如果要用 <a href="http://code.google.com/intl/zh-TW/closure/compiler/">closure compiler</a> 的進階壓縮模式，那還是要自己處理，總之就是，它給了一個不錯的基本加速設定，不過如果你要更進一步強化，那一些東西還是要自己來。</p>

<p>話說 mod_pagespeed 裡面用來 minify JS 檔案用的是 <a href="http://www.crockford.com/javascript/jsmin.html">JSMin</a> ，我想原因可能是他是 C 寫的而且有原始碼吧，不過 <a href="http://code.google.com/intl/zh-TW/closure/compiler/">closure compiler</a> 即使是簡單模式壓縮效果也比較好，所以還是可以自己壓縮。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="1"></b:comments>


		</b:entry>

		<b:entry entryID="000647" baseName="automjump">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-10-19</b:date>
				<b:time>22:27:24</b:time>
			</b:datetime>
			<b:category>unix</b:category>
			<b:title>automjump</b:title>
			<b:content>
				<b:summary>今天發現的有趣的命令列工具 autojump ，它會記錄你常用的目錄位置，然後之後就可以用簡單的關鍵字跳到路徑符合關鍵字，又最常用的目錄，以我為例，我最近常常會跑到某個位置的 vim-plugins 目錄，然後我又沒有其它目錄名稱和 plugin 相似，那不論我在哪，我都可以執行下面的指令跳到 vim-plugins： j plugin 我目前使用上是都沒什麼大問題，不過 hlb 說他的 vim 檔名自動完成會爛掉，可能要在研究看看問題在哪了。...</b:summary>
				<b:mainContent><p>今天發現的有趣的命令列工具 <a href="http://github.com/joelthelion/autojump">autojump</a> ，它會記錄你常用的目錄位置，然後之後就可以用簡單的關鍵字跳到路徑符合關鍵字，又最常用的目錄，以我為例，我最近常常會跑到某個位置的 vim-plugins 目錄，然後我又沒有其它目錄名稱和 plugin 相似，那不論我在哪，我都可以執行下面的指令跳到 vim-plugins：</p>

<pre><code>j plugin
</code></pre>

<p>我目前使用上是都沒什麼大問題，不過 <a href="http://iamhlb.com">hlb</a> 說他的 vim 檔名自動完成會爛掉，可能要在研究看看問題在哪了。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000646" baseName="eregex-vim">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-10-19</b:date>
				<b:time>17:58:45</b:time>
			</b:datetime>
			<b:category>vim</b:category>
			<b:title>eregex.vim</b:title>
			<b:content>
				<b:summary>新開始維護的 eregex.vim，一開始的動機是因為我有小東西要修改，然後就開了 git repo，後來覺得乾脆就自己維護，順便推廣，所以目前主要貢獻幾乎都是在翻譯說明文件。 簡單介紹，eregex.vim 是讓 Vim 可以使用 Perl/Ruby 形式的正規表示式，因為實在是很不習慣 Vim 的正規表示式寫法，安裝後，把以下兩行加到 .vimrc 檔案裡： nnoremap / :M/ nnoremap ,/ / 這樣就可以用 / 和 Perl 形式的表示式進行搜尋了，如果要取代可以用 :S (大寫S)，不過這頂多是平常編輯文件時使用，要開發 plugin 的話還是只能用內建的語法寫。...</b:summary>
				<b:mainContent><p>新開始維護的 <a href="http://www.vim.org/scripts/script.php?script_id=3282">eregex.vim</a>，一開始的動機是因為我有小東西要修改，然後就開了 <a href="http://github.com/othree/eregex.vim">git repo</a>，後來覺得乾脆就自己維護，順便推廣，所以目前主要貢獻幾乎都是在翻譯說明文件。</p>

<p>簡單介紹，eregex.vim 是讓 Vim 可以使用 Perl/Ruby 形式的正規表示式，因為實在是很不習慣 Vim 的正規表示式寫法，安裝後，把以下兩行加到 .vimrc 檔案裡：</p>

<pre><code>nnoremap / :M/
nnoremap ,/ /
</code></pre>

<p>這樣就可以用 <kbd>/</kbd> 和 Perl 形式的表示式進行搜尋了，如果要取代可以用 :S (大寫S)，不過這頂多是平常編輯文件時使用，要開發 plugin 的話還是只能用內建的語法寫。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000645" baseName="introduction-to-wai-aria-3">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-10-17</b:date>
				<b:time>23:46:39</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>WAI-ARIA 介紹之三</b:title>
			<b:content>
				<b:summary>這篇文章是翻譯 Dev.Operv 的 Introduction to WAI ARIA 這篇文章，分成三篇刊載。由於原文為 CC-BY-NC-SA-2.5 授權，故此篇文章也採用同樣授權方式。系列文章： WAI-ARIA 介紹之一 WAI-ARIA 介紹之二 WAI-ARIA 介紹之三 - 本篇文章 ARIA 可以做什麼用？ 使用 ARIA 並不會有不好的副作用，所以你可以馬上開始使用他，而且主流的四個瀏覽器都已經支援或已經有計劃支援了，Opera 9.5 和 Firefox 1.5 已經有支援 ARIA ， IE8b 也有支援， Safari 所使用的 WebKit 框架也發表說他們將會開始支援 ARIA ， 輔助科技也廣泛的支援 ARIA...</b:summary>
				<b:mainContent><p>這篇文章是翻譯 Dev.Operv 的 <a href="http://dev.opera.com/articles/view/introduction-to-wai-aria/">Introduction to WAI ARIA</a> 這篇文章，分成三篇刊載。由於原文為 <a href="http://creativecommons.org/licenses/by-nc-sa/2.5/deed.zh_TW">CC-BY-NC-SA-2.5</a> 授權，故此篇文章也採用同樣授權方式。系列文章：</p>

<ul>
<li><a href="http://blog.othree.net/log/2010/10/10/introduction-to-wai-aria-1/">WAI-ARIA 介紹之一</a></li>
<li><a href="http://blog.othree.net/log/2010/10/13/introduction-to-wai-aria-2/">WAI-ARIA 介紹之二</a></li>
<li>WAI-ARIA 介紹之三 - 本篇文章</li>
</ul>

<h4>ARIA 可以做什麼用？</h4>

<p>使用 ARIA 並不會有不好的副作用，所以你可以馬上開始使用他，而且主流的四個瀏覽器都已經支援或已經有計劃支援了，Opera 9.5 和 Firefox 1.5 已經有支援 ARIA ， IE8b 也有支援， Safari 所使用的 WebKit 框架也發表說他們將會開始支援 ARIA ， 輔助科技也廣泛的支援 ARIA ，JAWS 7.1、Window-Eyes 5.5+、NVDA、Zoomtext 9+ 和其他輔助科技都有基本的支援，而且還會越來越好。</p>

<h4>現在就參與使用</h4>

<p>由於使用 ARIA 並沒有任何不好的副作用，而且相關的支援都已經到位，現在就參與使用百利而無一害，即使你的網站非常簡單，你也可以使用文件地標讓使用者有更好的導覽系統可以使用。</p>
</b:mainContent>
				<b:extendContent><h5>使用文件地標</h5>

<p>在我的個人網站，我就使用了 main、navigation、search、secondary 這幾個文件地標，以下面的文件結構為例：</p>

<pre><code>&lt;div id="ads"&gt;
...
&lt;/div&gt;
&lt;div id="nav"&gt;
    &lt;form id="searchform" ...&gt;
    ...
    &lt;/form&gt;
...
&lt;/div&gt;
&lt;div id="content"&gt;
...
&lt;/div&gt;
</code></pre>

<p>我們可以把 role 屬性寫進標記內以加上地標資訊。</p>

<pre><code>&lt;div id="ads" role="banner"&gt;
...
&lt;/div&gt;
&lt;div id="nav" role="navigation"&gt;
    &lt;form id="searchform" role="search" ...&gt;
    ...
    &lt;/form&gt;
...
&lt;/div&gt;
&lt;div id="content" role="main"&gt;
...
&lt;/div&gt;
</code></pre>

<p>大部分的網頁都會有設計好的結構，好方便使用 CSS 做版面配置，而此範例頁就使用到 id，id 還可以簡單的傳給 JavaScript 函數，下面的範例是一個簡單的 JavaScript 函數，它接收的參數是元素的 id 和 role 角色值，會將指定 id 元素的 role 設為指定的值。</p>

<pre><code>function addARIARole(strID, strRole)
{
    // Find the element to add a role property to
    var objElement = document.getElementById(strID);

    if (objElement)
    {
        // Add the role property to the element
        objElement.setAttribute('role', strRole);
    }
}
</code></pre>

<p>接著就可以使用這個函數，傳入文件內元素的 id 和對應的文件地標，而已前面的文件結構來說，我們可以用下面的 JavaScript 來加上地標資訊，而不必直接寫入標籤。</p>

<pre><code>function setupARIA()
{
    // Add ARIA roles to the document
    addARIARole('content', 'main');
    addARIARole('nav', 'navigation');
    addARIARole('searchform', 'search');
    addARIARole('ads', 'banner');
}
window.onload = setupARIA;
</code></pre>

<h5>標出必填欄位</h5>

<p>如果你的表單內有必填欄位，你可以使用 aria-required 屬性，此屬性告訴使用者此欄位在送出前必須要有填值，下面的範例就是有使用 aria-required 的 input 元素。</p>

<pre><code>&lt;label for="contactname"&gt;Name&lt;/label&gt;
&lt;input type="text"
       id="contactname" 
       name="contactname"
       size="30"
       aria-required="true"&gt;
</code></pre>

<p>Wordpress 已經有在迴響表單的必填欄位內加上 aria-required 屬性了。</p>

<h5>加上其他相關屬性</h5>

<p>還有許多 ARIA 屬性可以使用在簡單的網站上，像是 aria-labeledby 和 aria-describerdby，aria-labeledby 是用來定位該元素的標題是哪個或哪些元素裡，aria-describedby 則是用來定位敘述該元素的資訊放在哪。</p>

<pre><code>&lt;h2 id="limg"&gt;Paragliding&lt;/h2&gt;
&lt;p id="dimg"&gt;
A long description of our paragliding trip ...
&lt;/p&gt;
&lt;div&gt;
&lt;img src="takeoff.png"
     alt="Getting ready to take off"
     aria-labelledby="limg"
     aria-describedby="dimg"&gt;
&lt;/div&gt;
</code></pre>

<h5>更高的優先權</h5>

<p>ARIA 的屬性比 HTML 原本的屬性優先權還要高，意思是說 aria-labeledby 和 label 元素的 for一起出現時， aria-labeledby 優先度會較高，不過 label 元素還是可以讓不支援 ARIA 的舊瀏覽器能正確的找出元素間的關係，有個簡單的技巧可以避免衝突，就是用 aria-labeledby 連回 label 元素，不管 ARIA 支援如何，都可以確保 input 元素的標題存在。</p>

<pre><code>&lt;label id="lblef" for="effectiveness"&gt;Effectiveness&lt;/label&gt;
&lt;input type="image"
       role="slider"
       id="effectiveness"
       aria-labelledby="lblef"
       ...&gt;
</code></pre>

<p>看看完整的 ARIA [屬性清單][8] 可以幫助你讓你把網頁內容弄的更具有親和力。</p>

<h4>總結</h4>

<p>HTML 最初不是設計來製作網路應用程式的，但是設計師們還是藉著製作自定的介面元件，並使用 JavaScript 給予它們可以操作互動的能力而拼湊出網路應用程式，而問題是這些元件的角色、狀態和屬性以及網頁內容的更新情形並不會讓輔助科技正確的知道，因此 ARIA 規範藉由讓設計師可以詳細的描述這些介面元件、定義文件結構和即時更新的區域來解決這個問題。</p>

<p>不論你是要開發最新潮複雜的網路應用程式還是你有的只是簡單的 HTML 文件，你都可以使用 ARIA 讓身心障礙人士獲益。</p>

<h4>進階閱讀</h4>

<ul>
<li><a href="http://www.w3.org/TR/wai-aria-practices/">WAI-ARIA Best Practices</a></li>
<li><a href="http://www.marcozehe.de/2008/02/29/easy-aria-tip-1-using-aria-required/">Using aria-required</a></li>
<li><a href="http://www.marcozehe.de/2008/03/23/easy-aria-tip-2-aria-labelledby-and-aria-describedby/">Using aria-labelledby and aria-describedby</a></li>
<li><a href="http://www.marcozehe.de/2008/07/16/easy-aria-tip-3-aria-invalid-and-role-alert/">Using aria-invalid and role alert</a></li>
<li><a href="http://www.paciellogroup.com/blog/?p=53">Tri-State Checkbox Example</a></li>
<li><a href="http://www.paciellogroup.com/blog/?p=68">ARIA Slider Example</a></li>
</ul>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000637" baseName="jquery-code-style">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-10-17</b:date>
				<b:time>00:15:46</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>jQuery Code Style</b:title>
			<b:content>
				<b:summary>隨著 jQuery 1.4.3 發佈，還有一份 jQuery Code Style 文件也一起公開了，相較於 Google 的 JavaScript Code Guide，我覺得 jQuery 的 code style 比較有趣可以講:P。 jQuery 在某個版本開始有注意 coding style ，而使用的檢查工具就是 JSLint ，不過直到這次新版才公開講，使用上其實有故意忽略了幾個錯誤訊息，其中特別有趣的是 "Expected an identifier and instead saw 'undefined' (a reserved word)." 這個。 在 JavaScript 中 undefined...</b:summary>
				<b:mainContent><p>隨著 <a href="http://blog.jquery.com/2010/10/16/jquery-143-released/">jQuery 1.4.3 發佈</a>，還有一份 <a href="http://docs.jquery.com/JQuery_Core_Style_Guidelines">jQuery Code Style</a> 文件也一起公開了，相較於 Google 的 <a href="http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml">JavaScript Code Guide</a>，我覺得 jQuery 的 code style 比較有趣可以講:P。</p>

<p>jQuery 在某個版本開始有注意 coding style ，而使用的檢查工具就是 <a href="http://jslint.com/">JSLint</a> ，不過直到這次新版才公開講，使用上其實有故意忽略了幾個錯誤訊息，其中特別有趣的是 "Expected an identifier and instead saw 'undefined' (a reserved word)." 這個。</p>

<p>在 JavaScript 中 undefined 不是保留關鍵字，而且它是全域的，所以任何 script 都可以把它覆寫掉，然後下面這樣判斷變數是否宣告過的方法就會爛掉了：</p>

<pre><code>if (foo === undefined) {
    // ....blah....
}
</code></pre>

<p>有一個作法可以解決這問題，我以前也有提過，就是把自己的程式碼用一個 closure 包起來，然後故意少傳一個參數：</p>

<pre><code>(function (document, undefined) {
    // ....blah....
})(document);
</code></pre>

<p>這樣 closure 內部的 undefined 就不用怕被其他地方的程式覆寫過了，不過 JSLint 會告訴你第一行的 undefined 不該使用來作為變數名稱，而應該要作為保留字，所以才會忽略這項錯誤訊息。</p>

<p>那既然 undefined 的問題解決了，在下面的 <a href="http://docs.jquery.com/JQuery_Core_Style_Guidelines#Type_Checks">TYPE CHECKS</a> 的 undefined 檢查中的全域變數還要用 typeof 來檢查呢？</p>

<pre><code>typeof variable === "undefined"
</code></pre>

<p>那是因為只要一存取到沒定義的全域變數就會噴出錯誤訊息，所以必須要用 typeof 來判斷它的類別。</p>

<p>還有一個被忽略的錯誤訊息是 "Use '===' to compare with 'null' ，如果有看過一些關於 JavaScript 的 == (equal) 、 === (strict equal) 和 null 、 undefined 等行為的文章，就會知道它們的行為實在不好搞清楚，所以都會建議盡量使用 === 和 !== 取代 == 和 != ， JSLint 則是只有在空字串、0、null、undefined 等數值的比對上才會強迫你使用 === 和 !== ，不過 jQuery 的 lint 檢查卻故意忽略 null 的部份，主要是因為可以用下面的方法來判斷一個變數使否有值，或著是根本還未定義：</p>

<pre><code>if (foo == null) {
    // ....blah....
}
</code></pre>

<p>這樣檢查的話，0 或是空字串是會當成有值，如果只是用驚嘆號做 true/false 判斷的話那就會誤判了。所以可以知道，jQuery 現在的程式碼裡面 == (equal) 和 === (strict equal) 的使用應該都是有考慮過的，話雖如此，其實也只有一種情形會使用到 == 就是。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000636" baseName="introduction-to-wai-aria-2">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-10-13</b:date>
				<b:time>23:08:27</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>WAI-ARIA 介紹之二</b:title>
			<b:content>
				<b:summary>這篇文章是翻譯 Dev.Operv 的 Introduction to WAI ARIA 這篇文章，分成三篇刊載。由於原文為 CC-BY-NC-SA-2.5 授權，故此篇文章也採用同樣授權方式。系列文章： WAI-ARIA 介紹之一 WAI-ARIA 介紹之二 - 本篇文章 WAI-ARIA 介紹之三 我是誰？ ARIA 導入了 role 屬性來幫助定義介面元件和頁面結構，介面元件像是滑動條控制器，頁面結構像是導覽區塊，網路應用程式的一個主要問題是任何 HTML 元素都可以用來製作介面元件，但是 HTML 元素都已經有其定義與角色了。 Role 屬性代表的是該元素是什麼東西，它在整個架構中是什麼角色，例如 heading 標題就是輔助科技所可以了解的角色。當使用既有的元素建置介面元件時，輔助科技會以元素的預設角色和定義來認知該元素，而不是它實際上在介面元件中的角色，例如滑動條控制器中的滑塊使用 img 標籤製作並標上適當的替代文字，螢幕閱讀器會讀出「圖形、滑塊」而不是更有意義的「滑動條控制器、值為百分之16。」 Figure 3 -- 滑動條控制器上的滑塊...</b:summary>
				<b:mainContent><p>這篇文章是翻譯 Dev.Operv 的 <a href="http://dev.opera.com/articles/view/introduction-to-wai-aria/">Introduction to WAI ARIA</a> 這篇文章，分成三篇刊載。由於原文為 <a href="http://creativecommons.org/licenses/by-nc-sa/2.5/deed.zh_TW">CC-BY-NC-SA-2.5</a> 授權，故此篇文章也採用同樣授權方式。系列文章：</p>

<ul>
<li><a href="http://blog.othree.net/log/2010/10/10/introduction-to-wai-aria-1/">WAI-ARIA 介紹之一</a></li>
<li>WAI-ARIA 介紹之二 - 本篇文章</li>
<li><a href="http://blog.othree.net/log/2010/10/17/introduction-to-wai-aria-3/">WAI-ARIA 介紹之三</a></li>
</ul>

<h4>我是誰？</h4>

<p>ARIA 導入了 role 屬性來幫助定義介面元件和頁面結構，介面元件像是滑動條控制器，頁面結構像是導覽區塊，網路應用程式的一個主要問題是任何 HTML 元素都可以用來製作介面元件，但是 HTML 元素都已經有其定義與角色了。 Role 屬性代表的是該元素是什麼東西，它在整個架構中是什麼角色，例如 heading 標題就是輔助科技所可以了解的角色。當使用既有的元素建置介面元件時，輔助科技會以元素的預設角色和定義來認知該元素，而不是它實際上在介面元件中的角色，例如滑動條控制器中的滑塊使用 img 標籤製作並標上適當的替代文字，螢幕閱讀器會讀出「圖形、滑塊」而不是更有意義的「滑動條控制器、值為百分之16。」</p>

<p><a href="http://www.flickr.com/photos/othree/5067918400/" title="Flickr 上 othree 的 thumb"><img src="http://farm5.static.flickr.com/4128/5067918400_56f38e1a6c_o.gif" width="166" height="81" alt="" /></a> <br />
Figure 3 -- 滑動條控制器上的滑塊</p>
</b:mainContent>
				<b:extendContent><p>role 所設定的元素角色會蓋過原本元素預設的角色，下面的例子中，有一個 role 屬性為 slider 的 input 元素（其他的屬性將會在後面介紹），因此輔助科技將會將它認為是滑動條控制器(slider) 而不是普通的文字輸入欄位 (input)。</p>

<pre><code>&lt;input type="image"
       src="thumb.gif"
       alt="Effectiveness"
       role="slider"
       aria-valuemin="0"
       aria-valuemax="100"
       aria-valuenow="42"
       aria-valuetext="42 percent" 
       aria-labelledby="leffective"&gt;
</code></pre>

<p>當這個元素被取用時，螢幕閱讀器便可以正確的告訴使用者這個介面元件是什麼。ARIA規格也有維護一份 <a href="http://www.w3.org/TR/wai-aria/roles#role_definitions">role 屬性值的清單</a>。</p>

<h5>文件地標</h5>

<p>Role 屬性除了定義介面元件外，還可以幫助建立文件的結構，<a href="http://www.w3.org/TR/wai-aria/roles#landmark_roles">文件地標</a>是 role 屬性的一個子集，它可以幫助螢幕閱讀器的使用者了解不同 HTML 內部同文件區塊的用途，好快速的定位到想要去的位置。</p>

<p><a href="http://www.flickr.com/photos/othree/5067918418/" title="Flickr 上 othree 的 pagestructure"><img src="http://farm5.static.flickr.com/4153/5067918418_ae41f9b617_o.gif" width="179" height="256" alt="" /></a> <br />
Figure 4 -- 常見的文件結構，有標頭、側邊欄和主要內容</p>

<p>ARIA 規格定義了以下的文件地標。</p>

<dl>
    <dt>article</dt>
    <dd>完整的一段內容，像是完整的一篇部落格文章、一篇迴響或是討論區的亦篇文章等</dd>
    <dt>banner</dt>
    <dd>跨網頁，屬於網站全體層級的內容，像是網站標題或是標誌等</dd>
    <dt>complementary</dt>
    <dd>和 main 內容相關的東西，不過可以獨立於主要內容之外，像是在入口網站提供的天氣資訊</dd>
    <dt>contentinfo</dt>
    <dd>相關資訊，例如註腳、版權宣告、隱私聲明、設定連結等</dd>
    <dt>main</dt>
    <dd>文件主要內容</dd>
    <dt>navigation</dt>
    <dd>內含本身以及相關文件導覽連結的部份</dd>
    <dt>search</dt>
    <dd>站內搜尋的表單區塊</dd>
</dl>

<p>下面的例子使用了文件地標指定了圖四文件中的 banner, navigation 和 main 三個區塊。</p>

<pre><code>&lt;div role="banner"&gt;
...
&lt;/div&gt;
&lt;div role="navigation"&gt;
...
&lt;/div&gt;
&lt;div role="main"&gt;
...
&lt;/div&gt;
</code></pre>

<h4>ARIA 狀態與屬性</h4>

<p>ARIA <a href="http://www.w3.org/TR/wai-aria/states_and_properties">狀態和屬性</a> 讓輔助科技可以得到介面元件的更多資訊幫助使用者了解如何操作這些介面元件，狀態是用來指定物件的某個特定資訊，例如 aria-checked 有三種狀態值， true, false 和 mixed 。而前面介紹的滑動條控制器，也有數個 aria 屬性可以幫助輔助科技描述這個元件。</p>

<dl>
    <dt>aria-valuemin</dt>
    <dd>儲存可接受數值的最小值</dd>
    <dt>aria-valuemax</dt>
    <dd>儲存可接受數值的最大值</dd>
    <dt>aria-valuenow</dt>
    <dd>儲存現在介面元件的值</dd>
    <dt>aria-valuetext</dt>
    <dd>儲存方便使用者理解接現在數值的文字，例如：30塊錢</dd>
    <dt>aria-labelledy</dt>
    <dd>儲存描述此介面元件的元素的 id 值</dd>
</dl>

<p>部分屬性可能會被 script 程式改變，例如 aria-valuenow 和 aria-valuetext 就應該在滑塊移動時跟著改變。</p>

<pre><code>// Set the ARIA property values when the thumb is 
// moved on the slider
objThumb.setAttribute('aria-valuenow', iValue);
objThumb.setAttribute('aria-valuetext', iValue + ' %');
</code></pre>

<p>網頁加上 role 屬性和 ARIA 屬性會讓文件無法通過標準檢測，但沒關係，讓 ARIA 支援古老標準的相關的工作也正在進行，像是有一個可以讓 <a href="http://www.w3.org/WAI/PF/adaptable/StatesAndProperties-20051106.HTML">模組化 XML 使用的文件類型定義(DTD)</a>，XHTML 1.1 就是一種模組化 XML 文件格式，有一份完整的 <a href="http://www.w3.org/TR/wai-aria/states_and_properties">狀態和屬性清單</a> ，可以幫助建立具親和力的介面元件。</p>

<h4>即時區塊</h4>

<p>即時區塊讓 HTML 元素在內容有更新時會通知使用者，而不會忽略掉最新的狀況，這意味著使用者可以不用離開他現在的游標位置也可以收到最新的更新內容，例如聊天室可以讓使用者接收到其他人的回覆，而不用離開文字輸入框，中斷正在輸入的訊息。</p>

<h5>aria-live</h5>

<p>無法發現網頁內容的更新是螢幕閱讀器使用者一直以來最大的障礙，ARIA 提供了 aria-live 這個屬性來設定網頁區塊更新時通知該如何通知使用者，下面是三種可以使用的設定。</p>

<dl>
    <dt>off</dt>
    <dd>預設值，區塊的更新不會通知輔助科技
    <pre><code>
        &lt;ul aria-live="off"&gt;
    </code></pre></dd>
    <dt>polite</dt>
    <dd>這是適用於大部分 live 區塊的設定， polite 區塊將會在使用者完成正在進行的動作後才會通知輔助科技
    <pre><code>
        &lt;ul aria-live="polite"&gt;
    </code></pre></dd>
    <dt>assertive</dt>
    <dd>這個值比一般的情形更為優先，但不會打斷使用者的動作。
    <pre><code>
        &lt;ul aria-live="assertive"&gt;
    </code></pre></dd>
</dl>

<p>其他還有一些重要的屬性可以幫助設定即時區塊，下面接著介紹。</p>

<h5>aria-atomic 屬性</h5>

<p>aria-atomic 是即時區塊的非必要的屬性，它的值可以是 true 或 false (預設是無指定)，當即時區塊更新時，aria-atomic 屬性是用來決定輔助科技是否要把整個區塊的內容都通報給使用者，如果設為 true，輔助科技就會把整個即時區塊的內容都通報出去，不然就只通報更改的部份。</p>

<p>下面的例子中，所有在此非排序清單中的元素都會被完整的念出，除非 aria-atomic 屬性被覆蓋。</p>

<pre><code>&lt;ul aria-atomic="true"
    aria-live="polite"&gt;
</code></pre>

<h5>aria-busy 屬性</h5>

<p>aria-busy 屬性也是非必要屬性，值可以為 true 或 false （預設為無指定），如果即時區塊內有多個地方都需要更改，之後才需要通知使用者的話，那就可以先將 aria-busy 設為 true 
，等到在內容都更新完後再把 aria-busy 設為 false，這個屬性可以避免輔助科技在即時區的內容更新完成之前就通知使用者。</p>

<pre><code>&lt;ul aria-atomic="true"
    aria-busy="true"   aria-live="polite"&gt;
</code></pre>

<h5>aria-relevant 屬性</h5>

<p>aria-relevant 屬性也是非必要屬性，是用來表示即時區塊的資訊更新要對哪些變化做出反應，此屬性接受以下的值，並可以用空白分開不同的值。</p>

<dl>
    <dt>additions</dt>
    <dd>即時區塊內有新增 DOM 節點</dd>
    <dt>removals</dt>
    <dd>即時區塊內有減少 DOM 節點</dd>
    <dt>text</dt>
    <dd>即時區塊內的文字有變化</dd>
    <dt>all</dt>
    <dd>上面所有的變化都有發生</dd>
</dl>

<p>如果沒有設定 aria-relevant 的話，預設會認為是文字變化與新增內容(aria-relevant="text additions")，下面的範例中的即時區塊，只會在區塊內有增加節點時，輔助科技才會告知使用者，如果是移除節點或是文字內容的變化，輔助科技都不會告知使用者。</p>

<pre><code>&lt;ul aria-relevant="additions" 
    aria-atomic="true"   aria-live="polite"&gt;
</code></pre>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000634" baseName="introduction-to-wai-aria-1">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-10-10</b:date>
				<b:time>22:06:24</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>WAI-ARIA 介紹之一</b:title>
			<b:content>
				<b:summary>這篇文章是翻譯 Dev.Operv 的 Introduction to WAI ARIA 這篇文章，會分成三篇刊載。由於原文為 CC-BY-NC-SA-2.5 授權，故此篇文章也採用同樣授權方式。系列文章： WAI-ARIA 介紹之一 - 本篇文章 WAI-ARIA 介紹之二 WAI-ARIA 介紹之三 引言 HTML最初並不是被設計來製作網路應用程式的，所以它所有的控制介面非常少，而且受限至於 client-server 的通訊模式，然後開發者們使用 JavaScript 突破了這層限制，並建置了各式各樣的介面元件。 然而不幸的是，這些突破 HTML 限制的技術通常也不具備親和力，即使這些介面元件看起來用起來都和一般的桌面應用程式沒什麼不同，但是像 screen reader 這些輔助科技並沒辦法存取到這些介面元件的角色(role，這個元件是什麼東西)、狀態(特有的設定，如 checked)和其他重要的資訊，這狀況就如同只是調整樣式讓一段文字看起來像標題，卻不使用正確的標題標籤，造成各種輔助科技並無法知道這段文字是標題一樣。 使用輔助科技的訪客通常不會注意到網頁動態更新的內容，輔助科技通常會認為只有在導航事件，例如開啟連結或是送出表單時，網頁的內容才會變動。網路應用程式使用AJAX這類新技術，會在背後默默的更新網頁的內容，即使輔助科技會去助益網頁內容的更改，使用者仍然可能不會注意到內容有更新，或是不知道如何移動到更新的位置。 WAI-ARIA為這些介面元件提供了角色(role)定義，以及各種角色狀態和屬性的規格，使用輔助科技的訪客便可以理解並使用這些資訊，除此之外，WAI-ARIA還提供了一種機制以確保訪客不會錯過資訊的更新。...</b:summary>
				<b:mainContent><p>這篇文章是翻譯 Dev.Operv 的 <a href="http://dev.opera.com/articles/view/introduction-to-wai-aria/">Introduction to WAI ARIA</a> 這篇文章，會分成三篇刊載。由於原文為 <a href="http://creativecommons.org/licenses/by-nc-sa/2.5/deed.zh_TW">CC-BY-NC-SA-2.5</a> 授權，故此篇文章也採用同樣授權方式。系列文章：</p>

<ul>
<li>WAI-ARIA 介紹之一 - 本篇文章</li>
<li><a href="http://blog.othree.net/log/2010/10/13/introduction-to-wai-aria-2/">WAI-ARIA 介紹之二</a></li>
<li><a href="http://blog.othree.net/log/2010/10/17/introduction-to-wai-aria-3/">WAI-ARIA 介紹之三</a></li>
</ul>

<h4>引言</h4>

<p>HTML最初並不是被設計來製作網路應用程式的，所以它所有的控制介面非常少，而且受限至於 client-server 的通訊模式，然後開發者們使用 JavaScript 突破了這層限制，並建置了各式各樣的介面元件。</p>

<p>然而不幸的是，這些突破 HTML 限制的技術通常也不具備親和力，即使這些介面元件看起來用起來都和一般的桌面應用程式沒什麼不同，但是像 screen reader 這些輔助科技並沒辦法存取到這些介面元件的角色(role，這個元件是什麼東西)、狀態(特有的設定，如 checked)和其他重要的資訊，這狀況就如同只是調整樣式讓一段文字看起來像標題，卻不使用正確的標題標籤，造成各種輔助科技並無法知道這段文字是標題一樣。</p>

<p>使用輔助科技的訪客通常不會注意到網頁動態更新的內容，輔助科技通常會認為只有在導航事件，例如開啟連結或是送出表單時，網頁的內容才會變動。網路應用程式使用AJAX這類新技術，會在背後默默的更新網頁的內容，即使輔助科技會去助益網頁內容的更改，使用者仍然可能不會注意到內容有更新，或是不知道如何移動到更新的位置。</p>

<p><a href="http://www.w3.org/WAI/intro/aria">WAI-ARIA</a>為這些介面元件提供了角色(role)定義，以及各種角色狀態和屬性的規格，使用輔助科技的訪客便可以理解並使用這些資訊，除此之外，WAI-ARIA還提供了一種機制以確保訪客不會錯過資訊的更新。</p>
</b:mainContent>
				<b:extendContent><h4>HTML簡史</h4>

<p>HTML 最初設計是用來作為超文字文件的，初期的 HTML 草稿規範的標籤有標題、段落、清單和連結等，<a href="http://www.w3.org/MarkUp/draft-ietf-iiir-html-01.txt">第一分由 IETF 制定的 HTML 草案</a>還包括了可以在行內顯示圖片的 img 標籤，而第一份較正式的 HTML 規格是 <a href="http://tools.ietf.org/html/rfc1866">HTML 2</a> ，基於初期的 HTML 草稿，這個版本還導入了網頁表單和一小部分的控制介面元件包括文字輸入欄位、按鈕、單選選項、勾選框和下拉式選單，然而 HTML 2 所定義的這些控制元件和現在主要使用的 <a href="http://www.w3.org/TR/html401/">HTML 4</a> 的版本相比，並沒有什麼變化。</p>

<p>HTML 所使用的溝通模式事蹟於主從式架構，主從式架構的流程為，客戶端送出請求到伺服端，並等待接收回應，伺服端則是一直在等待客戶端的請求，收到後進行處理並回覆給客戶端，由於 HTML 並沒有行為層，所有的溝通都是單線性的－客戶端向伺服端送出請求，伺服端對請求做出處理並傳回一個網頁給客戶端。</p>

<h4>網路應用程式</h4>

<p>網路應用程式試著去模擬一般的桌面應用程式，不過有個主要的差異在網路應用程式是在瀏覽器裡面執行的，除此之外，網路應用程式和桌面應用程式還有兩個根本性的差異：</p>

<ul>
<li>一般桌面應用程式有一行為層，而不用對伺服端做溝通</li>
<li>一般桌面應用程式有更多樣的介面控制元件</li>
</ul>

<h4>模擬一般桌面應用程式</h4>

<h5>背景資料傳輸</h5>

<p>為了模擬一般桌面應用程式，網路應用程式使用 JavaScript 去增加網頁的行為，例如使用 JavaScript 讓使用者可以展開或關閉選單項目。網路應用程式有時會需要跟伺服器要些資料，可能是要伺服器上資料庫內的資料來更新頁面內容，當網路應用程式需要和伺服器溝通時，這時候多會使用 AJAX 或是 IFRAME 的技術來在背景溝通。 </p>

<h5>模擬多樣化的元件</h5>

<p>由於 HTML 只有非常少的介面元件，網路應用程式有時就會需要自己創造更複雜的介面元件，像是三種狀態的勾選框或是滑動條控制器，這些介面元件通常是圖形化顯示給使用者，而它們的行為則是由另外的 script 來實作。</p>

<p><a href="http://www.flickr.com/photos/othree/5067306375/" title="Flickr 上 othree 的 tristate"><img src="http://farm5.static.flickr.com/4132/5067306375_94123b07bc_o.gif" width="228" height="171" alt="" /></a> <br />
圖一 -- 三種狀態的勾選框</p>

<p><a href="http://www.flickr.com/photos/othree/5067918384/" title="Flickr 上 othree 的 slider"><img src="http://farm5.static.flickr.com/4105/5067918384_d4b9079419_o.gif" width="358" height="65" alt="" /></a> <br />
圖二 -- 一個滑動條控制器，可能用來調整服務品質</p>

<h4>視覺與感官模擬的親和力問題</h4>

<p>從視覺上模擬各種介面元件，對伺服器進行背景的溝通都可以讓使用者有更好的使用經驗，但是不幸的是，這些都造成了親和力問題，對於使用輔助科技的使用者都產非常不好：</p>

<ul>
<li>只有圖形化顯示的介面元件通常鍵盤無法控制</li>
<li>這些介面元件的角色定義、用途等，輔助科技都無從得知</li>
<li>這需介面元件的狀態和屬性資料，輔助科技也無法得知</li>
<li>頁面的更新也沒有通知這些輔助科技</li>
</ul>

<h4>救星是 WAI-ARIA</h4>

<p>幸好，列出的這些問題都可以靠 Web Accessibility Initiative's Accessible Rich Internet Applications 來解決，ARIA 是一個正面的技術，而不是跟開發人員說什麼不能做，ARIA 讓開發人員可以製作豐富的網路應用程式，而且它也很簡單就可以上手。</p>

<h4>鍵盤導覽</h4>

<p>替非文字物件提供替代文字和讓介面元件可以用鍵盤控制都是非常基本的親和力規定，知道親和力相關議題的開發人員可能會讓他所製作的介面元件是可以用鍵盤取用並操作的，像是使用 <code>&lt;input type="image"&gt;</code> ，不過大部分的介面元件都不是以這種方式製作，而會使用像是 img 這種無法使用鍵盤取用的元素，或是複雜的元件可能會使用 div 來做為外層包覆的元素，一樣也是無法使用鍵盤取用。</p>

<p>HTML 4 開始有了 tabindex，可以用於 a、area、button、input、object、select、textarea 這幾個元素上，tabindex的值是介於 1～32767 的正整數，導覽會從數字小的開始，直到數字最大的元素，有設定 tabindex 的元素會以設定的值排入導覽順序，不過如果網頁的內容有好的邏輯結構，tabindex 就可以不必設定，介面元件會自己依序排入 tab 鍵導覽的順序中。</p>

<p>ARIA <a href="http://www.w3.org/TR/wai-aria/#tabindex">擴充了 tabindex 屬性</a>，讓他可以出現在所有可見的元素中，除此之外，還允許使用負值讓元素不在 tab 鍵導覽的順序中出現，但還是可以用 script 程式取用它，不過由於負值的大小並不重要，所以通常是使用 -1。</p>

<h5>加入預設 Tab 導覽順序</h5>

<p>下面的範例使用 tabindex 讓 div 元素可以照文件結構排入 tab 鍵導覽的順序之中，因此該元素是可以使用鍵盤取用的。</p>

<pre><code>&lt;div tabindex="0"&gt;
...
&lt;/div&gt;
</code></pre>

<h5>負的 tabindex</h5>

<p>下面的範例則是使用負值設定tabindex，因此該元素只能經由 script 取用</p>

<pre><code>&lt;div id="progaccess" tabindex="-1"&gt;
...
&lt;/div&gt;
</code></pre>

<p>在這個範例中，div 元素不會排進 Tab 導覽的順序之中,但是由於它有 tabindex 屬性，且其值為 -1 ，表示說該元素還是可以透過程式取用，下面這段程式碼會選用上面所定義的元素，並且使用 focus 函式來取用該元素。</p>

<pre><code>var objDiv = document.getElementById('progaccess');
\\ Focus on the element
objDiv.focus();
</code></pre>
</b:extendContent>
			</b:content>

			<b:comments commentCount="2"></b:comments>


		</b:entry>

		<b:entry entryID="000633" baseName="google-font-non-latin">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-10-04</b:date>
				<b:time>18:02:59</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>Google Font 開始提供非拉丁語系字型</b:title>
			<b:content>
				<b:summary>這兩天在修理調整 blog 時才發現到 Google 現在開始 提供非拉丁語系的字型 ，不過不用太開心，因為還是沒有中日文漢字，目前只有 cyrillic、greek(希臘字)、khmer（高棉字）三種，先不說有漢字的幾種文字，我還蠻期待他們能提供一些符號的字型，像是占星符號、Rune 等等。...</b:summary>
				<b:mainContent><p>這兩天在修理調整 blog 時才發現到 Google 現在開始 <a href="http://googlewebfonts.blogspot.com/2010/09/international-fonts-launch-today.html">提供非拉丁語系的字型</a> ，不過不用太開心，因為還是沒有中日文漢字，目前只有 cyrillic、greek(希臘字)、khmer（高棉字）三種，先不說有漢字的幾種文字，我還蠻期待他們能提供一些符號的字型，像是占星符號、Rune 等等。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000632" baseName="style-guide-for-online-hy">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-10-03</b:date>
				<b:time>21:45:56</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>Style Guide for online hypertext</b:title>
			<b:content>
				<b:summary>這幾個月有些機緣讓我和 W3C 的距離更加接近，其中一項意外的收穫就是發現 Style Guide for online hypertext 這一系列文章，都是 Tim Bernes-Lee 寫的，內容可以說是建置網站的一些 best practice，是在程式語言、標籤語法以外的東西，講了在建置與維護網站上很多重要的觀念，像是講到 URI ，timbl 就說應該好好設計，設計之後便應該讓它一直有效，還有使用網路標準，不要專為某種設備編寫你的文件、該引言還是該做連結等、甚至還早於 AJAX 這個名詞發明之前說到網路上的內容都應該有個永久連結。雖然文章年代都有點久遠，不過所講述的東西其實很多到今天還是相當適用，當然，很多觀念也是一再有人提出來講的，不過內容都不長，我覺得還是值得花些時間看看，順便再次提醒自己。...</b:summary>
				<b:mainContent><p>這幾個月有些機緣讓我和 W3C 的距離更加接近，其中一項意外的收穫就是發現 <a href="http://www.w3.org/Provider/Style/">Style Guide for online hypertext</a> 這一系列文章，都是 <a href="http://zh.wikipedia.org/zh-hant/%E8%92%82%E5%A7%86%C2%B7%E4%BC%AF%E7%BA%B3%E6%96%AF-%E6%9D%8E">Tim Bernes-Lee</a> 寫的，內容可以說是建置網站的一些 best practice，是在程式語言、標籤語法以外的東西，講了在建置與維護網站上很多重要的觀念，像是講到 URI ，timbl 就說應該好好設計，設計之後便應該讓它一直有效，還有使用網路標準，不要專為某種設備編寫你的文件、該引言還是該做連結等、甚至還早於 AJAX 這個名詞發明之前說到網路上的內容都應該有個永久連結。雖然文章年代都有點久遠，不過所講述的東西其實很多到今天還是相當適用，當然，很多觀念也是一再有人提出來講的，不過內容都不長，我覺得還是值得花些時間看看，順便再次提醒自己。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000631" baseName="help-promoto-javascript-docs">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-10-03</b:date>
				<b:time>17:48:15</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>幫忙推廣好的 JavaScript 文件</b:title>
			<b:content>
				<b:summary>由於在網路上要尋找好的 JavaScript 文件不太容易，所以前陣子舉辦的 JSconf.eu 中，發起了 Promoto JS ! 的運動。事實上網路上是有不錯的 JS 文件，像是 MDN 的，不過搜尋時排序都不在前面，而且還會有些 Java 的資料混在其中，而這個運動就是希望藉由貼紙串連的方式，把 MDN 的文件排序推到前面，每個貼紙的 HTML 碼都會有個連結和寫好的連結描述連到 MDN 的一些頁面，在 Promoto JS ! 的首頁提供的貼紙內容是隨機產生的，貼紙的大小則只有兩種，長條的和方的，你可以重新整理以取得你比較想連結的頁面和你比較想要的貼紙大小，檔然也可以使用 Tweet 小按鈕幫助宣傳這個活動，希望下次我要上 Google 找文件時，不用在手動加上 mdc 這關鍵字了。...</b:summary>
				<b:mainContent><p>由於在網路上要尋找好的 JavaScript 文件不太容易，所以前陣子舉辦的 <a href="http://jsconf.eu/2010/">JSconf.eu</a> 中，發起了 <a href="http://www.promotejs.com/">Promoto JS !</a> 的運動。事實上網路上是有不錯的 JS 文件，像是 <a href="https://developer.mozilla.org/en-US/">MDN</a> 的，不過搜尋時排序都不在前面，而且還會有些 Java 的資料混在其中，而這個運動就是希望藉由貼紙串連的方式，把 MDN 的文件排序推到前面，每個貼紙的 HTML 碼都會有個連結和寫好的連結描述連到 MDN 的一些頁面，在 <a href="http://www.promotejs.com/">Promoto JS !</a> 的首頁提供的貼紙內容是隨機產生的，貼紙的大小則只有兩種，長條的和方的，你可以重新整理以取得你比較想連結的頁面和你比較想要的貼紙大小，檔然也可以使用 Tweet 小按鈕幫助宣傳這個活動，希望下次我要上 Google 找文件時，不用在手動加上 mdc 這關鍵字了。</p>

<p><a href='https://developer.mozilla.org/en/JavaScript' title='JS Reference'><img src='http://static.jsconf.us/promotejsv.gif' height='280' width='160' alt='JS Reference'/></a></p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000630" baseName="colorful-man-page">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-10-03</b:date>
				<b:time>15:42:33</b:time>
			</b:datetime>
			<b:category>unix</b:category>
			<b:title>彩色 man page</b:title>
			<b:content>
				<b:summary>忘了哪裡看到的設定了，用的是 zsh # colorful man page export PAGER="`which less` -s" export BROWSER="$PAGER" export LESS_TERMCAP_mb=$'\E[38;5;167m' export LESS_TERMCAP_md=$'\E[38;5;39m' export LESS_TERMCAP_me=$'\E[38;5;231m' export LESS_TERMCAP_se=$'\E[38;5;231m' export LESS_TERMCAP_so=$'\E[38;5;167m' export LESS_TERMCAP_ue=$'\E[38;5;231m' export LESS_TERMCAP_us=$'\E[38;5;167m' 效果預覽： Mirror on gist...</b:summary>
				<b:mainContent><p>忘了哪裡看到的設定了，用的是 zsh</p>

<pre><code># colorful man page
export PAGER="`which less` -s"
export BROWSER="$PAGER"
export LESS_TERMCAP_mb=$'\E[38;5;167m'
export LESS_TERMCAP_md=$'\E[38;5;39m'
export LESS_TERMCAP_me=$'\E[38;5;231m'
export LESS_TERMCAP_se=$'\E[38;5;231m'
export LESS_TERMCAP_so=$'\E[38;5;167m'
export LESS_TERMCAP_ue=$'\E[38;5;231m'
export LESS_TERMCAP_us=$'\E[38;5;167m'
</code></pre>

<p>效果預覽：</p>

<p><a href="http://www.flickr.com/photos/othree/5046170237/" title="Flickr 上 othree 的 colorful man page"><img src="http://farm5.static.flickr.com/4087/5046170237_01e76043f9.jpg" width="500" height="346" alt="colorful man page" /></a></p>

<ul>
<li><a href="http://gist.github.com/608425">Mirror on gist</a></li>
</ul>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="2"></b:comments>


		</b:entry>

		<b:entry entryID="000629" baseName="commandline-install-dropbox">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-10-03</b:date>
				<b:time>11:28:51</b:time>
			</b:datetime>
			<b:category>unix</b:category>
			<b:title>命令列安裝 Dropbox</b:title>
			<b:content>
				<b:summary>剛剛試著在命令列安裝 Dropbox ，發現超簡單的，不過還是記錄一下，我安裝的流程是跟著 howto-install-dropbox-in-ubuntu 走的，不過我剛發現 官方的安裝說明 是沒說到要修改套件庫的來源檔，只要執行以下指令： sudo apt-get update;sudo apt-get upgrade nautilus-dropbox 如果有金鑰問題的話，加入套件庫金鑰的指令如下： sudo apt-key adv --keyserver pgp.mit.edu --recv-keys 5044912E 接著如果有用 nautilus 的話要把相關的程序全部關掉 nautilus --quit 然後安裝 Dropbox daemon dropbox start -i 啟動 Dropbox dropbox start 第一次啟動會看到下面的說明和連結 To link this...</b:summary>
				<b:mainContent><p>剛剛試著在命令列安裝 <a href="https://www.dropbox.com/">Dropbox</a> ，發現超簡單的，不過還是記錄一下，我安裝的流程是跟著 <a href="http://www.ubuntugeek.com/howto-install-dropbox-in-ubuntu-9-10karmic9-04jaunty8-10intrepid8-04hardy.html">howto-install-dropbox-in-ubuntu</a> 走的，不過我剛發現 <a href="https://www.dropbox.com/downloading?os=lnx">官方的安裝說明</a> 是沒說到要修改套件庫的來源檔，只要執行以下指令：</p>

<pre><code>sudo apt-get update;sudo apt-get upgrade nautilus-dropbox
</code></pre>

<p>如果有金鑰問題的話，加入套件庫金鑰的指令如下：</p>

<pre><code> sudo apt-key adv --keyserver pgp.mit.edu --recv-keys 5044912E
</code></pre>

<p>接著如果有用 nautilus 的話要把相關的程序全部關掉</p>

<pre><code>nautilus --quit
</code></pre>

<p>然後安裝 Dropbox daemon</p>

<pre><code>dropbox start -i
</code></pre>

<p>啟動 Dropbox </p>

<pre><code>dropbox start
</code></pre>

<p>第一次啟動會看到下面的說明和連結</p>

<pre><code>To link this computer to a dropbox account, visit the following url:
https://www.dropbox.com/cli_link?host_id=01d51f8e353b4f9a45085***********
</code></pre>

<p>用瀏覽器開一下那個連結把帳號連結建立起來後就完成了，預設的目錄位置會在 ~/Dropbox 裡面，也可以執行 man dropbox 來看其它使用說明。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000628" baseName="html5vim">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-09-16</b:date>
				<b:time>21:30:12</b:time>
			</b:datetime>
			<b:category>vim</b:category>
			<b:title>html5.vim</b:title>
			<b:content>
				<b:summary>上週花了約三四天時間搞出來的 html5.vim ，目前主要功能是 HTML5 syntax 和 omnicomplete，omnicomplete 的部份是拿內建的 html omni complete function 出來修改，除了幾乎重建的字典檔外，還修了補完函數中一些我之前發現的錯誤，字典檔的部份還特別加上 WAI-ARIA 和一些其他規範的支援，之後有考慮加上 MathML 和 SVG ，如果有任何意見歡迎到 github repo 上提出 issue。...</b:summary>
				<b:mainContent><p>上週花了約三四天時間搞出來的 <a href="http://www.vim.org/scripts/script.php?script_id=3236">html5.vim</a> ，目前主要功能是 <span class="caps">HTML5 </span>syntax 和 omnicomplete，omnicomplete 的部份是拿內建的 html omni complete function 出來修改，除了幾乎重建的字典檔外，還修了補完函數中一些我之前發現的錯誤，字典檔的部份還特別加上 <a href="http://www.w3.org/TR/wai-aria/"><span class="caps">WAI</span>-ARIA</a> 和一些其他規範的支援，之後有考慮加上 MathML 和 <span class="caps">SVG </span>，如果有任何意見歡迎到 <a href="http://github.com/othree/html5.vim/">github repo</a> 上提出 issue。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="1"></b:comments>


		</b:entry>

		<b:entry entryID="000627" baseName="google-closure-linter">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-09-06</b:date>
				<b:time>00:07:54</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>Google Closure Linter</b:title>
			<b:content>
				<b:summary>Google Closure Linter 是 Google Closure Tools 的新產品，基本上就是做和 JSLint 一樣的事情，和 Closure Compiler 不一樣的是這次是 python 寫的，直接用 easy_install 完就有命令列指令可以用，方便很多，不過試用過後我還是比較喜歡 JSLint ，因為一部分我想要的檢查項目沒有，像是 JSLint 的 onevar 這個檢查項目，而且選項也很少，預設就會檢查空白和縮排，而且沒辦法關掉。 除了 Closure Linter 外，Google 也公開了他們的 JavaScript Coding Style Guide ，有興趣的可以逐條看看。 最後順便提一下， JavaScript Best Practice 我還記得我沒寫完，不過最近幾乎都在看 WAI-ARIA 就是，也很想整理整理寫一兩篇文章說。...</b:summary>
				<b:mainContent><p><a href="http://closuretools.blogspot.com/2010/08/introducing-closure-linter.html">Google Closure Linter</a> 是 Google Closure Tools 的新產品，基本上就是做和 <a href="http://jslint.com/"><span class="caps">JSL</span>int</a> 一樣的事情，和 Closure Compiler 不一樣的是這次是 python 寫的，直接用 easy_install 完就有命令列指令可以用，方便很多，不過試用過後我還是比較喜歡 <span class="caps">JSL</span>int ，因為一部分我想要的檢查項目沒有，像是 <span class="caps">JSL</span>int 的 <a href="http://www.jslint.com/lint.html#scope">onevar</a> 這個檢查項目，而且選項也很少，預設就會檢查空白和縮排，而且沒辦法關掉。</p>

<p>除了 Closure Linter 外，Google 也公開了他們的 <a href="http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml">JavaScript Coding Style Guide</a> ，有興趣的可以逐條看看。</p>

<p>最後順便提一下， JavaScript Best Practice 我還記得我沒寫完，不過最近幾乎都在看 <a href="http://www.w3.org/WAI/intro/aria"><span class="caps">WAI</span>-ARIA</a> 就是，也很想整理整理寫一兩篇文章說。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000626" baseName="satoshi-kon-passed-away">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-08-26</b:date>
				<b:time>01:39:08</b:time>
			</b:datetime>
			<b:category>acg</b:category>
			<b:title>今敏監督過世</b:title>
			<b:content>
				<b:summary>本文非採用 CC 授權。 （圖片來源： CCSX Makes ACG NEWS ） 今天（25日）早上，我被可能是要來傳教的人的電鈴聲吵醒，當然我沒開門讓對方進來，不過我還記得她在對講機另一頭傳來的最後一句話：「其實人的生命...」然後我就掛掉了，我無法肯定她要說什麼，大概是要說人生無常怎樣怎樣的，這種事情我當然早知道了，不過反正人類就是不見棺材不掉淚的墮落物種。 之後我一如往常的上網看新文章和消息，就看到了 今敏監督過世的消息 ，果然人世無常，就在我還在等他新作品問世的時候，他突然的就走了。今敏監督是我非常喜歡的監督，他的作品非日本主流的方向（以目前來說是萌吧），也不是Ghibli 那種全家可以歡心觀賞的，很有個人風格，雖然日本當地票房表現不突出，但也屢屢獲得國際肯定，他的作品總是超乎我的想像力的最大範圍，看片時不管是誰或多或少會有預期或是猜想接下來的發展，不過他的故事總是跑的比我的想像力要快，看盜夢偵探時更是如此，也因此，他的作品我幾乎都只看一次，因為那種初看的感觸太過令人難忘，實在不捨把它磨淡。 今敏監督的過世其實對我衝擊不小，一來是我很喜歡他的作品，總是可以抓住我的情緒，二是他來過台灣，似乎上也不過幾年前，那時候他看起來人很好，我的映像也加分不少，比起同樣英年早逝也很另我惋惜的 近藤喜文 和我的交集就少了許多，今敏和我的關係更密切些，再加上期待的 新作品 還沒完成，不只是我們遺憾不能完整的看到他想給我們看的，今敏本人也是相當掛念不下他沒完成的作品，看著他的遺言真是讓我倍感難過，希望不要再有這樣令人惋惜的事情發生了，也祝福他能安心離開人世。 如果你從沒見過他的作品，我強烈推薦可以去找 千年女優 和 盜夢偵探 兩部來看看（不過前者代理版DVD的品質又是另一回事了）。 文末附上今敏監督給大家的遺言，由 PTT 版友 kinnsan 翻譯，原 刊載在今敏的部落格上 ，你也可以到 這 看中文版，或許會更好閱讀，就算你對動畫沒興趣，這篇文章也很值得靜靜體會。...</b:summary>
				<b:mainContent><p>本文非採用 CC 授權。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/ccsx/4926699112/" title="Flickr 上 ccsx 的 100825 - 日本動畫導演「今敏」因胰臟癌而在24日驟逝，劇場版《作夢機器》終成遺作，7000字遺書公開。 (1/2)"><img src="http://farm5.static.flickr.com/4100/4926699112_7e7b260f41.jpg" width="374" height="500" alt="100825 - 日本動畫導演「今敏」因胰臟癌而在24日驟逝，劇場版《作夢機器》終成遺作，7000字遺書公開。 (1/2)" /></a><br />
（圖片來源： <a href="http://ccsx.wordpress.com/2010/08/25/satoshi-kon-passed-away/"><span class="caps">CCSX</span> Makes <span class="caps">ACG NEWS</span></a> ）</p>

<p>今天（25日）早上，我被可能是要來傳教的人的電鈴聲吵醒，當然我沒開門讓對方進來，不過我還記得她在對講機另一頭傳來的最後一句話：「其實人的生命...」然後我就掛掉了，我無法肯定她要說什麼，大概是要說人生無常怎樣怎樣的，這種事情我當然早知道了，不過反正人類就是不見棺材不掉淚的墮落物種。</p>

<p>之後我一如往常的上網看新文章和消息，就看到了 <a href="http://headlines.yahoo.co.jp/hl?a=20100825-00000013-flix-movi">今敏監督過世的消息</a> ，果然人世無常，就在我還在等他新作品問世的時候，他突然的就走了。今敏監督是我非常喜歡的監督，他的作品非日本主流的方向（以目前來說是萌吧），也不是Ghibli 那種全家可以歡心觀賞的，很有個人風格，雖然日本當地票房表現不突出，但也屢屢獲得國際肯定，他的作品總是超乎我的想像力的最大範圍，看片時不管是誰或多或少會有預期或是猜想接下來的發展，不過他的故事總是跑的比我的想像力要快，看盜夢偵探時更是如此，也因此，他的作品我幾乎都只看一次，因為那種初看的感觸太過令人難忘，實在不捨把它磨淡。</p>

<p>今敏監督的過世其實對我衝擊不小，一來是我很喜歡他的作品，總是可以抓住我的情緒，二是他來過台灣，似乎上也不過幾年前，那時候他看起來人很好，我的映像也加分不少，比起同樣英年早逝也很另我惋惜的 <a href="http://zh.wikipedia.org/zh-tw/%E8%BF%91%E8%97%A4%E5%96%9C%E6%96%87">近藤喜文</a> 和我的交集就少了許多，今敏和我的關係更密切些，再加上期待的 <a href="http://yume-robo.com/">新作品</a> 還沒完成，不只是我們遺憾不能完整的看到他想給我們看的，今敏本人也是相當掛念不下他沒完成的作品，看著他的遺言真是讓我倍感難過，希望不要再有這樣令人惋惜的事情發生了，也祝福他能安心離開人世。</p>

<p>如果你從沒見過他的作品，我強烈推薦可以去找 <a href="http://zh.wikipedia.org/zh-tw/%E5%8D%83%E5%B9%B4%E5%A5%B3%E5%84%AA">千年女優</a> 和 <a href="http://zh.wikipedia.org/zh-tw/%E7%9B%9C%E5%A4%A2%E5%81%B5%E6%8E%A2">盜夢偵探</a> 兩部來看看（不過前者代理版DVD的品質又是另一回事了）。</p>

<p>文末附上今敏監督給大家的遺言，由 <span class="caps">PTT </span>版友 kinnsan 翻譯，原 <a href="http://konstone.s-kon.net/modules/notebook/archives/565">刊載在今敏的部落格上</a> ，你也可以到 <a href="http://ppt.cc/RLWT">這</a> 看中文版，或許會更好閱讀，就算你對動畫沒興趣，這篇文章也很值得靜靜體會。</p></b:mainContent>
				<b:extendContent><blockquote>

<p>再見了。</p>

<p>今年的5月18日，是我忘不了的日子。<br />
這一天，武藏野紅十字醫院心臟內科的醫師作出如下的宣告：<br />
「你是胰臟癌末期，癌細胞已經轉移至全身各處骨頭，最多只能再活半年。」<br />
我跟內人一起聽到這番話。命運實在太過唐突、太過沒有道理，使我們倆幾乎無法獨力承受。<br />
我平常心裡就在想：<br />
「隨時都有可能會死掉，這也是沒辦法的。」<br />
但這未免太過突然了。</p>

<p>不過，或許真的可以說是有事先徵兆。2～3個月前，我整片背部各處，以及我的腳跟等部位都出現劇烈疼痛，右腳也使不上力，走路更出現了很大的困難。我有找過針灸師與整脊師，但狀況並未改善。經過MRI（核磁共振）與PET-CT（正子斷層掃描）等等精密儀器檢查的結果，就是剛剛那段「只能再活半年」的宣告。<br />
這簡直像是回過神來，死神就站在背後似的，我實在也是束手無策。</p>

<p>宣告後，我與內人一同摸索活下去的辦法。真的是拚了老命。<br />
我們得到了可靠的友人以及無比強力的支援。我拒絕抗癌劑，想要相信與世間普遍觀念略略不同的世界觀活下去。感覺拒絕「普通」這點，倒還挺有我的風格的。反正多數派當中也沒有我的容身之處，即使是醫療方面也一樣。同時這次也讓我體認到，現代醫療的主流派背後，究竟有著什麼樣的機制。<br />
「就在自己選擇的世界觀當中活下去吧！」<br />
可惜，光靠一股氣力是沒有用的，這點跟製作作品時一樣。<br />
病情確實一天天的惡化。</p>

<p>同時我也算是一個社會人，因此平常的我也大約接受了一半的世間普遍世界觀。畢竟我也會乖乖的繳納稅金。就算不足以自傲，我也夠資格算是日本社會的成員。<br />
所以在與我「活下去」的世界觀作準備的同時，我也打算著手<br />
「替我的死亡作準備」。<br />
雖然完全沒有就緒就是了。<br />
準備之一，就是找來兩個值得信賴的朋友協助，成立一間公司，負責管理今敏微不足道的著作權。<br />
另外一項準備就是，寫好遺囑好讓我並不算多的財產能順利地讓內人繼承。當然了，我死後應該是不會發生遺產爭奪戰，但我也想替獨活在世界上的妻子盡可能除去不安，這樣我才能稍微安心地離開。</p>

<p>各種手續，我與內人都很頭痛的事務處理、事先調查等等，由於超棒的朋友相助，進行得十分迅速。<br />
後來我併發肺炎的危急情況當中，意識矇矓地在遺囑上簽下最後的名字時，我心裡總算是覺得：這樣死掉應該也可以了吧。<br />
「唉...總算能死了。」<br />
畢竟在兩天前就被救護車送到武藏野紅十字，過了一天又被救護車送到同一間醫院。也因此住院作了詳細檢查。檢查結果是併發了肺炎，肺部也有嚴重積水。我跟醫生問了個究竟，他的回答倒是挺官腔的。就某方面而言，也挺感謝他的。<br />
「頂多只能撐個一兩天......就算熬了過去，最多月底就不行了吧。」<br />
聽著聽著我心想「怎麼講得跟天氣預報一樣...」不過事態確實越來越緊急了。<br />
那是7月7日的事。這年七夕也未免太殘忍了。</p>

<p>所以我很快地下了決定：<br />
我要死在家裡。<br />
或許對我身邊的人而言，最後仍然給他們添了很大的麻煩，好不容易才找到能讓我離開醫院回到家裡的方法。<br />
一切都多虧了我妻子的努力，醫院那看似放棄卻又真的有幫到我的實際協助，外部醫院的莫大支援，以及屢屢令人只能認為是「天賜」的偶然，甚至讓我無法相信現實當中的偶然與必然，竟然能這麼巧合地環環相扣。畢竟這又不是「東京教父」啊。</p>

<p>在我妻子替我設法離開醫院奔走時，我則是對醫生說「就算一天也好、半天也好，只要我留在家裡就一定還有辦法！」說完後我就一個人留在陰暗的病房內等死。<br />
當時很寂寞，但我心裡想的卻是：<br />
「死或許也不算壞。」<br />
這想法不是出於什麼特別的理由，或許是因為如果不這麼想我就撐不下去了吧，但總之，當時我的心情是連我自己都非常驚訝的平穩。<br />
只有一天讓我說什麼都無法接受。<br />
「我說什麼都不想死在這種地方......」<br />
此時眼前掛在牆壁上的月曆開始晃動，房間看起來越來越大。<br />
「傷腦筋......怎麼是從月曆裡跑出來接我走呢。我的幻覺真是不夠充滿個性。」<br />
此時我的職業意識仍然在運作，令我忍不住想笑。但此時或許是我最接近「死亡」的一刻吧。我真正感覺到死亡的逼近。<br />
在「死亡」與床單的包裹之下，加上許多人的盡力而為，我奇蹟似地逃出了武藏野紅十字，回到自己家中。<br />
死也是很痛苦的。<br />
我先聲明，我並不是批評或是討厭武藏野紅十字醫院，請各位不要誤會。<br />
我只是想要回自己家而已。<br />
回到那個我生活的地方。</p>

<p>有一點讓我略為吃驚。就是當我被送到家中客廳時，居然還附帶了臨死體驗中最常聽到的體驗：「站在高處看著自己被搬到房間內的模樣」。<br />
大概是站在地面上數公尺的地方，用有點廣角的鏡頭俯瞰著包含著自己的風景。房間中央的床鋪的四角形，給了我特別大的印象。被裹在床單內的自己，放在那塊四角形上。<br />
感覺並不怎麼小心翼翼，不過也沒什麼好抱怨的。</p>

<p>我本來應該是在家裡等死的。<br />
沒想到。<br />
我似乎是輕輕鬆鬆地翻過了肺炎這難關。<br />
哎呀？<br />
我居然這麼想：<br />
「竟然會沒死成啊（笑）」<br />
後來滿腦子都只有「死」的我，覺得只有一次真正死掉。<br />
在朦朧的意識深處，「reborn」這個詞彙晃動了數次。<br />
不可思議地，第二天起我的氣力再度啟動了。<br />
我覺得這一切，都是我妻子、來探我的病分我一份元氣的那些人、來替我加油的朋友、醫師、護士、看護等等所有人的功勞。我打從心裡這麼想。</p>

<p>既然活下去的氣力都再度啟動了，我就不能繼續模模糊糊地下去。<br />
我謹記這是多分到的一段壽命，所以我更得好好運用。<br />
同時我也想要至少多還一份人情。<br />
其實我罹患癌症這件事，我只告訴了身邊極少數的人，連我雙親都不知道。特別是這會替我的工作製造許多麻煩，所以我說也說不出口。<br />
我本來也想上網宣布我得了癌症，每天跟大家報告我剩餘的人生，但因為我擔心今敏即將死亡這事說來雖小，卻也會造成許多影響，也因此非常對不起身邊的親朋好友。真的是非常抱歉。</p>

<p>死前，我還想再見許多人一面，跟他們說幾句話。<br />
這段人生當中，我有家人，親戚，從國小國中開始交往的朋友，高中同學，大學認識的同伴，在漫畫的世界當中結識並交換許多刺激的人們，在動畫的世界中一同工作、一同喝酒、用同樣的作品刺激彼此的技術、同甘共苦的眾多同伴，由於擔任動畫導演得以認識的無數人們，以及世界各地願意自稱是我的影迷的許多貴人。還有透過網路認識的朋友。</p>

<p>如果可以，我還想見很多人一面（當然也有不想見到的人）。但是見了面後，感覺我腦子裡「我再也見不到這個人了！」的想法會累積得越來越多，讓我沒有辦法乾脆地赴死。<br />
同時即使略為恢復，我所剩的氣力也不多了，要見別人的面需要莫大的決心。越想見面的人，見到面卻越痛苦，真是太諷刺了。<br />
再加上，由於癌細胞轉移到骨頭上，下半身開始麻痺，我幾乎無法下床。我不想讓別人看到我瘦成皮包骨的模樣。我希望許許多多的朋友記得的能是那個還充滿元氣的今敏。<br />
不知道我病情的親氣、所有朋友、所有認識的人，我要藉這個場合跟你們道歉。但我真的很希望你們可以理解今敏的這份任性。<br />
因為今敏本來就是「這樣的傢伙」嘛。<br />
想到你們的臉，我的腦子裡就湧現許多美好的回憶與笑容。<br />
真的非常感謝大家給了我這麼棒的回憶。<br />
我好愛自己生活的這個世界。<br />
這樣的想法，本身就是一種幸福。</p>

<p>在我的人生當中認識的不算少的人們，無論影響是正面或是負面，都是構成「今敏」這個人的必要成分，我要感謝所有的邂逅。雖然結果是我四十幾歲就早逝了，但我也認為這是無可取代的我的命運。同時我也有過十分多的美好經驗。<br />
現在我對於死，只有這個想法：<br />
「也只能說遺憾了。」<br />
是真的。</p>

<p>雖然我可以把這麼多的虧欠想成是無可奈何的，並且放棄，還是有件事讓我說什麼都過意不去。<br />
就是我的雙親，以及MAD <span class="caps">HOUSE</span>丸山先生。<br />
一方是今敏的親生父母，另一方則是動畫導演方面的再造父母。<br />
雖然是有點遲了，除了坦白相告，我也沒有其他方法可選。<br />
當時我真的希望獲得原諒。</p>

<p>看到丸山先生來到家裡探望我時，我控制不了我的淚，也控制不了自慚形穢的想法。<br />
「對不起，我居然變成這樣......」<br />
丸山先生什麼話也沒說，只是搖搖頭，握住我的雙手。<br />
讓我的心裡充滿了感激。<br />
能夠跟這位先生一起工作的感激之情，化為無法訴諸言語的歡喜，怒濤般地席捲而來。<br />
這話聽起來或許十分誇張，但我真的只能這麼形容。<br />
或許只是我個人妄想，但我真的覺得有一舉獲得原諒的感覺。</p>

<p>我最放不下的，就是電影「做夢機械」。<br />
電影本身固然如此，所有參與的工作人員也讓我非常的掛心。因為搞不好，一路上含辛茹苦畫出來的畫面，是非常可能再也無法被任何人看到的。<br />
因為原作、腳本、角色與世界觀的設定、分鏡、印象音樂......等等所有的想法都在今敏一個人的心中。<br />
當然了，有很多部分也是作畫監督、美術監督等等許多工作人員所共有的，但基本上這部作品只有今敏知道是在搞什麼，也只有今敏做的出來。如果說會變成這樣全都是今敏的責任，那我也無話可說；但是我自認我也是付出了不少的努力，希望能跟大家一起分享這個世界觀的。事到如今，我的不對實在令我椎心刺骨地痛。<br />
我真的覺得很對不起各位工作人員。<br />
但我希望你們稍微理解。<br />
因為今敏就是「這樣的人」，也才有辦法作出濃縮了許多與其他人不一樣成分的動畫。<br />
這說法或許十分傲慢，但請各位看在癌症的面子上就原諒我吧。</p>

<p>我並不是茫然地等死，我也在拼命地絞盡腦汁，好讓今敏亡後作品也能繼續存續。但這想法也太單純了。<br />
我跟丸山先生提到我對「做夢機械」的掛念，<br />
他只說了：<br />
「放心，我會替你想辦法的，不用擔心。」<br />
我哭了<br />
我真的痛哭了。<br />
過去在製作電影時、在編列預算時，都欠了他不少人情，最後總是丸山先生在替我收拾善後。<br />
這次也一樣，我一點進步都沒有。<br />
我跟丸山先生有很多時間長壇。也因此，我才稍微實際體會到，今敏的才能與技術在現在的動畫業界當中是十分珍貴的。<br />
我好惋惜這些才能。我說什麼都想要留下來。<br />
不過既然The <span class="caps">MADHOUSE</span>丸山先生都這麼說了，我總算能帶點自信，安心地走了。<br />
確實，不用別人說我也單純地覺得，這怪點子以及細部描寫的技術就這麼消失了真的很可惜，但也沒辦法了。<br />
我衷心地感謝給了我站在世人面前機會的丸山先生。我真的很感謝你。<br />
以動畫導演身分而言，今敏也夠幸福的了。</p>

<p>告訴雙親時真的非常的痛苦。<br />
其實我也想趁著還能自由行動時，自己前往札幌，跟雙親報告我得了癌症這件事，但病情惡化的速度實在快得可惡，最後我只能在最接近死亡的病房內，打了通唐突至極的電話告訴他們。<br />
「我得了脾臟癌，末期了，馬上就會死。能當爸爸媽媽的孩子我真的很幸福。謝謝你們。」<br />
突然說出口的話，並沒有醞釀很久，畢竟當時我已經被將死的預感給包圍了。</p>

<p>直到我回到家，好不容易度過肺炎難關時。<br />
我下了很大的決心，才決定與雙親見面。<br />
雙親也很想見我。<br />
見面反倒痛苦，我也沒有氣力見面......但我說什麼都想看看他們的臉。我想當面跟他們說，我很感謝他們生下我。<br />
我真的很幸福。<br />
雖然說我的生命走的比別人快了一點......這點讓我對妻子、對雙親、對我喜歡的人們都很不好意思。<br />
他們很快地就回應了我的任性。第二天，我的雙親就從札幌趕到我家。<br />
剛看到我躺在床上，我媽脫口而出的那句話我畢生難忘。<br />
「對不起！我沒有把你生成一個健康的孩子！」<br />
我說不出第二句話。</p>

<p>跟雙親生活的日子並不算長，但已經夠了。<br />
我覺得他們看到我的臉，就能明白一切，事實上也是如此。</p>

<p>謝謝你們，爸爸，媽媽。<br />
能夠以你們兩人的孩子的身分誕生在這個世界上，是無比的幸福。<br />
數不盡的回憶以及感謝，充滿了我的胸膛。<br />
幸福本身也很可貴，但我更感激不盡的是，他們讓我培養出能感受到幸福的能力。<br />
真的很謝謝你們。</p>

<p>早父母一步先走非常不孝，不過這十幾年當中，我以動畫導演的身分充分施展自己的本領，達成了我的目標，也得到了相當的評價。唯一遺憾的是不算很賣座，但我覺得已經足以報答他們。<br />
特別是這十幾年來，我的生命密度是別人的好幾倍。這一點我相信雙親跟我一定都知道。</p>

<p>能夠跟雙親與丸山先生直接對話，讓我卸下了肩頭上的重擔。</p>

<p>最後，是比誰都讓我掛念，卻又直到最後都極力支撐我的妻子。<br />
接受醫生的宣告後，我們兩個人對泣數次。這段日子，每天對我們的身心都是煎熬。甚至無法用言詞形容。<br />
可是，我之所以能夠熬過這些痛苦又無奈的日子，全都是因為醫生的宣告後，妳說的那番強而有力的話：<br />
「我會陪你走到最後。」<br />
妳這話一點都沒有錯。彷彿是要擺脫我的擔心似的，面對那些怒濤般從各處湧來的要求、請求，妳整理得井然有序，同時妳一下子就學會了如何照顧自己的丈夫。妳精明幹練的模樣，讓我非常感動。<br />
「我的妻子好厲害啊！」<br />
都到這個地步就別說這些了？不不，是因為我深切體會到，妳比我一直以來所認為的都還要厲害。<br />
我相信在我死了以後，妳一定也能很順利地將今敏送走。<br />
回想起來，結婚後我每天都忙著工作工作，現在想想唯一悠閒地待在家裡的日子，就是罹癌之後，也真是太過分了。<br />
可是，我身旁的妳非常明白，忙於工作的人就是有所才能的人。我真的很幸福，真的。<br />
無論是活著的日子，還是迎接死亡的日子，我對妳的感謝都無法訴盡。謝謝妳。</p>

<p>還有很多事情讓我掛心的，但是一一細數就沒完沒了了。萬事都需要一個結束。<br />
最後，是我想現在應該很難接受的......答應讓我在家裡接受癌末照護的主治醫師H醫師，<br />
以及他的太太護理師K女士，我要對你們致上深深的謝意。<br />
雖然在家裡進行醫療是非常不方便的，但你們仍頑強地替我想出各種方法緩解癌症帶來的疼痛，在死亡逼近時你們也極力設法讓我過的更舒服一點，這真的幫了我很多。<br />
不光是如此，面對這個不光是麻煩，態度也異常高傲的病患，你們跨越了工作的框框，用更人性化的方式幫助我們。真不知道該說是你們支撐著我們夫妻，還是拯救了我們。<br />
同時醫師賢伉儷的人品也不時地給了我們鼓勵。<br />
真的非常非常感謝你們。</p>

<p>這篇文章也到了最後了。在5月半知道我壽命所剩無幾時起，不分公私給了我們異乎尋常的盡力協助以及精神支援的兩位朋友，株式會社KON'STONE的成員、同時也是我高中時起的好朋友T先生，以及製作人H，我要衷心感謝你們。<br />
真的很感謝你們。從我貧乏的語彙庫當中，很難找出適當的感謝詞，但我們夫妻都深受你們的照顧。<br />
如果沒有你們倆，我的死恐怕會更加痛苦，同時在一旁照顧我的妻子也恐怕會我吞噬吧。<br />
真的一切都受你們的照顧了。<br />
儘管一直承蒙照顧，但不好意思，能夠請你們協助我的妻子，一直到我死後出殯嗎？<br />
這樣一來，我也能安心地「上飛機」了。<br />
我衷心地拜託你們。</p>

<p>最後，感謝一路閱讀這篇落落長文章的讀者，謝謝你們。<br />
我要懷著對世上所有美好事物的謝意，放下我的筆了。</p>

<p>我就先走一步了。</p>

<p>今 敏</p>

</blockquote></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000624" baseName="javascript-best-practice-2">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-08-08</b:date>
				<b:time>16:26:44</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>JavaScript Best Practice Part.2: Performance</b:title>
			<b:content>
				<b:summary>目前 JavaScript Best Practice 想了四個主題，不過後面兩個主題的東西還有點少，雖然預計一週一篇，可能還會再看看吧，這篇主要是在效能增進的一些作法，下一篇應該會是一點安全性的東西，第四篇應該是 Loose Coupling (Special Event)。總之所以就開始吧～...</b:summary>
				<b:mainContent><p>目前 JavaScript Best Practice 想了四個主題，不過後面兩個主題的東西還有點少，雖然預計一週一篇，可能還會再看看吧，這篇主要是在效能增進的一些作法，下一篇應該會是一點安全性的東西，第四篇應該是 Loose Coupling (Special Event)。總之所以就開始吧～</p></b:mainContent>
				<b:extendContent><h4>陣列與迴圈</h4>

<p>通常用 for 迴圈處理陣列時會這樣寫：</p>



<pre><code>for (i=0; i &lt; arr.length; i++) {
    arr[i] = blah...
}
</code></pre>



<p>不過這樣效率比較差，每次都要去看陣列的長度，所以建議寫成：</p>



<pre><code>for (i=0, len=arr.length; i &lt; arr.len; i++) {
    arr[i] = blah...
}
</code></pre>



<p>這樣就只有一開始去存取陣列長度而已，其實還有其他寫法可以更快，像是反過來存取，或是改用 while，不過程式碼比較不淺顯好懂，就比較不推薦使用。</p>

<p>如果不是陣列而是 <span class="caps">DOM</span> NodeList 的話差距會更明顯，DOM NodeList 雖然行為和陣列有些相似，不過效率上一直都比較差，所以像 <a href="http://sizzlejs.com/">sizzle</a> 還會把找到的節點丟到陣列才回傳，又不過其實現在大部分的新瀏覽器在 <span class="caps">DOM</span> NodeList 存取和陣列存取的效率差距越來越小了。</p>

<h4>One var</h4>

<p>宣告多個變數時：</p>



<pre><code>var a = 1;
var b = 2;
var c = 3;
</code></pre>



<p>改成</p>



<pre><code>var a = 1,
    b = 2,
    c = 3;
</code></pre>



<p>試著讓每個 function 一開始就用一個 var 把所有需要的變數的宣告好，包括 for 迴圈要用到的 i, j, k, len 等變數，因為 JavaScript 只有 function 有 scope 的效果，所以在 <code>for (var i = 0; i &lt; arr.length; i++)</code> 這裡面宣告的 i 和在外面宣告的一樣，所以就統一移到前面去宣告吧，這在 <a href="http://blog.othree.net/log/2010/08/02/javascript-best-practice-1/">前一篇的文章</a> 有提到 <span class="caps">JSL</span>int 的 onevar 這個選項可以使用，所以可以交給 <span class="caps">JSL</span>int 檢查。</p>

<h4>字串串接</h4>

<p>如果有需要大量使用到字串串接，像是下面的程式碼：</p>



<pre><code>str = '';
for (i=0, len=arr.length; i &lt; len; i++) {
    str += arr[i].text;
}</code></pre>



<p>那改成先丟進陣列，最後用 join 一口氣接起來會快很多：</p>



<pre><code>strarr = [];
for (i=0, len=arr.length; i &lt; len; i++) {
    strarr.push(arr[i].text);
}
str = strarr.join('');</code></pre>



<h4>使用 innerHTML 還是 <span class="caps">DOM</span></h4>

<p>在我曾經還是標準狂信者的時候，我是很討厭使用 <a href="https://developer.mozilla.org/en/dom:element.innerhtml">innerHTML</a> 的，不過後來我脫離了這個階段，innerHTML 就再也不是我的禁忌了，畢竟它速度快、相容性又高，不過需要注意的是在 IE 下使用標籤語法要正確，像是標籤沒有結束的話，其他瀏覽器會產生空的標籤，IE 可能就什麼都沒產生了，不過使用上要注意，把需要的 <span class="caps">HTML </span>字串都生好了一口氣丟進去，不然速度還是會很慢，另外比較特別的是其實 webkit 瀏覽器使用 <span class="caps">DOM </span>會比較快。</p>

<h4>Scope Chain</h4>

<p>JavaScript 的 scope 是要用 function 來建立，每多一層 function scope 就會讓 scope chain 多一層，scope chain 指的尋找變數、函數時的搜尋路徑，越多層 function scope 的東西要存取起來速度就會越慢，前一篇也有提到不要使用 with，其中一個原因就是會讓本來直接可以存取的東西跑到上一層去，所以考慮到這個問題，所有會存取到兩次以上的，不同層的東西都盡量在這層存起來，舉例來說：</p>



<pre><code>function test() {
    if (/baga/.test(document.getElementById('id1').className) {
        document.getElementById('id1').style.color = 'red';
    }
}</code></pre>



<p>就可以改成下面這樣，程式碼看起來也比較精簡：</p>



<pre><code>function test() {
    var id1 = document.getElementById('id1');
    if (/baga/.test(id1.className) {
        id1.style.color = 'red';
    }
}</code></pre>



<p>有些人可能會習慣用一個匿名函數把自己的 code 包起來，避免污染到其他的 script，如下：</p>



<pre><code>(function () {
    // blah...
})();</code></pre>



<p>實際上這樣寫，會讓 global scope 的東西變得遠一層，所以像是 document 這種常用到的物件存取時間就會增加，有一個從 <a href="http://paulirish.com/2010/10-things-i-learned-from-the-jquery-source/">10 Things I Learned from the jQuery Source</a> 看到的方法如下：</p>



<pre><code>(function (window, document, undefined) {
    // blah...
})(window, document);</code></pre>



<p>這種寫法有兩個好處，一個是剛剛提到的，把 document 抓回到同一層， <a href="http://gugod.org/">gugod</a> 說這樣在 IE 下會快不少，另一個好處是使用壓縮工具時，可以把 window, document 這些變數名稱也壓縮起來。至於輸入參數的第三個 undefined 是故意的，這樣的用途是確保 undefined 沒被人覆寫過，不過 undefined 沒辦法過 <span class="caps">JSL</span>int，我是建議看自己的情形來決定需不需要，當然有的話比較安全。</p>

<h4>Reflow and Repaint</h4>

<p>當你對文件結構或是文件樣式做修改時，瀏覽器需要重新畫一次頁面，這些工作能盡量減少就盡量減少，大概有幾個方向可以做到：</p>


<ul>
<li>減少對文件樹的修改：修改文件樹會需要 reflow (當然接著 repaint)，所以要盡量減少文件樹的改動次數，如果需要插入大量的節點，可以先用 <a href="http://ejohn.org/blog/dom-documentfragments/">documentFragment</a> 包起來，再一次放進來。</li>
<li>避免直接修改 style 屬性：因為無法一次修改 style 的不同屬性，所以建議是用 class 來預先寫好不同狀況的樣式，然後改 class ，這樣就可以一口氣讓節點的樣式改好，而不會因為需要改三個屬性就讓能瀏覽器重畫了三次。</li>
<li>減少存取顯示相關的屬性：瀏覽器本身會做一些最佳化和排程來減少 reflow/repaint 工作，不過如果你需要存取這些顯示相關的資料（例如：寬、高、位置等），瀏覽器就會被迫馬上重畫，所以可以不存取就不要存取，例如做移動效果時，先把路徑設計好，然後看時間決定位置，而不要根據現在位置和函數執行的次數來移動。</li>
</ul>



<p>關於 reflow/repaint ， phpied 有篇文章 <a href="http://www.phpied.com/rendering-repaint-reflowrelayout-restyle/">Rendering: repaint, reflow/relayout, restyle</a> 講的很詳細，有興趣深入的可以看看。</p>

<h4>Event Delegation</h4>

<p>如果你有大量的東西要加上同樣的事件，像是文件清單，要給每個文件都放上 click 事件來產生選取效果，那建議使用 event delegation 方式，而不要真的給每個元件都綁定事件，一來綁事件本身就很花時間了，二來也會吃記憶體，event delegation 的作法是把事件把在目標節點共同的祖先層，然後再用 event.target 來判斷實際上是按到哪個元素，程式碼看起來如下：</p>



<pre><code>document.getElementById('#file-list').addEventListener('click', function (e) {
    var target = e.target,
        tclass = target.className;
    if (target.nodeName.toLowerCase() == 'li') {
        tclass = tclass == 'selected' ? '' : 'selected' ;
    }
}, false);
</code></pre>



<p>這段 code 在 IE 上不能運作。Delegation 除了速度和記憶體的好處外，還有一個好處是因為事件綁在上面一層，所以內容（檔案清單）的增減都不用再去處理事件的增減，可以讓你的程式的 coupling 更鬆一點。</p>

<p>一些函式庫像是 jQuery 有提供 delegation ，讓你寫起來比較方便，除此之外它還有 live/dead，差別是 live/dead 是把事件綁在最外層，也就是 document 本身，不過這樣做有些缺點，一是綁太多時，效率會變差，因為要做太多的 target 判斷，加上一些事件可能會發生的太頻繁，整個就會卡住，二是有些事件不會跑到最上層。</p>

<h4>函數名稱和 profiling 工具</h4>

<p>匿名函數很好用，不過建議還是給它個名字，這樣在 profiling 的時候才知道是哪個函數，以下面這段程式碼為範例，用了兩種方法綁定事件，分別給了有名稱的函數和沒名稱的函數：</p>



<pre><code>function call() {
}
document.getElementById('b1').onclick = function () {
    call();
};
document.getElementById('b2').onclick = function b2() {
    call();
};
document.getElementById('b3').addEventListener('click', function () {
    call();
}, false);
document.getElementById('b4').addEventListener('click', function b4() {
    call();
}, false);
</code></pre>



<p>接著我依序點了四個目標，用 Firebug 記錄事件，結果如下圖：</p>

<p><a href="http://www.flickr.com/photos/othree/4869179392/" title="Flickr 上 othree 的 profiling"><img src="http://farm5.static.flickr.com/4138/4869179392_24f190df95_o.png" width="602" height="168" alt="profiling" /></a></p>

<p>可以看到沒有名字的兩個函數會難以分別，都叫 onclick，另外有自己取名的 b2、b4 就好辨認多了，當你的程式大起來時，會使用到匿名函數的地方可能會越來越多，如果沒有取名稱的話，到後來幾乎就無法判斷誰是誰了，因此建議函數都給它個名字吧。不過這頂多是開發時有用，正式上線程式碼過壓縮之後，YUICompressor 會把函數改名，Closure Compiler 會把不需要的函數名稱砍掉～～。</p>

<p>我最早看到這個問題是在 <a href="http://www.alertdebugging.com/2009/04/29/building-a-better-javascript-profiler-with-webkit/">Building a Better JavaScript Profiler with WebKit</a> 這篇文章，主要是在講新(當時)的 Webkit  開發工具的改變。</p></b:extendContent>
			</b:content>

			<b:comments commentCount="12"></b:comments>


		</b:entry>

		<b:entry entryID="000625" baseName="yuicompressor-vs-closure-">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-08-08</b:date>
				<b:time>10:39:33</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>YUICompressor vs Closure-Compiler</b:title>
			<b:content>
				<b:summary>總之我比較喜歡後者，兩個原因，一是壓縮出來比較小，二是不會把換行砍光光，這樣如果有錯誤出現，不得不從壓縮過的版本裡面找時，還會比較好找，用 YUICompressor 的話，因為會只剩一行，結果有錯誤的話也無法判斷是哪一部分的程式碼出錯。...</b:summary>
				<b:mainContent><p>總之我比較喜歡後者，兩個原因，一是壓縮出來比較小，二是不會把換行砍光光，這樣如果有錯誤出現，不得不從壓縮過的版本裡面找時，還會比較好找，用 <span class="caps">YUIC</span>ompressor 的話，因為會只剩一行，結果有錯誤的話也無法判斷是哪一部分的程式碼出錯。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000623" baseName="javascript-best-practice-1">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-08-02</b:date>
				<b:time>22:26:18</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>JavaScript Best Practice Part.1: JSLint</b:title>
			<b:content>
				<b:summary>前陣子有長輩問我 JavaScript 的 Best Practice，一時還真講不出來，因為我不太有把經驗整理出來的習慣，所以有了這系列的文章，雖然會有幾篇不知道XD。 那天被問到的時候我一時只想的到先過 JSLint 再說，所以第一篇就先從 JSLint 開始講起，JSLint 是 Douglas Crockford 在 2002 年時發表的 JavaScript 程式碼的檢查工具，除了基本的語法檢查外，還多了不少限制和要求，可以讓你的程式碼品質提昇，光是讓你的程式碼能過 JSLint 檢查就可以減少很多可能的問題了，接下來就針對各項主要的檢查項目做介紹。...</b:summary>
				<b:mainContent><p>前陣子有長輩問我 JavaScript 的 Best Practice，一時還真講不出來，因為我不太有把經驗整理出來的習慣，所以有了這系列的文章，雖然會有幾篇不知道XD。</p>

<p>那天被問到的時候我一時只想的到先過 <a href="http://www.jslint.com/"><span class="caps">JSL</span>int</a> 再說，所以第一篇就先從 <span class="caps">JSL</span>int 開始講起，JSLint 是 <a href="http://www.crockford.com/">Douglas Crockford</a> 在 2002 年時發表的 JavaScript 程式碼的檢查工具，除了基本的語法檢查外，還多了不少限制和要求，可以讓你的程式碼品質提昇，光是讓你的程式碼能過 <span class="caps">JSL</span>int 檢查就可以減少很多可能的問題了，接下來就針對各項主要的檢查項目做介紹。</p></b:mainContent>
				<b:extendContent><h4>全域變數</h4>

<p>全域變數很危險，因為這些變數可能會和其他的程式碼產生衝突，畢竟你可以控制自己的程式不用全域變數，但是你無法控制其他人的，甚至是其他人惡意 code，再加上 JavaScript 中只要變數使用前沒有先用 <code>var</code> 宣告過，該變數就會是全域變數，所以在 JavaScript 中是很容易誤用全域變數的，一般的作法是把自己的 code 全部放到同一個 namespace （物件）之下，這樣就可以讓程式使用到的全域變數最小化到只剩一個，或是把你的程式碼整個用 closure 包起來。JSLint 限制全域變數的使用，沒有宣告的全域變數都會被視為錯誤而跑出警告，宣告的方法是寫在註解裡面如下：</p>



<pre><code>/*global myApp:true, myApp2:true */</code></pre>



<h4>結尾分號</h4>

<p>每行結尾都要有分號，沒寫雖然程式碼也可以跑，但是寫了比較沒事，尤其是在使用簡單的 JavaScript 壓縮工具時很有差。不過有時候程式敘述沒完，到下一行還要繼續，像是太長的字串要分兩行，然後用 + 接起來時該怎麼辦？ <span class="caps">JSL</span>int 其實也是可以接受，只是加號要放在行尾，不是行首。</p>

<p>另外有有嚴格要求函數結尾的分號使用，分成兩種：</p>



<pre><code>var f1 = function () {};
function f2() {}
</code></pre>



<p>f1 這種宣告會要求要有分號結尾，f2 的方式則要求不可以加上多餘的分號。</p>

<h4>if, for 一定要大括號</h4>

<p>當然不寫大括號會有一行被認定是在該條件之內需要被執行的程式碼，不過為了保險不誤判起見（容易發生在修改程式碼時）， <span class="caps">JSL</span>int 強制要求一定要大括號。</p>

<h4>for in 要檢查該屬性是否屬於該物件直接擁有</h4>

<p>簡單說就是要這樣的寫法：</p>



<pre><code>for (var i in obj) {
    if (obj.hasOwnProperty(i)) {
        ....
    }
}</code></pre>



<p>這是為了確保不會存取到不想存取的屬性，舉例來說，像是 prototype 這套 JavaScript 函式庫會對原生的陣列物件加上一些新的 method 到它的 prototype 裡面，這時如果想用 for in 寫法來跑這個陣列就會把這些新增的 method 也一起抓出來，所以需要用 <code>hasOwnProperty</code> 來檢查一下，不過我個人的建議是，不要用 for in 寫法，一來它效率比較慢，二來可能會遇到這種問題，還要一個一個檢查，所以能不用就不用最好，尤其是跑陣列時。</p>

<h4>不要用 with</h4>

<p>總之就是不要用 with，因為會讓你產生混淆，不知道你存取到的變數到底是哪個 scope 來的，而且還有效能問題， with 會多產生一層 scope chain ，本來直接可以存取到的變數反而跑到第二層去了。</p>

<h4><code>===</code> and <code>!==</code></h4>

<p>和 null, 0, undefined, true, false 這些值比較時，一定要用 <code>===</code> 和 <code>!==</code> ，因為 JavaScript 有神祕的型別轉換，讓你的 null <code>==</code> undefined 但是 null != false ，當然還有其他各種有趣的比較，總之你確定是要判斷是否是以上列舉值的其中任一種時，就用 <code>===</code> 和 <code>!==</code> 吧，如果只是要 true/false 判斷，可以用 !! 來把值轉成 boolean。</p>

<h4>eval is evil</h4>

<p>不要用 eval ，或是丟程式碼到 setTimeout、setInterval、Function 裡（和 eval 等價），雖然少數時候會需要 eval，不過大部分的程式應用可以不使用 eval， 它有安全性的問題和效率的問題，如果需要處理 <span class="caps">JSON </span>格式的資料，那大部分的 Library 都有函數可以處理，沒的話也可以使用 Crockford 的 <a href="http://www.json.org/js.html">json2.js</a> ，它相容於現在新瀏覽器內建的 <span class="caps">JSON </span>物件，可以安心使用。</p>

<p>說到 <span class="caps">JSON </span>就不得不提一下，其實它的字串只允許使用雙括號 " ，而且物件屬性名稱有要求一定要用字串形式，用雙括號包起來，不是只有字串值才需要，詳細可以看看 <a href="http://www.json.org/"><span class="caps">JSON </span>官網</a> 的鐵路圖，只是因為很多人使用 eval 來讀 <span class="caps">JSON </span>資料，才會產生誤解以為 <span class="caps">JSON </span>和 JavaScript 語法完全一樣，嚴格說來只是子集而已，這邊衍生的問題是，錯誤的 <span class="caps">JSON </span>格式在用原生 <span class="caps">JSON </span>或是 json2.js 時會過不了。</p>

<h4>使用 {} 建立物件， [] 建立陣列</h4>

<p>不要用 new Object() 和 new Array() 了，直接用 {} 和 [] 吧，還可以同時給初始值，速度也比較快。當然 <code>newString()</code> 、 <code>new Number()</code> 、 <code>new Boolean()</code> 也別用...</p>

<h4>parseInt </h4>

<p>parseInt 可以指定要是幾進位的整數形式，不過第二個參數也可以省略，只是預設值不是固定的，如果你的字串是 0 開頭的話，它會幫你當成 8 進位，如果是 0x 開頭的話會當成 16 進位，不過後者的問題比較小，問題是前者，如果你想要把 09 轉成整數，你本來預期是 9 ，但是因為被當成 8 進位，09 不存在，所以他會回傳 0 ，因此 <span class="caps">JSL</span>int 要求使用 parseInt 時一定要加上第二個參數，指定字串顯示的數值是幾進位的形式。</p>

<h4>使用 obj.name 取代 obj["name"]</h4>

<p>可以的話就使用前者的方法，速度比較快，也比較省程式碼。</p>

<h4>變數只能宣告一次</h4>

<p>在同一個 scope 下，同樣的變數名稱只允許宣告一次，當然也是為了錯誤認知。</p>

<h4>設定</h4>

<p>其實 <span class="caps">JSL</span>int 有不少選項可以設定，甚至可以允許 eval ，畢竟有時候會有需要，和全域變數一樣是寫在註解裡面，我自己現在的設定如下：</p>



<pre><code>/*jslint browser: true, forin: true, onevar: true, white: true*/
</code></pre>



<p>第一個 browser 選項是會提供部分瀏覽器內建的全域變數和函數，我不知道為什麼有些函數反而會關掉，像是 <code>escape</code> 有使用到的話還要自己加到 global 裡面。</p>

<p>第二個 forin 是前面提到的 hasOwnProperty 檢查，我通常是關掉不檢查的（設成 true），因為我很少需要物件繼承的複雜資料結構，所以比較不會有使用 for in 的需要，加上陣列也不會用 for in 來跑，所以就省去這項檢查了。</p>

<p>第三個 onevar 是限制每個 function 只能有一次 var 宣告，這也是一個效率問題，後面的文章會再詳細介紹。</p>

<p>第四個則是嚴格的縮排檢查，預設是四個空白，另外在有名稱的 function 宣告時會要求名稱後面直接接 () 中間不留空白， anonymous function 則否，當然主要目的是為了讓兩者區隔比較明顯，不會把 "function" 看成函數名稱。</p>



<pre><code>var f1 = function () {};
function f2() {}
</code></pre>



<p>像是前面舉過的例子，f1 後面的函數在宣告時是屬於匿名的，他的 () 就要和前面的 "function" 間留一個空白，f2 就要求函數名稱和後面的 () 接在一起。</p>

<h4>其他</h4>

<p>還有不少設定和檢查說明我這篇文章沒有提到，可以參考 <a href="http://www.jslint.com/lint.html"><span class="caps">JSL</span>int Instruction</a> ，而除了這些其實還有不少細部檢查沒列出的，就要等遇到時才知道了（要翻 <a href="http://www.jslint.com/fulljslint.js">原始碼</a> 也是可以的）。</p>

<p>下一篇文章會講一些和效能有關的東西，這兩篇應該都還很偏 coding style XD。</p>

<p class="update">補充：查了一下發現 escape/upescape 已經不推薦使用了，以後請用 encodeURI/decodeURI 。</p></b:extendContent>
			</b:content>

			<b:comments commentCount="3"></b:comments>


		</b:entry>

		<b:entry entryID="000622" baseName="tossug-html5-talk">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-07-24</b:date>
				<b:time>22:47:05</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>TOSSUG HTML5 分享補充</b:title>
			<b:content>
				<b:summary>這週二我去 TOSSUG 講了 HTML 5 的新標籤和 Web Forms 2.0 ，講的當下感覺是還好，不過回來後回想才發現不少東西忘了講，大概整理一下，結果那些東西要再另外還蠻有難度的，一是量不夠，二是主題有點分散，所以當天就決定寫一篇 blog 來補充，先放上當天投影片： TOSSUG HTML5 讀書會 新標籤與表單View more presentations from othree....</b:summary>
				<b:mainContent><p>這週二我去 <span class="caps">TOSSUG </span>講了 <span class="caps">HTML</span> 5 的新標籤和 Web Forms 2.0 ，講的當下感覺是還好，不過回來後回想才發現不少東西忘了講，大概整理一下，結果那些東西要再另外還蠻有難度的，一是量不夠，二是主題有點分散，所以當天就決定寫一篇 blog 來補充，先放上當天投影片：</p>

<p style="width:425px" id="__ss_4797338"><strong style="display:block;margin:12px 0 4px"><a href="http://www.slideshare.net/othree/tossug-html5" title="TOSSUG HTML5 讀書會 新標籤與表單"><span class="caps">TOSSUG HTML5 </span>讀書會 新標籤與表單</a></strong><object id="__sse4797338" width="425" height="355" data="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=tossughtml5-100720105527-phpapp02&amp;stripped_title=tossug-html5"><param name="movie" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=tossughtml5-100720105527-phpapp02&amp;stripped_title=tossug-html5" /><param name="allowFullScreen" value="true"/><param name="allowScriptAccess" value="always"/><embed  src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=tossughtml5-100720105527-phpapp02&amp;stripped_title=tossug-html5" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="355"></embed></object><span style="padding:5px 0 12px">View more <a href="http://www.slideshare.net/">presentations</a> from <a href="http://www.slideshare.net/othree">othree</a>.</span></p></b:mainContent>
				<b:extendContent><h4>目前語意網的兩個方向</h4>

<p>這部份算是個人見解，實際情形我比較沒相關資訊查證。語意網最早的想法是擺現有網際網路上的資料轉換成有語意的格式，也就是 <span class="caps">XHTML</span> 2.0 的方向，不過實際上遇到的問題就是沒人想花這種人力成本來跟做這種事情，那時候 Web 2.0 的概念也還沒起來，結果就變成 <span class="caps">W3C </span>制定他們的，實際上在提供服務的、用網路的自己開發自己的，當然最後的結果就是產生了 <span class="caps">WHATWG </span>和 <span class="caps">HTML5 </span>，總之現有網際網路上的資料這方向失敗了，但是同時在發展的 Web Service 卻開出了另一條新的路，也就是 Tim Berners Lee 目前主要的推動目標，公開本來不在網路上的各種領域的資料，如果有在看 <a href="http://www.ted.com"><span class="caps">TED</span></a> 的可能有看過他的兩場 Talk。</p>

<p>
<!--copy and paste--><object width="446" height="326"><param name="movie" value="http://video.ted.com/assets/player/swf/EmbedPlayer.swf"></param><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always"/><param name="wmode" value="transparent"></param><param name="bgColor" value="#ffffff"></param> <param name="flashvars" value="vu=http://video.ted.com/talks/dynamic/TimBerners-Lee_2009-medium.flv&amp;su=http://images.ted.com/images/ted/tedindex/embed-posters/TimBerners-Lee-2009.embed_thumbnail.jpg&amp;vw=432&amp;vh=240&amp;ap=0&amp;ti=484&amp;introDuration=15330&amp;adDuration=4000&amp;postAdDuration=830&amp;adKeys=talk=tim_berners_lee_on_the_next_web;year=2009;theme=what_s_next_in_tech;event=TED2009;&amp;preAdTag=tconf.ted/embed;tile=1;sz=512x288;" /><embed src="http://video.ted.com/assets/player/swf/EmbedPlayer.swf" pluginspace="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" wmode="transparent" bgColor="#ffffff" width="446" height="326" allowFullScreen="true" allowScriptAccess="always" flashvars="vu=http://video.ted.com/talks/dynamic/TimBerners-Lee_2009-medium.flv&amp;su=http://images.ted.com/images/ted/tedindex/embed-posters/TimBerners-Lee-2009.embed_thumbnail.jpg&amp;vw=432&amp;vh=240&amp;ap=0&amp;ti=484&amp;introDuration=15330&amp;adDuration=4000&amp;postAdDuration=830&amp;adKeys=talk=tim_berners_lee_on_the_next_web;year=2009;theme=what_s_next_in_tech;event=TED2009;"></embed></object><br />
</p>

<p>
<!--copy and paste--><object width="446" height="326"><param name="movie" value="http://video.ted.com/assets/player/swf/EmbedPlayer.swf"></param><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always"/><param name="wmode" value="transparent"></param><param name="bgColor" value="#ffffff"></param> <param name="flashvars" value="vu=http://video.ted.com/talks/dynamic/TimBerners-Lee_2010U-medium.flv&amp;su=http://images.ted.com/images/ted/tedindex/embed-posters/TimBerners-Lee-2010U.embed_thumbnail.jpg&amp;vw=432&amp;vh=240&amp;ap=0&amp;ti=788&amp;introDuration=15330&amp;adDuration=4000&amp;postAdDuration=830&amp;adKeys=talk=tim_berners_lee_the_year_open_data_went_worldwide;year=2010;theme=what_s_next_in_tech;theme=the_rise_of_collaboration;theme=a_taste_of_ted2010;event=TED2010;&amp;preAdTag=tconf.ted/embed;tile=1;sz=512x288;" /><embed src="http://video.ted.com/assets/player/swf/EmbedPlayer.swf" pluginspace="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" wmode="transparent" bgColor="#ffffff" width="446" height="326" allowFullScreen="true" allowScriptAccess="always" flashvars="vu=http://video.ted.com/talks/dynamic/TimBerners-Lee_2010U-medium.flv&amp;su=http://images.ted.com/images/ted/tedindex/embed-posters/TimBerners-Lee-2010U.embed_thumbnail.jpg&amp;vw=432&amp;vh=240&amp;ap=0&amp;ti=788&amp;introDuration=15330&amp;adDuration=4000&amp;postAdDuration=830&amp;adKeys=talk=tim_berners_lee_the_year_open_data_went_worldwide;year=2010;theme=what_s_next_in_tech;theme=the_rise_of_collaboration;theme=a_taste_of_ted2010;event=TED2010;"></embed></object><br />
</p>

<p>這兩場 Talk 就闡述他這幾年在做的事，到處推動、遊說個政府、組織、企業公開他們手中的資料，我覺得他來做這件事真的是很有說服力，因為早在網路地圖風行的年代前，他家的  <a href="http://www.w3.org/People/Berners-Lee/#Address">經緯度</a> 就已經公開在網路上了（顯然都還沒遭到導彈攻擊）。</p>

<h4><span class="caps">W3C </span>接納 <span class="caps">HTML5 </span>背後的意義</h4>

<p><a href="http://findbook.tw/book/9789570516333/basic">一千零一網</a> 書中有提到 Tim Berners Lee 對於網際網路的願景是對所有人都是自由免費的，而且不應該由任何一個企業、團體所操控把持，包括 <span class="caps">W3C </span>自己，這個想法讓我真是很佩服 Tim Berners Lee ，說我成為他的粉絲也不為過，當然現實世界不會這麼美好，大陸的 Great Wall 就是一個例子，之前微軟 IE 過高的市佔率也造成很多負面影響，像是讓整個網路發展停滯了好幾年。回到重點，W3C 接納 <span class="caps">HTML5 </span>這件事本身就是這個理念的實踐，證明了他們不是說假話。</p>

<h4><span class="caps">HTML </span>砍掉重練、 <span class="caps">ECMAS</span>cript 也砍掉過、那 <span class="caps">CSS</span>?</h4>

<p>這幾年主流的文件結構、行為、表現三種分開的網頁編寫方式，其各自的代表技術其實就是 <span class="caps">HTML</span>、ECMAScript、CSS，不過其中兩者已經砍掉重練過了，分別是 <span class="caps">XHTML</span> 2.0 廢棄，改發展 <span class="caps">HTML5</span>，ECMAScript 4 (JavaScript 2.0) 廢棄改發展 <span class="caps">ECMAS</span>cript Harmony，而且兩者都是因為過度發展的情形下，功能加太多，太理想化等，才被砍掉重練的，現在 <span class="caps">CSS3 </span>又有點肆無忌憚的一直加新東西，其實我還蠻擔心哪一天會不會也被砍掉重練的，大概變成像是某種必經之路的吧。</p>

<h4>&lt;article&gt; 對搜尋引擎的影響</h4>

<p>&lt;article&gt; 就我腦袋所想到的，其實對於搜尋的正確性應該會有很大的幫助，回憶看看你是不是有這樣的經驗，丟入兩三個關鍵字後，打開的結果網頁是個部落格索引頁，每篇文章都有摘要，然後卻發現你輸入的兩三個關鍵字分散在不同的文章中，當然每篇文章都不是你想要的，&lt;article&gt; 的出現就可以解決這樣的問題。</p>

<h4>&lt;p&gt; 不只是段落</h4>

<p>簡單說你的一段文字找不到適當語意的區塊標籤來包的話，都可以用 &lt;p&gt; ，詳細請參考 <a href="http://dev.w3.org/html5/spec/content-models.html#paragraph"><span class="caps">HTML5</span> Spec</a> ，這以前對於過度的語意正確要求者來說也是不小的困擾～</p>

<h4>Web Forms 2.0 支援度</h4>

<p>那天我忘了提到 mobile device 像是 iPhone 就有支援了，不同的 input type 它會給你不一樣的螢幕小鍵盤，其他的平台我就沒看過測試，所以比較不清楚這樣，不過手機平台某方面來說因為沒有 IE 的包袱，所以開發起來比較可以開心的使用新東西，雖然有人擔心 iPhone 會變成下一個 IE 就是。</p>

<h4><span class="caps">CSS3 </span>的那一堆 - 開頭的屬性是哪來的</h4>

<p>這只是順便提的，CSS 2.1 時就已經有規範 <a href="http://www.w3.org/TR/CSS21/syndata.html#vendor-keywords">Vendor-specific extensions</a> ，就是各家瀏覽器可以自己定樣式，當然是不建議使用，而目前想要用 <span class="caps">CSS3 </span>的話幾乎都要用這種寫法，原因之一是標準還沒完全定案，所以各家都先用這種方法來實作，等到哪一天定案了，在把對應的字串改過來就好了，當然這些自定樣式也會慢慢移除掉，所以別忘了最後還是要加一個非 Vendor-specific extension 的寫法，免得以後還要修改，當然如果最後定案的語法和你現在寫的不一樣，還是免不了，所以現階段我有用的話會盡量寫簡單一點，像是圓角框就盡量四個角一樣。</p>

<h4>不願意提的，HTML5 何時定案？</h4>

<p>最後一次聽到消息是 2022，不過不表示那時候才能用，HTML5 比較特別是可能 2012 年就會把功能都定好，剩下10年是推廣實作修改階段，到 2022 要成為正式標準時，應該是直接可以用的狀況，不過這是兩年以前的消息了，我覺得比較可信的版本是，沒有定期限。</p>

<p>當然還有更不願意提的問題，CSS3 何時定案？答案是完全沒消息，甚至我想還會繼續冒出新東西，雖然 3D Transform 就已經很令人驚嚇了。之前甚至還有 Safari 先說他們做了什麼新東西，測試版也出了可以用，但是過了一陣子 <span class="caps">W3C </span>那邊才看的到那東西初版 Working Draft 的情形。</p>

<h4>參考網站</h4>

<p>最後放上一些參考網站：</p>


<ul>
<li><a href="http://dev.w3.org/html5/spec/"><span class="caps">HTML5</span> Spec</a> ，新的 <span class="caps">HTML </span>標準在標籤語意上比以前詳細很多</li>
<li><a href="http://html5doctor.com/article-archive/"><span class="caps">HTML5</span> Doctor</a> ，有一系列和新標籤及語意相關的文章</li>
<li><a href="http://diveintohtml5.org/">Dive Into <span class="caps">HTML</span> 5</a> ，內容很棒的電子書</li>
<li><a href="http://www.w3.org/TR/html-markup/"><span class="caps">HTML</span>: The Markup Language</a> ，新的 <span class="caps">W3C </span>working draft，裡面有定標籤的預設樣式</li>
<li><a href="http://code.google.com/p/html5shiv/">html5shiv</a> ，讓 IE 也可以給新標籤套上樣式的小 script</li>
</ul>



<p>另外新出的 <a href="http://books.alistapart.com/product/html5-for-web-designers"><span class="caps">HTML5</span> For Web Designers</a> 內容似乎剛好就是我這次分享的主題（感謝 <a href="http://evendesign.tw/">even</a> 情報）。</p></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000620" baseName="jquery-events">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-05-20</b:date>
				<b:time>23:44:11</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>jQuery Events</b:title>
			<b:content>
				<b:summary>兩篇不錯的文章。 jQuery special events ，這篇介紹了 jQuery 的 special event api ，讓你可以自定事件，文中的範例是 triple click (連點三次)，文章有點長，講的蠻完整的，要實際應用比較有難度。 Demystifying custom events in jQuery ，這篇則是講 custom event ，翻成中文都是自定事件，不過前一篇是定義出通用於所有元件的新事件，這篇講的則是一種不一樣的程式設計導向，更加的以事件為導向，例如在你的狀態顯示器上加上一個「切換狀態」的事件，訪客可能按了某個按鈕，那個按鈕的點擊事件會去觸發顯示器的切換狀態事件，因為 jQuery 的 event api 寫的夠好，所以可以很簡單的實作出來。...</b:summary>
				<b:mainContent><p>兩篇不錯的文章。</p>

<p><a href="http://benalman.com/news/2010/03/jquery-special-events/">jQuery special events</a> ，這篇介紹了 jQuery 的 special event api ，讓你可以自定事件，文中的範例是 triple click (連點三次)，文章有點長，講的蠻完整的，要實際應用比較有難度。</p>

<p><a href="http://blog.rebeccamurphey.com/2009/12/03/demystifying-custom-events-in-jquery/">Demystifying custom events in jQuery</a> ，這篇則是講 custom event ，翻成中文都是自定事件，不過前一篇是定義出通用於所有元件的新事件，這篇講的則是一種不一樣的程式設計導向，更加的以事件為導向，例如在你的狀態顯示器上加上一個「切換狀態」的事件，訪客可能按了某個按鈕，那個按鈕的點擊事件會去觸發顯示器的切換狀態事件，因為 jQuery 的 event api 寫的夠好，所以可以很簡單的實作出來。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000619" baseName="jslint-command-line-js">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-04-03</b:date>
				<b:time>17:59:53</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>jslint 和 command line js </b:title>
			<b:content>
				<b:summary>這邊是記錄用，編譯 spidermonkey 1.7 並支援 UTF-8 的方法： curl -O ftp://ftp.mozilla.org/pub/mozilla.org/js/js-1.7.0.tar.gz tar zxvf js-1.7.0.tar.gz cd js/src export CFLAGS=&quot;-DJS_C_STRINGS_ARE_UTF8&quot; make -f Makefile.ref sudo JS_DIST=/usr make -f Makefile.ref export 來源：INSERT SOMETHING CREATIVE 另外 v8 要拿來跑 jslint 的話，console 要設成 readline ，ubuntu 的話編譯前要先裝 libreadline-dev，加上 GCC 4.4...</b:summary>
				<b:mainContent><p>這邊是記錄用，編譯 spidermonkey 1.7 並支援 <span class="caps">UTF</span>-8 的方法：</p>



<pre><code>curl -O ftp://ftp.mozilla.org/pub/mozilla.org/js/js-1.7.0.tar.gz
tar zxvf js-1.7.0.tar.gz
cd js/src
export CFLAGS=&quot;-DJS_C_STRINGS_ARE_UTF8&quot;
make -f Makefile.ref
sudo JS_DIST=/usr make -f Makefile.ref export</code></pre>



<p>來源：<a href="http://asrijaffar.blogspot.com/2009/08/installing-mongodb-on-ubuntu-904-jaunty.html"><span class="caps">INSERT SOMETHING CREATIVE</span></a></p>

<p>另外 v8 要拿來跑 jslint 的話，console 要設成 readline ，ubuntu 的話編譯前要先裝 <a href="http://packages.ubuntu.com/dapper/libreadline-dev">libreadline-dev</a>，加上 <span class="caps">GCC</span> 4.4 的話要不一樣的參數，編譯指令是：</p>



<pre><code>GCC_VERSION=&quot;44&quot; scons d8 console=readline</code></pre>



<p>沒加上 console=readline 的話不管怎樣測試都會跟你說沒問題～</p>

<p>另外有一篇 <a href="http://diaspar.jp/node/214">インストール - JavaScirpt （V8, TraceMonkey, <span class="caps">SFX</span>）</a> 介紹了怎樣編譯 <span class="caps">V8,</span> TraceMonkey, <span class="caps">SFX </span>的方法</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000618" baseName="easygit">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-04-03</b:date>
				<b:time>14:09:27</b:time>
			</b:datetime>
			<b:category>unix</b:category>
			<b:title>easygit</b:title>
			<b:content>
				<b:summary>前陣子為了找 tinymce 某個 bug 是在哪個 commit 產生的，用上了 easygit 因為照原來一直 revert 回去的作法實在弄到會吐血， easygit 可以這樣下命令： eg revert -since a326cfb0ff21c928fe69f9f18d62ece31b95c47e 這樣可以直接回去那個版本了，而不是只 revert 那個 commit 。...</b:summary>
				<b:mainContent><p>前陣子為了找 tinymce 某個 bug 是在哪個 commit 產生的，用上了 <a href="http://people.gnome.org/~newren/eg/">easygit</a> 因為照原來一直 revert 回去的作法實在弄到會吐血， easygit 可以這樣下命令：</p>



<pre><code>eg revert -since a326cfb0ff21c928fe69f9f18d62ece31b95c47e</code></pre>



<p>這樣可以直接回去那個版本了，而不是只 revert 那個 commit 。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="2"></b:comments>


		</b:entry>

		<b:entry entryID="000617" baseName="vimrc-onload">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-02-28</b:date>
				<b:time>21:14:50</b:time>
			</b:datetime>
			<b:category>vim</b:category>
			<b:title>vimrc 的 onload</b:title>
			<b:content>
				<b:summary>vimrc 會比任何 plugin 都還要先執行，所以如果有什麼工作是想要在 plugin 讀完後才做的，就不能直接寫在 vimrc 裡面，以我的例子，我想要在某些 plugin 有安裝，該 plugin 的命令確實存在的話，才去另外做這些命令的 mapping ，例如： if exists(&quot;:Align&quot;) com! -bang -range -nargs=* A &lt;line1&gt;,&lt;line2&gt;call Align#Align(&lt;bang&gt;0,&lt;q-args&gt;) endif 這段程式直接放在 vimrc 裡面的話， if 判斷都不會成立，所以我的作法是丟到 function 裡面，然後放到 VimEnter 這個 auto command 的事件執行： function AfterStart () &quot;...</b:summary>
				<b:mainContent><p>vimrc 會比任何 plugin 都還要先執行，所以如果有什麼工作是想要在 plugin 讀完後才做的，就不能直接寫在 vimrc 裡面，以我的例子，我想要在某些 plugin 有安裝，該 plugin 的命令確實存在的話，才去另外做這些命令的 mapping ，例如：</p>



<pre><code>if exists(&quot;:Align&quot;)
    com! -bang -range -nargs=* A &lt;line1&gt;,&lt;line2&gt;call Align#Align(&lt;bang&gt;0,&lt;q-args&gt;)
endif</code></pre>



<p>這段程式直接放在 vimrc 裡面的話， if 判斷都不會成立，所以我的作法是丟到 function 裡面，然後放到 <a href="http://vimdoc.sourceforge.net/htmldoc/autocmd.html#VimEnter">VimEnter</a> 這個 auto command 的事件執行：</p>



<pre><code>function AfterStart ()

&quot; plugin commands
if exists(&quot;:Align&quot;)
    com! -bang -range -nargs=* A &lt;line1&gt;,&lt;line2&gt;call Align#Align(&lt;bang&gt;0,&lt;q-args&gt;)
endif

endfunction
autocmd VimEnter * :call AfterStart()
</code></pre></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="1"></b:comments>


		</b:entry>

		<b:entry entryID="000616" baseName="jquery-function-in-14">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-02-12</b:date>
				<b:time>21:12:02</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>jQuery() in 1.4 </b:title>
			<b:content>
				<b:summary>jQuery 1.4 有個改變應該很少有人注意到，我也是最近剛好有需求才發現，就是直接執行 jQuery 不傳任何參數： jQuery(); 結果會傳回一個 空的 jQuery set ，不過這在 1.4 以前的版本會傳回 document ，這樣的修改我覺得是比較好的，因為以前完全沒辦法產生空的 jQuery set，如果要自己做 jQuery set 會比較方便，除了把要的 DOM 節點抓好放陣列丟給 jQuery 外還多了個建立空的 jQuery set 後一個一個把要的節點丟進去的方法，另一個優點是這樣確保 jQuery function 傳回來的物件是同樣的類型。...</b:summary>
				<b:mainContent><p><a href="http://www.jquery.com">jQuery 1.4</a> 有個改變應該很少有人注意到，我也是最近剛好有需求才發現，就是直接執行 jQuery 不傳任何參數：</p>



<pre><code>jQuery();</code></pre>



<p>結果會傳回一個 <a href="http://api.jquery.com/jQuery/#returning-empty-set">空的 jQuery set</a> ，不過這在 1.4 以前的版本會傳回 <a href="http://www.w3.org/TR/2000/WD-DOM-Level-1-20000929/level-one-core.html#i-Document">document</a> ，這樣的修改我覺得是比較好的，因為以前完全沒辦法產生空的 jQuery set，如果要自己做 jQuery set 會比較方便，除了把要的 <span class="caps">DOM </span>節點抓好放陣列丟給 jQuery 外還多了個建立空的 jQuery set 後一個一個把要的節點丟進去的方法，另一個優點是這樣確保 jQuery function 傳回來的物件是同樣的類型。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="2"></b:comments>


		</b:entry>

		<b:entry entryID="000615" baseName="wai-aria">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-02-09</b:date>
				<b:time>23:35:24</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>WAI-ARIA</b:title>
			<b:content>
				<b:summary>WAI-ARIA 全名是 Accessible Rich Internet Applications Suite，是 WAI 正在制定中的規範之一，對象是網路應用程式，像是 gmail、各種 CMS 等，它在WAI 制定的各種規範中，是唯一縮寫名稱用 WAI- 開頭的，一直很好奇為什麼，前幾天寫信去問也得到了答覆： Short answer: Because the acronym ARIA is used for other things, we use WAI-ARIA. 結果和 J長輩 猜的一樣是因為 A R I A 太常見了，所以加上 WAI- 。...</b:summary>
				<b:mainContent><p><a href="http://www.w3.org/WAI/intro/aria.php"><span class="caps">WAI</span>-ARIA</a> 全名是 Accessible Rich Internet Applications Suite，是 <a href="http://www.w3.org/WAI/"><span class="caps">WAI</span></a> 正在制定中的規範之一，對象是網路應用程式，像是 gmail、各種 <span class="caps">CMS </span>等，它在WAI 制定的各種規範中，是唯一縮寫名稱用 <span class="caps">WAI</span>- 開頭的，一直很好奇為什麼，前幾天寫信去問也得到了答覆：</p>

<blockquote>Short answer: Because the acronym <span class="caps">ARIA </span>is used for other things, we use <span class="caps">WAI</span>-ARIA.</blockquote>

<p>結果和 J長輩 猜的一樣是因為 <a href="http://www.ariacompany.net/index2.htm">A</a> <a href="http://www.aria-soft.com/">R</a> <a href="http://en.wikipedia.org/wiki/Aria">I</a> <a href="http://www.google.com/search?q=aria">A</a>  太常見了，所以加上 <span class="caps">WAI</span>- 。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="2"></b:comments>


		</b:entry>

		<b:entry entryID="000614" baseName="javascript-performance-tips">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-01-25</b:date>
				<b:time>18:56:35</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>JavaScript 的一些效率問題</b:title>
			<b:content>
				<b:summary>前幾天在測試 each 和 for 迴圈的效率時，意外的一直得到 each 效率比較好的奇怪現象，搞了兩天才找到原因。 each 這種方法效率會比 for 迴圈還要低主要是因為它是把要做的事情用 function 傳進去，多了一個 function call 和一層 function scope，要對變數作存取時會多了到不同層 scope 尋找的差，所以理論上它會比 for 迴圈還要慢。除此之外，DOM 本身就很慢了，當然 DOM NodeList 的操作和存取也不會快到哪去，所以像 Sizzle 引擎就會把 DOM NodeList 轉成陣列再傳回來，而我測試 each 和 for 兩者的效率時，也就是這個部分產生了非預想的結果，根據測試結果 Google V8 和 Firefox 3.6...</b:summary>
				<b:mainContent><p>前幾天在測試 <a href="http://api.jquery.com/each/">each</a> 和 for 迴圈的效率時，意外的一直得到 each 效率比較好的奇怪現象，搞了兩天才找到原因。</p>

<p>each 這種方法效率會比 for 迴圈還要低主要是因為它是把要做的事情用 function 傳進去，多了一個 function call 和一層 function scope，要對變數作存取時會多了到不同層 scope 尋找的差，所以理論上它會比 for 迴圈還要慢。除此之外，DOM 本身就很慢了，當然 <a href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-536297177"><span class="caps">DOM</span> NodeList</a> 的操作和存取也不會快到哪去，所以像 <a href="http://sizzlejs.com/">Sizzle</a> 引擎就會把 <span class="caps">DOM</span> NodeList 轉成陣列再傳回來，而我測試 each 和 for 兩者的效率時，也就是這個部分產生了非預想的結果，根據測試結果 Google V8 和 Firefox 3.6 的 Tracemonkey 這兩個會編譯 JS 的引擎，第二次對同樣內容的 <span class="caps">DOM </span>collection 轉陣列的動作時會比第一次還要快，而且大約是兩倍快，測試的基準是第一次用 <a href="http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#method-getElementsByTagName">getElementsByTagName</a> 抓 &lt;span&gt; ，第二次用 jQuery，內部也是一樣用 getElementsByTagName ，並且小修改過 <span class="caps">DOM </span>結構後再做一樣的事情也是會比第一次還快，並且，不管是用 <a href="https://developer.mozilla.org/En/Core_JavaScript_1.5_Reference/Objects/Array/Slice">slice</a> 還是 for 迴圈一個元素一個元素推到陣列裡面都沒差很多，一開始因為測試都是對同樣的標籤作處理，結果先測的方法就佔了劣勢，就像是美食漫畫一樣，先上菜的都會輸一樣，不過我對編譯器的怎樣做最佳化的方法不熟，所以這兩個引擎是怎麼辦到的就不清楚了。</p>

<p>除了這點之外，還有一些不算小發現的小發現，第一個就是 Firefox 3.6 還是好慢，詳細數據我忘了，不過和 V8、Safari 比起來差距還是不小，然後就是 IE 超．級．慢！！第二是 each 真的比較慢，不過在現在 JS 引擎普遍暴力的情況下差距其實不明顯（不過 NodeList 和陣列的差距還是有）。第三是前面已經講過的 Sizzle 回傳的是陣列而不是 NodeList ，雖然實際上想要自己組合 NodeList 似乎也是不可能的。最後是 jQeury 可以用 <code>$(&quot;span&quot;)[0]</code> 這種寫法來直接存取 <span class="caps">DOM </span>節點，不過它並不是陣列，要轉成純陣列可以用 <code>$(&quot;span&quot;).get()</code> ，只是測試過後發現沒有比較快，因為還要重新轉一次陣列，這裡損失的時間也不會比直接存取來的少。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000613" baseName="why-do-we-have-an-img-element">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-01-17</b:date>
				<b:time>09:29:38</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>為什麼有 &lt;img&gt; 這個標籤</b:title>
			<b:content>
				<b:summary>dive into mark 在去年11月有一篇文章 Why do we have an IMG element? ，裡面翻出了很多當初 HTML 剛起步時的討論，當時就在針對網頁上的媒體內容要怎樣放進去作了不少爭論，過程有興趣的可以自己去看，結果還是先下手為強，先做出來的贏， mark 歸納出的幾點結論中有一點蠻有趣的：「HTML一直都是瀏覽器製造者、標準制定者、網頁製造者和其他想參與其中的人所討論而得的，而多數成功的標準都是 retro-specs （實作、制定標準同時，甚至先實作），有些人認為標準應該保持純潔，不要受到瀏覽器製造者或網頁製造者的影響，這完全是錯誤的。」HTML 5 也是一個 retro-specs ，新功能都是跟著網路的變化所產生，像是 拖拉 API 、 近端儲存系統 等，最近還多了 device 標籤 和 stream API ，這些都是現在大家需要的功能，而目前只能用其他方法弄起來，像是拖拉要去算位置、範圍，近端儲存要裝像 Google Gears 的外掛，要抓 webcam 畫面或是撥影片則要用 Flash 或是...</b:summary>
				<b:mainContent><p><a href="http://diveintomark.org/">dive into mark</a> 在去年11月有一篇文章 <a href="http://diveintomark.org/archives/2009/11/02/why-do-we-have-an-img-element">Why do we have an <span class="caps">IMG </span>element?</a> ，裡面翻出了很多當初 <span class="caps">HTML </span>剛起步時的討論，當時就在針對網頁上的媒體內容要怎樣放進去作了不少爭論，過程有興趣的可以自己去看，結果還是先下手為強，先做出來的贏， mark 歸納出的幾點結論中有一點蠻有趣的：「HTML一直都是瀏覽器製造者、標準制定者、網頁製造者和其他想參與其中的人所討論而得的，而多數成功的標準都是 <strong>retro-specs</strong> （實作、制定標準同時，甚至先實作），有些人認為標準應該保持純潔，不要受到瀏覽器製造者或網頁製造者的影響，這完全是錯誤的。」HTML 5 也是一個 retro-specs ，新功能都是跟著網路的變化所產生，像是 <a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#dnd">拖拉 <span class="caps">API</span></a>  、 <a href="http://dev.w3.org/html5/webstorage/">近端儲存系統</a> 等，最近還多了 <a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#devices">device 標籤</a> 和 <a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#stream">stream <span class="caps">API</span></a> ，這些都是現在大家需要的功能，而目前只能用其他方法弄起來，像是拖拉要去算位置、範圍，近端儲存要裝像 Google Gears 的外掛，要抓 webcam 畫面或是撥影片則要用 Flash 或是 Java，未來這些功能都會變成瀏覽器原生支援，甚至用顯示卡 <a href="http://www.khronos.org/webgl/">加速畫 3D 圖形</a> 都不是問題。</p>

<p>另外可以拿來作反例的我覺得是 <a href="http://www.w3.org/XML/Schema"><span class="caps">XML</span> Schema</a> ，整個複雜過頭，還有難解的用詞，據之前修課時的老師說是語言學家制定的，結果造成沒有工具很難寫，就算寫了沒驗證過我看也不敢拿來用。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="1"></b:comments>


		</b:entry>

		<b:entry entryID="000611" baseName="perl-style-regexp-for-vim">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-01-08</b:date>
				<b:time>01:41:44</b:time>
			</b:datetime>
			<b:category>vim</b:category>
			<b:title>Perl Style RegExp for Vim</b:title>
			<b:content>
				<b:summary>今天下午在尋找能讓 Vim 的 Regular Expression 變得好看一點的方法，因為實在太多斜線了，當然直接就把目標鎖定在 perl 的語法，一開始找到一個 vim tip 有建議用 perldo ，不過編譯時要把 +perl 弄起來，使用上也不是很好用，而且不能搜尋，只能做取代，雖然 有人寫了 function 來搜尋，不過實際測試之後離方便使用還有些距離。 c9s 還有建議我用 very magic 看看，結果還是不夠滿意，後來換成找日本那邊，終於找到 eregex.vim 這個 plugin ，他的作法是把 perl/ruby 的 regexp 語法用 function 轉成 vim 的 regexp 語法，所以問題少很多，預設會把 S（大寫S）替換成用 perl/ruby 的...</b:summary>
				<b:mainContent><p>今天下午在尋找能讓 Vim 的 Regular Expression 變得好看一點的方法，因為實在太多斜線了，當然直接就把目標鎖定在 perl 的語法，一開始找到一個 <a href="http://vim.wikia.com/wiki/Perl_compatible_regular_expressions">vim tip</a> 有建議用 <a href="http://vimdoc.sourceforge.net/htmldoc/if_perl.html#:perldo">perldo</a> ，不過編譯時要把 <a href="http://vimdoc.sourceforge.net/htmldoc/various.html#+perl">+perl</a> 弄起來，使用上也不是很好用，而且不能搜尋，只能做取代，雖然 <a href="http://tech.groups.yahoo.com/group/vim/message/49561">有人寫了 function</a> 來搜尋，不過實際測試之後離方便使用還有些距離。 <a href="http://c9s.blogspot.com/">c9s</a> 還有建議我用 <a href="http://vimdoc.sourceforge.net/htmldoc/pattern.html#/\v">very magic</a> 看看，結果還是不夠滿意，後來換成找日本那邊，終於找到 <a href="http://www.vector.co.jp/soft/unix/writing/se265654.html">eregex.vim</a> 這個 plugin ，他的作法是把 perl/ruby 的 regexp 語法用 function 轉成 vim 的 regexp 語法，所以問題少很多，預設會把 S（大寫S）替換成用 perl/ruby 的 regexp 語法來搜尋搜尋取代的指令，使用方法和原來 s（小寫S）的都一樣，另外單純搜尋的部分有 :M/ 這個命令，也可以 map 到原來的 / 上：</p>



<pre><code>nnoremap / :M/</code></pre>



<p>使用上就和原來幾乎完全一樣了，超棒的～</p>

<p>順帶一提， <a href="http://www.ubuntu.com/">Ubuntu</a> 上要編譯出 +perl 的功能要 <a href="http://www.tfug.org/pipermail/tfug/2006-May/011262.html">確定一下 libperl.so 在不在</a> ，像我的系統就只有 libperl.so.5.8，還要自己做個鏈結。</p>

<p class="update">由於作者聯絡不上，我已經接起 <a href="https://github.com/othree/eregex.vim">eregex.vim</a> 的維護工作了，放在 github 上。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000610" baseName="screen_vim_f1f4_map">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-01-07</b:date>
				<b:time>22:41:26</b:time>
			</b:datetime>
			<b:category>vim</b:category>
			<b:title>Screen 下 Vim F1~F4 沒辦法正常 map</b:title>
			<b:content>
				<b:summary>剛剛遇到的問題，好像是我的環境才會，不過如果有遇到的話就把下面這段 code 加到 vimrc 裡面吧，記得放在 map 前。 &quot; Screen fix if &amp;term =~ '^screen' set t_k1=^[[11~ set t_k2=^[[12~ set t_k3=^[[13~ set t_k4=^[[14~ endif...</b:summary>
				<b:mainContent><p>剛剛遇到的問題，好像是我的環境才會，不過如果有遇到的話就把下面這段 code 加到 vimrc 裡面吧，記得放在 map 前。</p>



<pre><code>&quot; Screen fix
if &amp;term =~ '^screen'
    set t_k1=^[[11~
    set t_k2=^[[12~
    set t_k3=^[[13~
    set t_k4=^[[14~
endif
</code></pre></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="1"></b:comments>


		</b:entry>

		<b:entry entryID="000609" baseName="wq-post-bbs-article">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-01-07</b:date>
				<b:time>20:25:04</b:time>
			</b:datetime>
			<b:category>unix</b:category>
			<b:title>用 :wq 送出 BBS 文章</b:title>
			<b:content>
				<b:summary>因為在 BBS 想要用 :wq 發文章的次數不算少，剛剛就用 expect 弄起來了，只要加一行到 interact 裡面就可以： \033:wq\r { send \030; send &quot;\r&quot; } 實際操作是要 &lt;ESC&gt; :wq &lt;ENTER&gt; ，會直接把文章發表，如果不想跳過發文前的確認選單，那就把最後的 \r 拿掉。...</b:summary>
				<b:mainContent><p>因為在 <span class="caps">BBS </span>想要用 :wq 發文章的次數不算少，剛剛就用 expect 弄起來了，只要加一行到 interact 裡面就可以：</p>



<pre><code>\033:wq\r { send \030; send &quot;\r&quot; }</code></pre>



<p>實際操作是要 &lt;ESC&gt; :wq &lt;ENTER&gt; ，會直接把文章發表，如果不想跳過發文前的確認選單，那就把最後的 \r 拿掉。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000608" baseName="_screen_windows_terminal">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-01-05</b:date>
				<b:time>21:18:28</b:time>
			</b:datetime>
			<b:category>unix</b:category>
			<b:title>在 screen windows 裡開一個比較小的 terminal</b:title>
			<b:content>
				<b:summary>這真是超特殊的需求，不過今天還是弄出來了，花不少間走錯方向就是，會有這樣的需求是因為我同時要掛 BBS 和 IRC，BBS 的標準視窗大小是 80*24，但是這個大小對於 IRC 來說又太小了，好在現在很多 BBS 系統已經已經支援大於 80*24 的終端機了，但是有一個 bahamut 自從商業化後 BBS 系統就完全沒改進，不支援就算了，終端機大小只要不對，看文章往下卷頁時就會有錯誤排版產生，最常見就是按 下 ，本來應該是整個畫面移動一行，結果會變成只有最後一行被取代，而我現在是使用 100*35 的大小，本來是一直把這問題放著，不過今天總算解決了，其實解法很簡單，就是 screen 裡面再開一個 screen，用不同的設定檔案，裡面要拿來上 bahamut 那個的設定檔加上： width -d 80 24 重點在那個 -d 參數，本來一直在終端機的設定上跑來跑去，不是說沒辦法改大小，就是內部的終端機改大小會影響到外面的，版面就整個亂掉，不過 -d 是只改 display 的大小，不是終端機大小，本來的話是會所有的 screen 一起改，但是因為用兩層的關係，所以外面的不會受到影響。...</b:summary>
				<b:mainContent><p>這真是超特殊的需求，不過今天還是弄出來了，花不少間走錯方向就是，會有這樣的需求是因為我同時要掛 <span class="caps">BBS </span>和 <span class="caps">IRC</span>，BBS 的標準視窗大小是 80*24，但是這個大小對於 <span class="caps">IRC </span>來說又太小了，好在現在很多 <span class="caps">BBS </span>系統已經已經支援大於 80*24 的終端機了，但是有一個 <a href="http://www.gamer.com.tw/">bahamut</a> 自從商業化後 <span class="caps">BBS </span>系統就完全沒改進，不支援就算了，終端機大小只要不對，看文章往下卷頁時就會有錯誤排版產生，最常見就是按 <strong>下</strong> ，本來應該是整個畫面移動一行，結果會變成只有最後一行被取代，而我現在是使用 100*35 的大小，本來是一直把這問題放著，不過今天總算解決了，其實解法很簡單，就是 screen 裡面再開一個 screen，用不同的設定檔案，裡面要拿來上 bahamut 那個的設定檔加上：</p>



<pre><code>width -d 80 24</code></pre>



<p>重點在那個 <a href="http://www.gnu.org/software/screen/manual/screen.html#Window-Size">-d</a> 參數，本來一直在終端機的設定上跑來跑去，不是說沒辦法改大小，就是內部的終端機改大小會影響到外面的，版面就整個亂掉，不過 -d 是只改 display 的大小，不是終端機大小，本來的話是會所有的 screen 一起改，但是因為用兩層的關係，所以外面的不會受到影響。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000607" baseName="happy-2010">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-01-03</b:date>
				<b:time>22:45:04</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>新年快樂</b:title>
			<b:content>
				<b:summary>新年快樂！ 今年因為腳包著石膏，所以三天假期都沒出門，31號回到家後就等著看 紅白 ，這是我第一次有從一開始就看到啊，話說我每年12/31都會想著明年一定要裝 BSD ，然後一年一年一直過去....，算了，等電視升級時在一起好了。今年紅白有 水樹奈奈 登場，對我來說算是比較有特別意義，到不是特別迷她，而是史上第一位聲優登上紅白，總覺得要見證一下，加上今年是第 60 屆，感覺就是不能錯過～～ 話說這三天我竟然沒有很墮落的睡覺看動畫，第一天整理了 irc logs，把部落格內的文章又掃過一次，檢查有沒有圖片連結錯誤，然後重新編譯了我機器上的 vim ，之前忘了 patch ，加上沒把 gettext 功能弄上，所以介面一直是中文的，另外就是搞定了 tcsh 的 Home,、End、PageUp 等案件的功能，因為和 bash 用 inputrc 的設定不一樣，一直到這天才找到設定方法， bash 下的 inputrc 是這樣寫： &quot;\e[1~&quot;: beginning-of-line &quot;\e[2~&quot;: yank &quot;\e[3~&quot;: delete-char &quot;\e[4~&quot;: end-of-line &quot;\e[5~&quot;:...</b:summary>
				<b:mainContent><p><strong>新年快樂！</strong></p>

<p>今年因為腳包著石膏，所以三天假期都沒出門，31號回到家後就等著看 <a href="http://www9.nhk.or.jp/kouhaku/">紅白</a> ，這是我第一次有從一開始就看到啊，話說我每年12/31都會想著明年一定要裝 <a href="http://www.nhk.or.jp/bs/"><span class="caps">BSD</span></a> ，然後一年一年一直過去....，算了，等電視升級時在一起好了。今年紅白有 <a href="http://www.mizukinana.jp/">水樹奈奈</a> 登場，對我來說算是比較有特別意義，到不是特別迷她，而是史上第一位聲優登上紅白，總覺得要見證一下，加上今年是第 60 屆，感覺就是不能錯過～～</p>

<p>話說這三天我竟然沒有很墮落的睡覺看動畫，第一天整理了 irc logs，把部落格內的文章又掃過一次，檢查有沒有圖片連結錯誤，然後重新編譯了我機器上的 <a href="http://www.vim.org/">vim</a> ，之前忘了 patch ，加上沒把 <a href="http://vimdoc.sourceforge.net/htmldoc/various.html#+gettext">gettext</a> 功能弄上，所以介面一直是中文的，另外就是搞定了 <a href="http://www.tcsh.org/Welcome">tcsh</a> 的 Home,、End、PageUp 等案件的功能，因為和 <a href="http://www.gnu.org/software/bash/">bash</a> 用 inputrc 的設定不一樣，一直到這天才找到設定方法， bash 下的 inputrc 是這樣寫：</p>



<pre><code>&quot;\e[1~&quot;: beginning-of-line
&quot;\e[2~&quot;: yank
&quot;\e[3~&quot;: delete-char
&quot;\e[4~&quot;: end-of-line
&quot;\e[5~&quot;: history-search-backward
&quot;\e[6~&quot;: history-search-forward</code></pre>



<p>tcsh 則是寫在 cshrc 裡面：</p>



<pre><code>bindkey &quot;\e[1~&quot; beginning-of-line
bindkey &quot;\e[2~&quot; overwrite-mode
bindkey &quot;\e[3~&quot; delete-char
bindkey &quot;\e[4~&quot; end-of-line
bindkey &quot;\e[5~&quot; history-search-backward
bindkey &quot;\e[6~&quot; history-search-forward</code></pre>



<p>第三天玩的 zsh 也和 tcsh 一樣。</p>

<p>第二天都在看 javascript 的 <a href="http://www.nczonline.net/blog/tag/javascript/">文章</a> 和 <a href="http://www.designfollow.com/javascript/17-hours-of-javascript-from-the-masters/">影片</a> ，其中有一篇 <a href="http://www.phpied.com/rendering-repaint-reflowrelayout-restyle/">Rendering: repaint, reflow/relayout, restyle</a> 蠻不錯的，介紹了 render tree 的概念，是以前沒接觸過的，另外還看了不少 performance 相關的文章，希望 Nicolas 的 <a href="http://www.amazon.com/dp/059680279X">High Performance JavaScript</a> 能快點出。</p>

<p>第三天早上則是弄拖了很久的 <a href="http://jedi.org/p4/Opera/pub/">Opera 三太子</a> Mac 版，因為這部份動力不大所以一直都沒什麼動，不過這次算是蠻有進度的，幾乎大部分的設定都有套上去了，該改的檔案要放哪也大概都確定了，應該過陣子會有個測試版吧，接著因為噗浪上 <a href="http://www.zsh.org/">zsh</a> 正夯，所以我也玩起來了，zsh 是真的厲害不少，自動完成的功能，git 後面的指令也會自動完成，還會列出參考，cd 可以直接切換父層目錄，例如要從 「 <code>xx/2.1/blah/blah/blah</code> 」 跑到 「 <code>xx/2.2/blah/blah/blah</code> 」 只要輸入 cd 2.1 2.2 就可以了，另外我發現他除了 <a href="http://zsh.sourceforge.net/Doc/Release/Parameters.html#IDX248"><span class="caps">PROMPT</span></a> 可以設定外，還有一個 <a href="http://zsh.sourceforge.net/Doc/Release/Parameters.html#IDX264"><span class="caps">RPROMPT</span></a> ，是會放在最右邊的，而且指令打太長時還會自動消失，不過因為在 freebsd 下設定顏色的方法找很久才找到，所以整個幾乎下午剩下的時間都在弄，我的 zsh 現在變這樣了。</p>

<p><a href="http://www.flickr.com/photos/othree/4240326365/" title="Flickr 上 othree 的 zsh"><img src="http://farm3.static.flickr.com/2531/4240326365_3ca467f0c9_o.png" width="498" height="216" alt="zsh" /></a></p>

<p>最後就是今天晚上開始用 <a href="https://github.com/">github</a> 備份我的 <a href="http://github.com/othree/rc">rc 檔</a> 了，現在比較整齊的只有 zshrc 吧XD。</p>

<p>至於動畫，不知道為什麼把 <a href="http://zh.wikipedia.org/wiki/%E5%A4%A7%E9%81%8B%E5%8B%95%E6%9C%83">大運動會</a> <span class="caps">OVA </span>版重看一遍了，其實 TV 版也在重看，只是 <span class="caps">OVA </span>比較好看，TV 最後面太超展開了，所以越看越慢，日本年假期間都沒新動畫啊&gt;&lt;。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="1"></b:comments>


		</b:entry>

	</b:entries>
</b:blog>
