<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>s</b:listType>
			<b:listData listID="000611" baseName="perl-style-regexp-for-vim">Perl Style RegExp for Vim</b:listData>

			<b:previous>
				<b:mTitle>Screen 下 Vim F1~F4 沒辦法正常 map</b:mTitle>
				<b:mDate>2010-01-07</b:mDate>
				<b:mBase>screen_vim_f1f4_map</b:mBase>
			</b:previous>


			<b:next>
				<b:mTitle>為什麼有 &lt;img&gt; 這個標籤</b:mTitle>
				<b:mDate>2010-01-17</b:mDate>
				<b:mBase>why-do-we-have-an-img-element</b:mBase>
			</b:next>

		</b:entriesMeta>
		<b:entry entryID="000611" baseName="perl-style-regexp-for-vim">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-01-08</b:date>
				<b:time>01:41:44</b:time>
			</b:datetime>
			<b:category>vim</b:category>

			<b:CommentsAccepted>1</b:CommentsAccepted>



			<b:PingsAccepted>0</b:PingsAccepted>

			<b:title>Perl Style RegExp for Vim</b:title>
			<b:content>
				<b:summary>今天下午在尋找能讓 Vim 的 Regular Expression 變得好看一點的方法，因為實在太多斜線了，當然直接就把目標鎖定在 perl 的語法，一開始找到一個 vim tip 有建議用 perldo ，不過編譯時要把 +perl 弄起來，使用上也不是很好用，而且不能搜尋，只能做取代，雖然 有人寫了 function 來搜尋，不過實際測試之後離方便使用還有些距離。 c9s 還有建議我用 very magic 看看，結果還是不夠滿意，後來換成找日本那邊，終於找到 eregex.vim 這個 plugin ，他的作法是把 perl/ruby 的 regexp 語法用 function 轉成 vim 的 regexp 語法，所以問題少很多，預設會把 S（大寫S）替換成用 perl/ruby 的...</b:summary>
				<b:mainContent><p>今天下午在尋找能讓 Vim 的 Regular Expression 變得好看一點的方法，因為實在太多斜線了，當然直接就把目標鎖定在 perl 的語法，一開始找到一個 <a href="http://vim.wikia.com/wiki/Perl_compatible_regular_expressions">vim tip</a> 有建議用 <a href="http://vimdoc.sourceforge.net/htmldoc/if_perl.html#:perldo">perldo</a> ，不過編譯時要把 <a href="http://vimdoc.sourceforge.net/htmldoc/various.html#+perl">+perl</a> 弄起來，使用上也不是很好用，而且不能搜尋，只能做取代，雖然 <a href="http://tech.groups.yahoo.com/group/vim/message/49561">有人寫了 function</a> 來搜尋，不過實際測試之後離方便使用還有些距離。 <a href="http://c9s.blogspot.com/">c9s</a> 還有建議我用 <a href="http://vimdoc.sourceforge.net/htmldoc/pattern.html#/\v">very magic</a> 看看，結果還是不夠滿意，後來換成找日本那邊，終於找到 <a href="http://www.vector.co.jp/soft/unix/writing/se265654.html">eregex.vim</a> 這個 plugin ，他的作法是把 perl/ruby 的 regexp 語法用 function 轉成 vim 的 regexp 語法，所以問題少很多，預設會把 S（大寫S）替換成用 perl/ruby 的 regexp 語法來搜尋搜尋取代的指令，使用方法和原來 s（小寫S）的都一樣，另外單純搜尋的部分有 :M/ 這個命令，也可以 map 到原來的 / 上：</p>



<pre><code>nnoremap / :M/</code></pre>



<p>使用上就和原來幾乎完全一樣了，超棒的～</p>

<p>順帶一提， <a href="http://www.ubuntu.com/">Ubuntu</a> 上要編譯出 +perl 的功能要 <a href="http://www.tfug.org/pipermail/tfug/2006-May/011262.html">確定一下 libperl.so 在不在</a> ，像我的系統就只有 libperl.so.5.8，還要自己做個鏈結。</p>

<p class="update">由於作者聯絡不上，我已經接起 <a href="https://github.com/othree/eregex.vim">eregex.vim</a> 的維護工作了，放在 github 上。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>
			<b:comments commentCount="0">

			</b:comments>
			<b:trackbacks trackbackCount="0" trackbackURL="http://othree.net/mt/mt-tb.cgi/610">

			</b:trackbacks>
		</b:entry>
	</b:entries>
</b:blog>