<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>m</b:listType>
			<b:listData listID="2010-02">February 2010</b:listData>

			<b:previous>
				<b:mTitle>January 2010</b:mTitle>
				<b:mDate>2010/01</b:mDate>
			</b:previous>


			<b:next>
				<b:mTitle>April 2010</b:mTitle>
				<b:mDate>2010/04</b:mDate>				
			</b:next>

		</b:entriesMeta>

		<b:entry entryID="000617" baseName="vimrc-onload">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-02-28</b:date>
				<b:time>21:14:50</b:time>
			</b:datetime>
			<b:category>vim</b:category>
			<b:title>vimrc 的 onload</b:title>
			<b:content>
				<b:summary>vimrc 會比任何 plugin 都還要先執行，所以如果有什麼工作是想要在 plugin 讀完後才做的，就不能直接寫在 vimrc 裡面，以我的例子，我想要在某些 plugin 有安裝，該 plugin 的命令確實存在的話，才去另外做這些命令的 mapping ，例如： if exists(&quot;:Align&quot;) com! -bang -range -nargs=* A &lt;line1&gt;,&lt;line2&gt;call Align#Align(&lt;bang&gt;0,&lt;q-args&gt;) endif 這段程式直接放在 vimrc 裡面的話， if 判斷都不會成立，所以我的作法是丟到 function 裡面，然後放到 VimEnter 這個 auto command 的事件執行： function AfterStart () &quot;...</b:summary>
				<b:mainContent><p>vimrc 會比任何 plugin 都還要先執行，所以如果有什麼工作是想要在 plugin 讀完後才做的，就不能直接寫在 vimrc 裡面，以我的例子，我想要在某些 plugin 有安裝，該 plugin 的命令確實存在的話，才去另外做這些命令的 mapping ，例如：</p>



<pre><code>if exists(&quot;:Align&quot;)
    com! -bang -range -nargs=* A &lt;line1&gt;,&lt;line2&gt;call Align#Align(&lt;bang&gt;0,&lt;q-args&gt;)
endif</code></pre>



<p>這段程式直接放在 vimrc 裡面的話， if 判斷都不會成立，所以我的作法是丟到 function 裡面，然後放到 <a href="http://vimdoc.sourceforge.net/htmldoc/autocmd.html#VimEnter">VimEnter</a> 這個 auto command 的事件執行：</p>



<pre><code>function AfterStart ()

&quot; plugin commands
if exists(&quot;:Align&quot;)
    com! -bang -range -nargs=* A &lt;line1&gt;,&lt;line2&gt;call Align#Align(&lt;bang&gt;0,&lt;q-args&gt;)
endif

endfunction
autocmd VimEnter * :call AfterStart()
</code></pre></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="1"></b:comments>


		</b:entry>

		<b:entry entryID="000616" baseName="jquery-function-in-14">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-02-12</b:date>
				<b:time>21:12:02</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>jQuery() in 1.4 </b:title>
			<b:content>
				<b:summary>jQuery 1.4 有個改變應該很少有人注意到，我也是最近剛好有需求才發現，就是直接執行 jQuery 不傳任何參數： jQuery(); 結果會傳回一個 空的 jQuery set ，不過這在 1.4 以前的版本會傳回 document ，這樣的修改我覺得是比較好的，因為以前完全沒辦法產生空的 jQuery set，如果要自己做 jQuery set 會比較方便，除了把要的 DOM 節點抓好放陣列丟給 jQuery 外還多了個建立空的 jQuery set 後一個一個把要的節點丟進去的方法，另一個優點是這樣確保 jQuery function 傳回來的物件是同樣的類型。...</b:summary>
				<b:mainContent><p><a href="http://www.jquery.com">jQuery 1.4</a> 有個改變應該很少有人注意到，我也是最近剛好有需求才發現，就是直接執行 jQuery 不傳任何參數：</p>



<pre><code>jQuery();</code></pre>



<p>結果會傳回一個 <a href="http://api.jquery.com/jQuery/#returning-empty-set">空的 jQuery set</a> ，不過這在 1.4 以前的版本會傳回 <a href="http://www.w3.org/TR/2000/WD-DOM-Level-1-20000929/level-one-core.html#i-Document">document</a> ，這樣的修改我覺得是比較好的，因為以前完全沒辦法產生空的 jQuery set，如果要自己做 jQuery set 會比較方便，除了把要的 <span class="caps">DOM </span>節點抓好放陣列丟給 jQuery 外還多了個建立空的 jQuery set 後一個一個把要的節點丟進去的方法，另一個優點是這樣確保 jQuery function 傳回來的物件是同樣的類型。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="2"></b:comments>


		</b:entry>

		<b:entry entryID="000615" baseName="wai-aria">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2010-02-09</b:date>
				<b:time>23:35:24</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>WAI-ARIA</b:title>
			<b:content>
				<b:summary>WAI-ARIA 全名是 Accessible Rich Internet Applications Suite，是 WAI 正在制定中的規範之一，對象是網路應用程式，像是 gmail、各種 CMS 等，它在WAI 制定的各種規範中，是唯一縮寫名稱用 WAI- 開頭的，一直很好奇為什麼，前幾天寫信去問也得到了答覆： Short answer: Because the acronym ARIA is used for other things, we use WAI-ARIA. 結果和 J長輩 猜的一樣是因為 A R I A 太常見了，所以加上 WAI- 。...</b:summary>
				<b:mainContent><p><a href="http://www.w3.org/WAI/intro/aria.php"><span class="caps">WAI</span>-ARIA</a> 全名是 Accessible Rich Internet Applications Suite，是 <a href="http://www.w3.org/WAI/"><span class="caps">WAI</span></a> 正在制定中的規範之一，對象是網路應用程式，像是 gmail、各種 <span class="caps">CMS </span>等，它在WAI 制定的各種規範中，是唯一縮寫名稱用 <span class="caps">WAI</span>- 開頭的，一直很好奇為什麼，前幾天寫信去問也得到了答覆：</p>

<blockquote>Short answer: Because the acronym <span class="caps">ARIA </span>is used for other things, we use <span class="caps">WAI</span>-ARIA.</blockquote>

<p>結果和 J長輩 猜的一樣是因為 <a href="http://www.ariacompany.net/index2.htm">A</a> <a href="http://www.aria-soft.com/">R</a> <a href="http://en.wikipedia.org/wiki/Aria">I</a> <a href="http://www.google.com/search?q=aria">A</a>  太常見了，所以加上 <span class="caps">WAI</span>- 。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="2"></b:comments>


		</b:entry>

	</b:entries>
</b:blog>
