<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>m</b:listType>
			<b:listData listID="2006-03">March 2006</b:listData>

			<b:previous>
				<b:mTitle>February 2006</b:mTitle>
				<b:mDate>2006/02</b:mDate>
			</b:previous>


			<b:next>
				<b:mTitle>April 2006</b:mTitle>
				<b:mDate>2006/04</b:mDate>				
			</b:next>

		</b:entriesMeta>

		<b:entry entryID="000317" baseName="ie7-beta2-domcss">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2006-03-26</b:date>
				<b:time>00:35:03</b:time>
			</b:datetime>
			<b:category>software</b:category>
			<b:title>IE7 公開版beta2 對DOM和CSS的支援度就是最終版的支援度</b:title>
			<b:content>
				<b:summary>這消息其實是蠻讓我失望的，之前公開的IE7公開測試版，他的CSS和DOM的修正已經是最終版了，就是說正式版的IE7在這部份不會有所更改了，消息來源我忘了，不過前兩天國外的網站不少在講這件事。...</b:summary>
				<b:mainContent><p>這消息其實是蠻讓我失望的，之前公開的<a href="http://www.microsoft.com/windows/ie/ie7/ie7betaredirect.mspx"><span class="caps">IE7</span>公開測試版</a>，他的CSS和DOM的修正已經是最終版了，就是說正式版的IE7在這部份不會有所更改了，消息來源我忘了，不過前兩天國外的網站不少在講這件事。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="2"></b:comments>


		</b:entry>

		<b:entry entryID="000316" baseName="we-blog-on-eslite-reader">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2006-03-16</b:date>
				<b:time>20:19:01</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>誠品好讀三月號有blog專題</b:title>
			<b:content>
				<b:summary> 今天在誠品剛好看到三月號的誠品好讀有blog的專題，稍微翻一下覺得內容不少就買下來了，剛剛又稍微翻一下，內容大概佔了整本書的一半，感覺蠻划算的，內容也不差，只是真的蠻多的，還沒時間看。...</b:summary>
				<b:mainContent><p><img src="http://blog.othree.net/log/2006/03/14/we_blog_on_eslite_reader/eslite_reader_63.jpg" alt="誠品好讀三月號封面" height="151" width="120" /></p>

<p>今天在誠品剛好看到三月號的誠品好讀有blog的專題，稍微翻一下覺得內容不少就買下來了，剛剛又稍微翻一下，內容大概佔了整本書的一半，感覺蠻划算的，內容也不差，只是真的蠻多的，還沒時間看。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000315" baseName="winxp-on-intel-mac">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2006-03-16</b:date>
				<b:time>19:14:47</b:time>
			</b:datetime>
			<b:category>mac</b:category>
			<b:title>WinXP on Intel Mac</b:title>
			<b:content>
				<b:summary>懸賞很久的Windows XP on an Intel Mac終於結束了，由一位叫clay的Mac Hacker贏得，他也把幾張照片和安裝過程的影片放到網路上，另外也在他的blog上發表一篇文章，並且未來將會公開方法。...</b:summary>
				<b:mainContent><p>懸賞很久的<a href="http://www.winxponmac.com/">Windows XP on an Intel Mac</a>終於結束了，由一位叫<a href="http://daemons.net/~clay/">clay</a>的Mac Hacker贏得，他也把幾張<a href="http://www.flickr.com/photos/32436196@N00/with/110977744/">照片</a>和<a href="http://youtube.com/watch?v=nzH6OFpXgzI">安裝過程的影片</a>放到網路上，另外也在他的blog上發表一篇<a href="http://daemons.net.nyud.net:8080/~clay/index.php/2006/03/15/dual-booting-windows-xp-and-mac-os-x-on-intel-macs/">文章</a>，並且未來將會公開方法。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000314" baseName="web-host-accusation-customer">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2006-03-16</b:date>
				<b:time>09:57:33</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>戰國策？</b:title>
			<b:content>
				<b:summary>昨天第一次聽到這個名字，原來是國內的主機供應商，不過很可惜的第一次聽到竟然就是他告自己的客戶，真是太誇張了，以前網路不發達的時代，這種事情還可以偷偷幹，現在都甚麼時代了，還想用這種方法封人的嘴，所以我覺得不發揮一下blogger的力量串連一下不行。 虛擬主機請勿選擇戰國策，會遭該公司提起告訴! 戰國策真是一間有趣的主機商啊… 戰國策想用法律來塞 Blogger 的嘴？門都沒有！...</b:summary>
				<b:mainContent><p>昨天第一次聽到這個名字，原來是國內的主機供應商，不過很可惜的第一次聽到竟然就是他告自己的客戶，真是太誇張了，以前網路不發達的時代，這種事情還可以偷偷幹，現在都甚麼時代了，還想用這種方法封人的嘴，所以我覺得不發揮一下blogger的力量串連一下不行。</p>


<ul>
<li><a href="http://www.neo.com.tw/archives/000871.html">虛擬主機請勿選擇戰國策，會遭該公司提起告訴!</a></li>
<li><a href="http://blog.bcse.info/307">戰國策真是一間有趣的主機商啊…</a></li>
<li><a href="http://blog.markplace.net/marks_place/1/2006/03/15/88"> 戰國策想用法律來塞 Blogger 的嘴？門都沒有！</a></li>
</ul>

</b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000313" baseName="yahoo-ui-library-connection-manager">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2006-03-14</b:date>
				<b:time>22:11:40</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>Yahoo! UI Library: Connection Manager</b:title>
			<b:content>
				<b:summary>Yahoo!最近放出了他的UI Library（以後簡稱YUI），一開始我還沒特別在意，直到看了Forget addEvent, use Yahoo!’s Event Utility，才覺得好像很方便用，而且甚麼瀏覽器間的問題都處理好了，真是好XD。所以最近寫的東西就拿來用了，現在已經研究了Connection Manager和Event，其中Event的部份已經有Forget addEvent, use Yahoo!’s Event Utility這篇文章介紹了，所以這篇先介紹Connection Manager吧。...</b:summary>
				<b:mainContent><p>Yahoo!最近放出了他的<a href="http://developer.yahoo.net/yui/">UI Library</a>（以後簡稱YUI），一開始我還沒特別在意，直到看了<a href="http://www.dustindiaz.com/yahoo-event-utility/">Forget addEvent, use Yahoo!’s Event Utility</a>，才覺得好像很方便用，而且甚麼瀏覽器間的問題都處理好了，真是好XD。所以最近寫的東西就拿來用了，現在已經研究了<a href="http://developer.yahoo.net/yui/connection/index.html">Connection Manager</a>和<a href="http://developer.yahoo.net/yui/event/index.html">Event</a>，其中Event的部份已經有<a href="http://www.dustindiaz.com/yahoo-event-utility/">Forget addEvent, use Yahoo!’s Event Utility</a>這篇文章介紹了，所以這篇先介紹<strong>Connection Manager</strong>吧。</p></b:mainContent>
				<b:extendContent><p>其實，<strong>Connection Manager</strong>就是Ajax技術用到的XMLHttpRequest的library。IE不支援XMLHttpRequest，他是用ActiveX來達到HttpRequest的功能（不過最早可以做到這件事的也是IE），當然程式碼也會不一樣，YUI的Connection Manager就可以迴避掉這個問題，以下大部分範例都是用YUI的<a href="http://developer.yahoo.net/yui/connection/index.html#docs">文件</a>的範例。</p>

<p>首先要使用YUI先要把程式碼include進來，檔案在官方網頁有得抓：</p>

<pre><code>&lt;!-- Namespace source file --&gt;
&lt;script src = "http://yourwebsite.com/util/YAHOO.js" &gt;&lt;/script&gt;

&lt;!-- Connection Manager source file --&gt;
&lt;script src = "http://yourwebsite.com/util/connection.js" &gt;&lt;/script&gt;</code></pre>



<p>其中第一個<strong>YAHOO.js</strong>是不管哪一個library都需要的，不過也只需要include一次，如果有同時用到兩個以上的YUI，記得YAHOO.js只需要一次喔。接下來我們就可以建立連線做出HttpRequest了：</p>

<pre><code>var cObj = YAHOO.util.Connect.asyncRequest('GET','http://www.yahoo.com',callback,null);</code></pre>

<p>這樣就做出連線了，這邊要稍微解釋一下<code>asyncRequest</code>裡面的幾個參數，基本上就是如上所示的四個：</p>


<ol>
<li>就是傳資料的method，就只有GET和POST可用，不過我還不會用POST。</li>
<li>是RequestUri，如果使用GET method，要傳遞的資料就要字幾家在網址後面。</li>
<li>則是伺服器回傳後負責處理的function。</li>
<li>最後則是使用POST method時要送出的資料，我不會用POST就是因為這裡看不懂，似乎是需要用實際的HTML表單來作傳出的資料，而不能自己用javascript產生，有時間測試再說。</li>
</ol>



<p>如果只是要偷偷上傳資料，那這樣就可以了，不過Ajax的精華在於背後傳遞資料的互動模式，所以伺服器回傳後的動作一定是要的，因此接下來要介紹<strong>callback</strong>這個function的形式。</p>

<p>到這我要改口了，<strong>callback</strong>（名稱可以自取）其實是個物件，裡面至少要指定成功回傳和失敗時負責處理的兩個function，另外還有兩個屬性，argument、scope：長相如下：</p>



<pre><code>var responseSuccess = function(o){ //transaction success case logic }
var responseFailure = function(o){ //transaction failure case logic }

var callback =
{
    success:responseSuccess,
    failure:responseFailure,
    argument: arguments ,
    scope: this
}</code></pre>



<p><code>argument</code>用途不明，似乎不論是成功還是失敗function都會收到的樣子，可以不加，scope只有在function要用到this的時候需要。至於一開始的兩個則是一定要的。一開始定義functiong時的<code>function(o)</code>裡面的o就是代表回傳的物件，如果成功，裡面會包含回傳的網頁內容，可能是XML或是string，不過為了有效利用當然是要回傳XML啦。如果是失敗的狀況，則會包含相關錯誤訊息。至於XML的資料使用方法當然就是DOM了，以上面的function為例，回傳的XML文件就是<code>o.responseXML</code>，可以直接對他套用DOM的function。以下提供一個我前兩天寫的回傳成功的處理function給各位做參考：</p>

<pre><code>var updateS = function (o) {
    var strDocument = o.responseText; 
    var xmlDocument = o.responseXML;
    if(!xmlDocument || xmlDocument.childNodes.length==0) {
           xmlDocument = (new DOMParser()).parseFromString(strDocument, &quot;text/xml&quot;);
    }
    sselect = document.createElement(&quot;select&quot;);
    sselect.name = &quot;s&quot;;
    sselect.id = &quot;s&quot;;
    YAHOO.util.Event.addListener(sselect, &quot;change&quot;, getList, 's');
    YAHOO.util.Event.addListener(sselect, &quot;keydown&quot;, getList, 's');
    var options = xmlDocument.getElementsByTagName('option');
	soption = document.createElement(&quot;option&quot;);
	soption.value = &quot;-1&quot;;
	soption.id = &quot;fb&quot;;
	text = document.createTextNode(&quot;學校&quot;);
	soption.appendChild(text);
	sselect.appendChild(soption);
	for (i = 0; i &lt; options.length; i++) {
		soption = document.createElement(&quot;option&quot;);
		soption.value = options[i].getAttribute('value');
		text = document.createTextNode(options[i].firstChild.nodeValue);
		soption.appendChild(text);
		sselect.appendChild(soption);
	}
	remove(null, 's');
	remove(null, 'b');
	document.getElementById('form').insertBefore(sselect, document.getElementById('sub'));
}</code></pre>

不過這個function有另外用到別的function IE可能不支援，所以還有如下的code：

<pre><code>if (typeof DOMParser == "undefined") { DOMParser = function (){}
  DOMParser.prototype.parseFromString = function (str, contentType) {
    if (typeof ActiveXObject != "undefined") { 
      var d = new ActiveXObject("MSXML.DomDocument"); 
      d.loadXML(str); 
      return d; 
    } 
    else if (typeof XMLHttpRequest != "undefined") {
      var req = new XMLHttpRequest; 
      req.open("GET", "data:" + (contentType || "application/xml") +  
                                 ";charset=Big-5," + encodeURIComponent(str), false); 
      if (req.overrideMimeType) { 
        req.overrideMimeType(contentType); 
      } 
      req.send(null); 
      return req.responseXML; 
    } 
  } 
}</code></pre>

如果大家發現IE不能正常的取得回傳的XML的話，可以參考我的作法，上面這段code也是找來的，出處會再補上。</b:extendContent>
			</b:content>

			<b:comments commentCount="4"></b:comments>


		</b:entry>

		<b:entry entryID="000312" baseName="css-percentage-minus-pixels">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2006-03-07</b:date>
				<b:time>12:55:18</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>CSS的百分比減像素</b:title>
			<b:content>
				<b:summary>根據這篇文章表示，W3C 的CSS工作小組已經通過一篇proposal，讓設計師在指定長度時可以讓百分比和像素做加減運算，這真是最近最讓人振奮的消息了，不過還不知道詳細內容是怎樣就是，不知道有沒有可能直接拿IE的方法來用。...</b:summary>
				<b:mainContent><p>根據這篇<a href="http://cow.neondragon.net/index.php/688-Css-Percentage-Minus-Pixels">文章</a>表示，W3C 的CSS工作小組已經通過一篇proposal，讓設計師在指定長度時可以讓百分比和像素做加減運算，這真是最近最讓人振奮的消息了，不過還不知道詳細內容是怎樣就是，不知道有沒有可能直接拿IE的方法來用。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="1"></b:comments>


		</b:entry>

		<b:entry entryID="000311" baseName="osx-terminal-utf8-fix">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2006-03-02</b:date>
				<b:time>20:29:22</b:time>
			</b:datetime>
			<b:category>software</b:category>
			<b:title>OSX的終端機的UTF-8問題解決辦法</b:title>
			<b:content>
				<b:summary>前兩天終於搞定我的iBook的終端機了，之前跑上掛站的主機輸入文字總是變亂碼，昨天才解決，原來之前已經改到只差一步了。...</b:summary>
				<b:mainContent><p>前兩天終於搞定我的iBook的終端機了，之前跑上掛站的主機輸入文字總是變亂碼，昨天才解決，原來之前已經改到只差一步了。</p></b:mainContent>
				<b:extendContent><p>首先是更新Bash，不過其實這不在夠新的還靜下是不用做的，因為還要透過<a href="http://www.darwinports.org/">DarwinPorts</a>更新，步驟我也忘了，所以就先跳過，bash版本在2.0.4以上的都不需要更新（最新的是3.1.1），想知道版本的只要執行<code>bash --version</code>即可。</p>

<p>第二步則是要編輯或修改兩個rc檔，第一個是<strong>.inputrc</strong>，內容如下：</p>

<pre><code>set meta-flag on
set convert-meta off
set input-meta on
set output-meta on</code></pre>

<p>第二個則是<strong>.profile</strong>（好像也有是<strong>.bash_profile</strong>），加入以下內容</p>

<pre><code>export LANG=zh_TW.UTF-8
alias ls='ls -w'</code></pre>

<p>第二部就算完成了，最後第三部則是終端機的設定，進入<strong>視窗設定</strong>，選擇模擬，<strong>反勾選跳脫非ASCII字元</strong>，然後到監視器的字元集編碼，選擇UTF-8，這樣就OK了。</p>

<p>參考網址：<br />
<a href="http://n00.be/archives/202"><span class="caps">OSX</span> Terminal <span class="caps">UTF</span>-8 woes solved</a></p>

<p>最後附圖一張:P</p>

<p><a href="http://blog.othree.net/log/2006/03/02/osx_terminal_utf8_fix/screenshot.png"><img src="http://blog.othree.net/log/2006/03/02/osx_terminal_utf8_fix/screenshot-thumb.png" alt="正在輸入中文哩" height="251" width="355" /></a></p></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

	</b:entries>
</b:blog>
