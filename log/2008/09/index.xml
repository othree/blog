<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>m</b:listType>
			<b:listData listID="2008-09">September 2008</b:listData>

			<b:previous>
				<b:mTitle>August 2008</b:mTitle>
				<b:mDate>2008/08</b:mDate>
			</b:previous>


			<b:next>
				<b:mTitle>October 2008</b:mTitle>
				<b:mDate>2008/10</b:mDate>				
			</b:next>

		</b:entriesMeta>

		<b:entry entryID="000541" baseName="super-expand">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-09-29</b:date>
				<b:time>16:47:08</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>超展開檢視</b:title>
			<b:content>
				<b:summary> 我一定是コードギアス的劇情討論看太多才會看錯成這樣 囧 。...</b:summary>
				<b:mainContent><p><img src="http://blog.othree.net/log/2008/09/29/super-expand/expand.png" alt="Google Reader的展開檢視我看成超展開檢視" height="44" width="153" /></p>

<p>我一定是<a href="http://www.geass.jp/">コードギアス</a>的劇情討論看太多才會看錯成這樣 囧 。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000540" baseName="javascript-closure-issue">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-09-27</b:date>
				<b:time>02:21:41</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>JavaScript Closure</b:title>
			<b:content>
				<b:summary>這篇想寫很久了，test case的檔案也寫好超過一個月了，這次用了3(?)個case來說明，以下每個test-case都有三個h2標籤，然後透過getElementsByTagName來取得這三個h2，接著用for迴圈來對每個h2加上click事件，click後會alert i的值出來，i是for迴圈的索引值。首先來看一下第一個case的script： var subHeads = document.getElementsByTagName('h2'); for (var i=0; i&lt;subHeads.length; i++) { subHeads[i].onclick = function () { alert(i); }; } 這個case中，使用非常直觀的想法，不過他的結果是每個h2 click下去都會alert "3"出來，實際上每個click都是執行一個function，這個function會執行alert function，並且送 i 這個變數作為輸入值，不過實際上使用者click動作發生時，迴圈已經跑過一遍，而且 i 的值已經變成3了，所以你不管click哪一個h2，實際上都是做 alert(3) 這個動作。...</b:summary>
				<b:mainContent><p>這篇想寫很久了，test case的檔案也寫好超過一個月了，這次用了3(?)個case來說明，以下每個test-case都有三個h2標籤，然後透過getElementsByTagName來取得這三個h2，接著用for迴圈來對每個h2加上click事件，click後會alert i的值出來，i是for迴圈的索引值。首先來看一下<a href="http://othree.net/projects/test-case/closure/test1.html">第一個case</a>的script：</p>



<pre><code>var subHeads = document.getElementsByTagName('h2');
for (var i=0; i&lt;subHeads.length; i++) {
    subHeads[i].onclick = function () {
        alert(i);
    };
}</code></pre>



<p>這個case中，使用非常直觀的想法，不過他的結果是每個h2 click下去都會alert "3"出來，實際上每個click都是執行一個function，這個function會執行alert function，並且送 <strong>i</strong> 這個變數作為輸入值，不過實際上使用者click動作發生時，迴圈已經跑過一遍，而且 i 的值已經變成3了，所以你不管click哪一個h2，實際上都是做 alert(3) 這個動作。</p></b:mainContent>
				<b:extendContent><p>要解決這個問題，有兩個方法可以處理，第一個是利用function來做closure把變數的scope獨立出來，另一個方法是用eval來做function，首先來看<a href="http://othree.net/projects/test-case/closure/test2.html">第一個作法</a>：</p>



<pre><code>var subHeads = document.getElementsByTagName('h2');
for (var i=0; i&lt;subHeads.length; i++) {
    (function () {
        var ii = i;
        subHeads[i].onclick = function () {
            alert(ii);
        };
    })();
}</code></pre>



<p>這個方法是用匿名function把 <strong>ii</strong> 這個變數的scope獨立起來，而 ii 的值就是在這個匿名function執行時 i 的值，這樣每個click function裡面的 ii 就都各自獨立，不會互相影響到。再來看<a href="http://othree.net/projects/test-case/closure/test3.html">第二個作法</a>：</p>



<pre><code>var subHeads = document.getElementsByTagName('h2');
for (var i=0; i&lt;subHeads.length; i++) {
    eval(&quot;subHeads[i].onclick = function () {&quot; +
         &quot;    alert(&quot;+i+&quot;);&quot; +
         &quot;};&quot;);
}</code></pre>



<p>可以看到整個event function的指派都是用eval來達成的，比較特別的是要用 <strong>i</strong> 時，我是跳脫字串，直接用 i變數 的值，這個作法其實是讓每個click function的內容都不太一樣（alert的輸入值不同）。而除了這兩個方法之外，我還蠻喜歡把屬性加到DOM的elementNode上的，所以來看看<a href="http://othree.net/projects/test-case/closure/test4.html">我習慣的作法</a>：</p>



<pre><code>var subHeads = document.getElementsByTagName('h2');
for (var i=0; i&lt;subHeads.length; i++) {
    subHeads[i].attr_i = i;
    subHeads[i].onclick = function () {
        alert(this.attr_i);
    };
}</code></pre>



<p>在這個範例理，我先在 h2 node 下面加上 attr_i 這個屬性，值就是 i 當時的值，而click function內就是送 attr_i 給alert function，這樣結果也可以如我們所預期。不過如果是用jQuery的話就要注意了，來看看最後這個<a href="http://jquery.com/">jQuery</a>的<a href="http://othree.net/projects/test-case/closure/test5.html">例子</a>：</p>



<pre><code>var subHeads = $('h2');
for (var i=0; i&lt;subHeads.length; i++) {
    subHeads.eq(i).attr_i = i;
    subHeads.eq(i).click(function () {
        alert($(this).attr_i);
    });
}</code></pre>



<p>因為jQuery沒有cache機制，所以上面這個例子會發生錯誤， $(this).attr_i 會不存在，會alert出 'undefined' ，要新增屬性的話要直接加到最基本的 <span class="caps">DOM</span> Node 上，不可以放在jQuery物件上，要存取DOM Node可以用 <code>subHead.get(0)</code> 或是 <code>subHead[0]</code> ，後者我沒測試過就是。</p></b:extendContent>
			</b:content>

			<b:comments commentCount="4"></b:comments>


		</b:entry>

		<b:entry entryID="000539" baseName="konami-command">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-09-20</b:date>
				<b:time>21:59:29</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>Konami Command</b:title>
			<b:content>
				<b:summary>更新：檔案已經遺失了，有需要的可以自行上 Github 找別的版本。 ↑ ↑ ↓ ↓ ← → ← → B A 這有名的秘技相信大家都有印象，前陣子Google Reader還拿了這個指令來用，最近突然很想把它寫出來，今天下午終於花了些時間弄出來，在這個js檔案裡面定義了一個konami的自定函式，只要把輸入命令後想要做的動作寫成function作為參數來呼叫這個函式即可，以執行一個alert動作為例： konami(function(){alert('You got 30 lifes.')}); Konami Command Script Konami Code(Command)...</b:summary>
				<b:mainContent><p class="update">更新：檔案已經遺失了，有需要的可以自行上 Github 找別的版本。</p>

<p><strong>↑ ↑ ↓ ↓ ← → ← → B A</strong></p>

<p>這有名的秘技相信大家都有印象，前陣子Google Reader還拿了這個指令來用，最近突然很想把它寫出來，今天下午終於花了些時間弄出來，在這個js檔案裡面定義了一個konami的自定函式，只要把輸入命令後想要做的動作寫成function作為參數來呼叫這個函式即可，以執行一個alert動作為例：</p>



<pre><code>konami(function(){alert('You got 30 lifes.')});</code></pre>




<ul>
<li><del><a href="http://othree.net/projects/konami/">Konami Command Script</a></del></li>
<li><a href="http://en.wikipedia.org/wiki/Konami_Command">Konami Code(Command)</a></li>
</ul>

</b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000538" baseName="css-indent-and-middle-text">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-09-13</b:date>
				<b:time>09:39:17</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>CSS TIP - 縮排和文字垂直置中</b:title>
			<b:content>
				<b:summary>今天要來介紹的這個CSS TIP，一部分是為了應付IE的box model才出現的。 首先，我有一個固定寬高的頁首區塊，也就是我接下來要介紹的CSS TIP所可以應用的地方，這種頁首區塊內的文字通常只有一行，其他類似的物件還有各種標題（h1~h6）、導覽列清單（li）等。這些區塊物件在還沒有任何設定的時候，裡面的文字通常都是貼齊左上角的，這邊舉一個 h1標題 的例子，它的 CSS Code 如下： h1 { font-size: 200%; color: #fff; background: #000; height: 100px; } 顯示結果如下：...</b:summary>
				<b:mainContent><p>今天要來介紹的這個CSS <span class="caps">TIP</span>，一部分是為了應付IE的box model才出現的。</p>

<p>首先，我有一個固定寬高的頁首區塊，也就是我接下來要介紹的CSS <span class="caps">TIP</span>所可以應用的地方，這種頁首區塊內的文字通常只有一行，其他類似的物件還有各種標題（h1~h6）、導覽列清單（li）等。這些區塊物件在還沒有任何設定的時候，裡面的文字通常都是貼齊左上角的，這邊舉一個 <strong>h1標題</strong> 的例子，它的 <span class="caps">CSS</span> Code 如下：</p>



<pre><code>h1 {
    font-size: 200%;
    color: #fff;
    background: #000;
    height: 100px;
}
</code></pre>



<p>顯示結果如下：</p>

<p><img src="http://blog.othree.net/log/2008/09/13/css-indent-and-middle-text/first.png" alt="" height="130" width="300" /></p></b:mainContent>
				<b:extendContent><p>這通常不是我們想要的效果，我們可能想要有一點內距、文字水平置中、垂直置中、或是把文字藏起來，用背景圖來代替，不過隨便設定padding，可能就會遇到IE的box model問題，雖然IE 7已經可以用標準模式，但是IE 6的使用者還很多，目前還不能忽略這個問題。除了垂直置中以外，其他幾種要求大概都可以簡單達成，如果是用表格排版的話連垂直置中也不是問題，不過基本上我不考慮表格排版就是，一般的作法有CSS hack和多層div兩種，我要介紹的則是用line-height和text-indent兩種屬性來達到我們的需求，不用CSS hack和多層div。首先就來把文字垂直置中吧，這邊我用的是line-height（行高）這個屬性，只要設定的高度和區塊高度一樣（此例為100px），這單一行的文字就會垂直置中了，結果如下圖：</p>

<p><img src="http://blog.othree.net/log/2008/09/13/css-indent-and-middle-text/second.png" alt="" height="130" width="300" /></p>

<p>如果想要文字水平也置中，只要加上 <code>text-align: center;</code> 就可以了，不過我比較喜歡讓文字靠左，然後留一點邊距，讓文字不要這麼貼齊邊緣，這時可以用text-indent（首行縮排）這個屬性，因為內文只有一行，所以可以偷偷用這個屬性來做出padding-left的效果，如果文字是多行的話，大概上個行高設定就讓你的內文爆炸了吧XD。加上15px縮排的結果如下圖：</p>

<p><img src="http://blog.othree.net/log/2008/09/13/css-indent-and-middle-text/third.png" alt="" height="130" width="300" /></p>

<p>text-indent除了可以製造內距的效果之外，還可以用來把文字隱藏，免得檔到背景圖，只要把值設成負的，例如<strong>-1000000px</strong>，文字就會跑到視窗可視範圍之外，要保險一點還可以加上 <code>overflow: hidden;</code> 的設定，讓超出區塊範圍的東西隱藏起來。以上就是本次的CSS <span class="caps">TIP</span>內容，希望能幫到大家，下篇應該會說javascript的東西吧。</p>

<p class="update">補充：考量到親和力的情況下，還是比較推薦使用img標籤配合alt屬性的替代文字的，這樣在圖片讀取不到的狀況下，也還是看得到文字內容。</p></b:extendContent>
			</b:content>

			<b:comments commentCount="4"></b:comments>


		</b:entry>

		<b:entry entryID="000537" baseName="php-session">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-09-11</b:date>
				<b:time>02:21:37</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>PHP Session</b:title>
			<b:content>
				<b:summary> session_start(); session_register('id'); $_SESSION['id'] = 1234; 本來查文件是說直接用$_SESSION這個變數就可以，不過測試過後還是要用session_register註冊一下變數名稱，不然會沒辦法把session傳到其他頁面。...</b:summary>
				<b:mainContent><pre><code>
session_start();
session_register('id');
$_SESSION['id'] = 1234;
</code></pre>



<p>本來查文件是說直接用$_SESSION這個變數就可以，不過測試過後還是要用session_register註冊一下變數名稱，不然會沒辦法把session傳到其他頁面。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="4"></b:comments>


		</b:entry>

		<b:entry entryID="000536" baseName="google-chrome-comment">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-09-07</b:date>
				<b:time>01:30:05</b:time>
			</b:datetime>
			<b:category>software</b:category>
			<b:title>我的Google Chrome評測</b:title>
			<b:content>
				<b:summary>推出已經3天的Google瀏覽器，還蠻讓人期待最後正式版的樣子，不過目前有一些問題我覺得要先解決，首先是安裝問題，不少人無法安裝，我自己也有一台電腦是這樣，後來抓了離線版安裝檔順利安裝了，但是卻有一些功能和設定不能正常使用。另一個是memory leak問題，雖然Google說他們用多個process來處理記憶體問題，但不表示就可以不處理這問題，不然像我還是成功的讓Google Chrome吃了1G的記憶體。 Firefox 3我不管怎樣弄大概吃到500多MB就最多了，當然我的測試不是開無限多圖，無限多分頁啦，基本上是開一個數百張圖的網頁，然後我發現Google Chrome只要我一直卷上卷下，那個記憶體就會越吃越多XD。 再來講講優點，其實就是，使用者介面的效果很棒，而且很流暢，我最喜歡的就是書籤工具列的切換，有兩種，第一種是平常看網頁的時候，直接Ctrl+B，就會有類似slide out感覺的動畫效果，另外一種則是隱藏書籤列時開空白新分頁，那個預設的頁面上也有個書籤工具列，如果這時候按下Ctrl + B，就會看到網頁上的書籤工具列往上移動和視窗的介面部分接在一起，感覺棒，而且效果很流暢。 另外就是用的訊息蠻有趣的，除了讓一堆人重病的「是不是我講錯什麼話讓你不開心了？」以外，確定反安裝後，還可以回他說「我沒有不高興（I am not unhappy）。」不過這些訊息在日文版似乎都修掉了，感覺有點可惜，又不過反正我也不會去用日文版，也覺得也沒差啦。...</b:summary>
				<b:mainContent><p>推出已經3天的Google瀏覽器，還蠻讓人期待最後正式版的樣子，不過目前有一些問題我覺得要先解決，首先是安裝問題，不少人無法安裝，我自己也有一台電腦是這樣，後來抓了離線版安裝檔順利安裝了，但是卻有一些功能和設定不能正常使用。另一個是memory leak問題，雖然Google說他們用多個process來處理記憶體問題，但不表示就可以不處理這問題，不然像我還是成功的讓Google Chrome吃了1G的記憶體。</p>

<p><a href="http://www.flickr.com/photos/othree/2823904128/" title="Flickr 上 othree 的 1G"><img src="http://farm4.static.flickr.com/3050/2823904128_03e9f343e7_o.png" width="468" height="300" alt="1G" /></a></p>

<p>Firefox 3我不管怎樣弄大概吃到500多MB就最多了，當然我的測試不是開無限多圖，無限多分頁啦，基本上是開一個數百張圖的網頁，然後我發現Google Chrome只要我一直卷上卷下，那個記憶體就會越吃越多XD。</p>

<p>再來講講優點，其實就是，使用者介面的效果很棒，而且很流暢，我最喜歡的就是書籤工具列的切換，有兩種，第一種是平常看網頁的時候，直接Ctrl+B，就會有類似slide out感覺的動畫效果，另外一種則是隱藏書籤列時開空白新分頁，那個預設的頁面上也有個書籤工具列，如果這時候按下Ctrl + B，就會看到網頁上的書籤工具列往上移動和視窗的介面部分接在一起，感覺棒，而且效果很流暢。</p>

<p>另外就是用的訊息蠻有趣的，除了讓一堆人<a href="http://www.flickr.com/photos/othree/2830629010/">重病</a>的「是不是我講錯什麼話讓你不開心了？」以外，確定反安裝後，還可以回他說「我沒有不高興（I am not unhappy）。」不過這些訊息在日文版似乎都修掉了，感覺有點可惜，又不過反正我也不會去用日文版，也覺得也沒差啦。</p>

<p><a href="http://www.flickr.com/photos/othree/2824058623/" title="Flickr 上 othree 的 我沒有不高興"><img src="http://farm4.static.flickr.com/3007/2824058623_1d1fda1eb9.jpg" width="500" height="374" alt="我沒有不高興" /></a></p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="2"></b:comments>


		</b:entry>

		<b:entry entryID="000535" baseName="picasa-3-and-picasaweb">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-09-04</b:date>
				<b:time>01:09:03</b:time>
			</b:datetime>
			<b:category>software</b:category>
			<b:title>Picasa 3 和 Picasa Web</b:title>
			<b:content>
				<b:summary>就在全世界都在關注Google瀏覽器的時候，Google其實還同時公開了新版的Picasa Web和桌機的Picasa 3 beta版，一如往常的我懶得花篇幅介紹各種新功能，不過現在Google超貼心，都會提供YouTube影片來介紹軟體的新功能：Picasa 3 beta、Picasa Web的新功能，人臉辨識（目前只有英文版有）。 新功能在Youtube的影片都介紹的很詳細了，所以我要介紹的就是比較其他的東西，首先是Picasa Web的人臉辨識可以抓到Mii的大頭，其實不只Mii的大頭，還有一堆有的沒的遊戲角色都抓的到XD。 另外一個則是Picasa 3內新附的圖片瀏覽器Picasa Photo Viewer，功能和設定選項還不多，不過介面實在蠻漂亮的，有裝Picasa 3的人可以順便玩玩。 Introducing Picasa 3.0...</b:summary>
				<b:mainContent><p>就在全世界都在關注<a href="http://www.google.com/chrome/">Google瀏覽器</a>的時候，Google其實還同時公開了新版的<a href="http://picasaweb.google.com/home">Picasa Web</a>和桌機的<a href="http://picasa.google.com/intl/en_us/">Picasa 3 beta</a>版，一如往常的我懶得花篇幅介紹各種新功能，不過現在Google超貼心，都會提供YouTube影片來介紹軟體的新功能：<a href="http://tw.youtube.com/watch?v=rskC6c_5L1M">Picasa 3 beta</a>、<a href="http://tw.youtube.com/watch?v=teeGF-w5Cpw">Picasa Web的新功能，人臉辨識</a>（目前只有英文版有）。</p>

<p>新功能在Youtube的影片都介紹的很詳細了，所以我要介紹的就是比較其他的東西，首先是Picasa Web的人臉辨識可以抓到Mii的大頭，其實不只Mii的大頭，還有一堆有的沒的遊戲角色都抓的到XD。</p>

<p><a href="http://blog.othree.net/log/2008/09/04/picasa-3-and-picasaweb/name-tag.png"><img src="http://blog.othree.net/assets_c/2008/09/name-tag-thumb-400x314.png" alt="一堆Mii大頭" height="314" width="400" /></a></p>

<p>另外一個則是Picasa 3內新附的圖片瀏覽器<strong>Picasa Photo Viewer</strong>，功能和設定選項還不多，不過介面實在蠻漂亮的，有裝Picasa 3的人可以順便玩玩。</p>

<p><a href="http://blog.othree.net/log/2008/09/04/picasa-3-and-picasaweb/picasa-photo-viewer.png"><img src="http://blog.othree.net/assets_c/2008/09/picasa-photo-viewer-thumb-400x250.png" alt="光箱介面真不錯" height="250" width="400" /></a></p>


<ul>
<li><a href="http://googleblog.blogspot.com/2008/09/introducing-picasa-30-and-big-changes.html" title="and big changes for Picasa Web Albums">Introducing Picasa 3.0</a></li>
</ul>

</b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="2"></b:comments>


		</b:entry>

		<b:entry entryID="000534" baseName="google-chrome">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-09-02</b:date>
				<b:time>10:00:57</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>Google Chrome !!</b:title>
			<b:content>
				<b:summary>前陣子就聽說Google要推出瀏覽器了，今天起來後真的看到Google公布消息，網路上也到處鬧的沸沸揚揚的，目前Google是說使用WebKit做render engine，Javascript則是使用V8引擎，是Google自己開發的Virtual Machine，目前大部分和瀏覽器相關的訊息都在官方發表的Google Chrome的簡介漫畫裡面，包括我上面提到的兩點，還有介面的設計、Open Source、一些使用概念等。Google Blogsphere偷倒了幾張使用畫面，我也從他們那偷一張過來放:P 我比較驚訝的是Google Chrome沒有工具列，之前已經有一個IE7這樣做失敗了，不知道Google表現會怎樣就是，總之，明天就可以下載測試版了\A_A/。 A fresh take on the browser...</b:summary>
				<b:mainContent><p>前陣子就聽說Google要推出瀏覽器了，今天起來後真的看到Google公布消息，網路上也到處鬧的沸沸揚揚的，目前Google是說使用WebKit做render engine，Javascript則是使用V8引擎，是Google自己開發的Virtual Machine，目前大部分和瀏覽器相關的訊息都在官方發表的Google Chrome的<a href="http://books.google.com/books?id=8UsqHohwwVYC&amp;printsec=frontcover%23PPA30%2CM1">簡介漫畫</a>裡面，包括我上面提到的兩點，還有介面的設計、Open Source、一些使用概念等。Google Blogsphere偷倒了幾張<a href="http://blogoscoped.com/archive/2008-09-02-n72.html">使用畫面</a>，我也從他們那偷一張過來放:P</p>

<p><img src="http://blog.othree.net/log/2008/09/02/google-chrome/google-chrome-screenshot.jpg" alt="藍色為主色，標籤頁在最上面，沒有標準工具列" height="359" width="440" /></p>

<p>我比較驚訝的是Google Chrome沒有工具列，之前已經有一個IE7這樣做失敗了，不知道Google表現會怎樣就是，總之，明天就可以下載測試版了\A_A/。</p>


<ul>
<li><a href="http://googleblog.blogspot.com/2008/09/fresh-take-on-browser.html">A fresh take on the browser</a></li>
</ul>

</b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="4"></b:comments>


		</b:entry>

	</b:entries>
</b:blog>
