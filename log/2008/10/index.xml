<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>m</b:listType>
			<b:listData listID="2008-10">October 2008</b:listData>

			<b:previous>
				<b:mTitle>September 2008</b:mTitle>
				<b:mDate>2008/09</b:mDate>
			</b:previous>


			<b:next>
				<b:mTitle>November 2008</b:mTitle>
				<b:mDate>2008/11</b:mDate>				
			</b:next>

		</b:entriesMeta>

		<b:entry entryID="000552" baseName="google-books-aggrement">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-10-30</b:date>
				<b:time>00:40:33</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>Google 圖書搜尋與作家和出版業達成和解</b:title>
			<b:content>
				<b:summary>詳見Google 圖書搜尋和解合約，反正就是要錢，總之以後可以花錢申請全文閱覽，申請後可以在 Google Books 上看到書籍的全部內容，不過這個和解方式還沒完全定案，目前還待美國政府批准，而且這還只限於美國國內，還不清楚外國使用者到時候會是怎樣的狀況，是一樣可以付費進行全文閱覽，不過只限美國法律保護範圍內的書籍，還是想付費都不行也不確定就是了。另外之前在國際書展有看到 Google 擺攤宣傳 Google Books，不知道成效怎樣，不過我預想在台灣是很差啦Q_Q。...</b:summary>
				<b:mainContent><p>詳見<a href="http://books.google.com/googlebooks/agreement/">Google 圖書搜尋和解合約</a>，反正就是要錢，總之以後可以花錢申請全文閱覽，申請後可以在 Google Books 上看到書籍的全部內容，不過這個和解方式還沒完全定案，目前還待美國政府批准，而且這還只限於美國國內，還不清楚外國使用者到時候會是怎樣的狀況，是一樣可以付費進行全文閱覽，不過只限美國法律保護範圍內的書籍，還是想付費都不行也不確定就是了。另外之前在國際書展有看到 Google 擺攤宣傳 Google Books，不知道成效怎樣，不過我預想在台灣是很差啦Q_Q。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="8"></b:comments>


		</b:entry>

		<b:entry entryID="000551" baseName="youtube-cc">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-10-29</b:date>
				<b:time>21:12:05</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>YouTube支援字幕顯示</b:title>
			<b:content>
				<b:summary> 傍晚在plurk上說了想玩玩看GAE之後就隨便翻了些tutorial，還看了一段google題供的影片 Developing and deploying an application on Google App Engine，那時才注意到，YouTube現在支援影片字幕了，而且可以加入多種語言的字幕，訪客想看哪種語言可以自己挑，比較可惜的是這段影片的中文字幕只有簡體版本。 後來翻了一下YouTube的說明，有提到字幕檔案的格式和編碼等等，就放在與影片互動這區內，字幕檔的格式很簡單，就是時間和字幕文字，可以有多行，編碼用UTF-8，不過實際上播放影片的時候，server吐出來的是轉換過的xml檔，Jedi說那是W3C的新東西，剛好是他要在 HappyDesigner Meetup 4 講的東西之一，有興趣的人可以來聽聽喔（不過聽說額滿了）。...</b:summary>
				<b:mainContent><p><img src="http://blog.othree.net/log/2008/10/29/youtube-cc/youtube.png" alt="" height="387" width="483" /></p>

<p>傍晚在plurk上說了想玩玩看GAE之後就隨便翻了些tutorial，還看了一段google題供的影片 <a href="http://tw.youtube.com/watch?v=bfgO-LXGpTM">Developing and deploying an application on Google App Engine</a>，那時才注意到，YouTube現在支援影片字幕了，而且可以加入多種語言的字幕，訪客想看哪種語言可以自己挑，比較可惜的是這段影片的中文字幕只有簡體版本。</p>

<p>後來翻了一下YouTube的說明，有提到字幕檔案的格式和編碼等等，就放在<a href="http://help.youtube.com/support/youtube/bin/topic.py?topic=10534">與影片互動</a>這區內，字幕檔的格式很簡單，就是時間和字幕文字，可以有多行，編碼用UTF-8，不過實際上播放影片的時候，server吐出來的是轉換過的xml檔，<a href="http://jedi.org/">Jedi</a>說那是W3C的新東西，剛好是他要在 <a href="http://blog.happydesigner.org/2008/10/happydesigner.html">HappyDesigner Meetup 4</a> 講的東西之一，有興趣的人可以來聽聽喔（不過聽說額滿了）。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="1"></b:comments>


		</b:entry>

		<b:entry entryID="000550" baseName="csshttprequest">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-10-27</b:date>
				<b:time>00:06:32</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>CSSHttpRequest</b:title>
			<b:content>
				<b:summary>上週DK長輩看到的東西，CSSHttpRequest是個新的跨domain XHR技巧，利用CSS檔案不會有跨站存取限制和 about: URI來達成跨domain的js存取，當然要做跨domain最簡單還是用W3C的access control，當然IE還沒支援，目前看來要等到IE8才有機會，順便題一下，W3C開始制訂起XMLHTTPRequest Level 2了，簡單看一下是多了些新功能的樣子。...</b:summary>
				<b:mainContent><p>上週<a href="http://blog.gslin.org/archives/2008/10/24/1800/">DK長輩</a>看到的東西，<a href="http://nb.io/hacks/csshttprequest/"><span class="caps">CSSH</span>ttpRequest</a>是個新的跨domain <span class="caps">XHR</span>技巧，利用CSS檔案不會有跨站存取限制和 <strong>about:</strong> <span class="caps">URI</span>來達成跨domain的js存取，當然要做跨domain最簡單還是用W3C的<a href="http://www.w3.org/TR/access-control/">access control</a>，當然IE還沒支援，目前看來要等到IE8才有機會，順便題一下，W3C開始制訂起<a href="http://www.w3.org/TR/XMLHttpRequest2/"><span class="caps">XMLHTTPR</span>equest Level 2</a>了，簡單看一下是多了些新功能的樣子。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000549" baseName="happydesigner-meetup-4">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-10-25</b:date>
				<b:time>22:08:03</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>HappyDesigner 第四次聚會</b:title>
			<b:content>
				<b:summary> HappyDesigner要辦第四次聚會了，11/15日在台北的蛙咖啡，前兩天開始開放報名了，限額60名已經剩不到1/3了，講題還沒完全確定已經確定了，不過最新的消息都就放在HappyDesigner的Google Site上，有興趣的就快報名吧。 60個名額已經滿了，還想參加的只能等有人沒繳錢了～...</b:summary>
				<b:mainContent><p><img src="//blog.othree.net/assets_c/2008/10/hd-logo-thumb-200x200.png" alt="" height="200" width="200" /></p>

<p><a href="http://www.happydesigner.org/index.html">HappyDesigner</a>要辦第四次聚會了，11/15日在台北的<a href="http://cafe.frogfree.com/">蛙咖啡</a>，前兩天開始開放<a href="https://registrano.com/events/happydesigner4">報名</a>了，限額60名已經剩不到1/3了，講題<del>還沒完全確定</del>已經確定了，<del>不過最新的消息都</del>就放在<a href="http://sites.google.com/a/happydesigner.org/happydesigner-meetup/happydesigner-meetup-no-4">HappyDesigner的Google Site</a>上，有興趣的就快報名吧。</p>

<p class="update">60個名額已經滿了，還想參加的只能等有人沒繳錢了～</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000548" baseName="peppy">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-10-23</b:date>
				<b:time>01:10:22</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>Peppy: 超快的CSS選擇器</b:title>
			<b:content>
				<b:summary>前天發現到Peppy這個新的CSS選擇器，號稱速度比Sizzle還快，跑了他的speed test也確實有不凡的表現，而且code也蠻乾淨漂亮的，和大部分的library一樣，如果瀏覽器已經支援querySelectorAll的話也會直接用，像是Safari 3就有支援（windows版也有）。 順便一提，Eric Meyer現在覺得靠javascript來實做標準也不錯。...</b:summary>
				<b:mainContent><p>前天發現到<a href="http://jamesdonaghue.com/?p=40">Peppy</a>這個新的CSS選擇器，號稱速度比<a href="http://github.com/jeresig/sizzle/tree/master">Sizzle</a>還快，跑了他的speed test也確實有不凡的表現，而且code也蠻乾淨漂亮的，和大部分的library一樣，如果瀏覽器已經支援<a href="http://www.w3.org/TR/selectors-api/#documentselector">querySelectorAll</a>的話也會直接用，像是Safari 3就有支援（windows版也有）。</p>

<p>順便一提，Eric Meyer現在覺得<a href="http://meyerweb.com/eric/thoughts/2008/10/22/javascript-will-save-us-all/">靠javascript來實做標準</a>也不錯。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000547" baseName="ie8-dont-support-css-expression">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-10-22</b:date>
				<b:time>01:22:50</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>IE8標準模式將不支援CSS expression</b:title>
			<b:content>
				<b:summary>IEBlog的消息，CSS expression就是可以在CSS value裡面進行一些簡單運算，像是「10%+4px」這樣的長度設定，雖然記憶中W3C也曾經有過草稿，不過總之這就是不太有人使用的東西，所以一直以來也只有IE支援，然後這次IE Team終於決定要把它拿掉了，不過Ajaxian上的第一篇回文很XD： I can't believe they're doing such big changes and don't want to rename their XMLHttpRequest object... pff......</b:summary>
				<b:mainContent><p><span class="caps">IEB</span>log的<a href="http://blogs.msdn.com/ie/archive/2008/10/16/ending-expressions.aspx">消息</a>，CSS expression就是可以在CSS value裡面進行一些簡單運算，像是「10%+4px」這樣的長度設定，雖然記憶中W3C也曾經有過草稿，不過總之這就是不太有人使用的東西，所以一直以來也只有IE支援，然後這次IE Team終於決定要把它拿掉了，不過Ajaxian上的<a href="http://ajaxian.com/archives/css-expressions-are-no-more-in-ie-8">第一篇回文</a>很XD：</p>

<blockquote cite="http://ajaxian.com/archives/css-expressions-are-no-more-in-ie-8"><p>I can't believe they're doing such big changes and don't want to rename their <span class="caps">XMLH</span>ttpRequest object... pff...</p></blockquote></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000546" baseName="256-color-terminal">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-10-19</b:date>
				<b:time>01:28:16</b:time>
			</b:datetime>
			<b:category>software</b:category>
			<b:title>256色終端機環境</b:title>
			<b:content>
				<b:summary>前兩天重灌OSX，在搞定OSX上的終端機（目前換用 iTerm）環境時花了很多時間，過程中我才驚覺到我用putty/pietty登入到主機 shell 介面上的文字都是單色的，像是 ls 顯示出來的目錄和執行檔顏色都一樣，花了些時間研究，後來乾脆弄到256色的環境，設定還算簡單，記錄一下過程。 Linux端 Linux 是 Ubuntu 8.04，內建的.bashrc會判斷 $TERM 這個環境變數來修改一些設定，而且一開始並沒有支援256色終端機環境，因此需要安裝一些套件，安裝指令為： sudo aptitude install ncurses-term 裝完後，終端機軟體送出正確的$TERM變數就可以使用到256色的終端機了。 PuTTY端 我目前使用 PuTTY Tray，這邊要修改的設定有兩項，一就是要送出正確的 termnial-type string，此一設定要在連線前就設定好，不然會找不到選項，位置在 connection → data 的 terminal-detail 內，設為「xterm-256color」，二是要把 Backspace 設為 Control-H ，選項位置在 Terminal → Keyboard 的 Change the...</b:summary>
				<b:mainContent><p>前兩天重灌OSX，在搞定OSX上的終端機（目前換用 <a href="http://iterm.sourceforge.net/">iTerm</a>）環境時花了很多時間，過程中我才驚覺到我用putty/pietty登入到主機 shell 介面上的文字都是單色的，像是 ls 顯示出來的目錄和執行檔顏色都一樣，花了些時間研究，後來乾脆弄到256色的環境，設定還算簡單，記錄一下過程。</p>

<h4>Linux端</h4>

<p>Linux 是 <a href="http://www.ubuntu-tw.org/">Ubuntu 8.04</a>，內建的.bashrc會判斷 <strong>$TERM</strong> 這個環境變數來修改一些設定，而且一開始並沒有支援256色終端機環境，因此需要安裝一些套件，安裝指令為：</p>



<pre>sudo aptitude install ncurses-term</pre>



<p>裝完後，終端機軟體送出正確的$TERM變數就可以使用到256色的終端機了。</p>

<h4>PuTTY端</h4>

<p>我目前使用 <a href="http://www.xs4all.nl/~whaa/putty/">PuTTY Tray</a>，這邊要修改的設定有兩項，一就是要送出正確的 termnial-type string，此一設定要在連線前就設定好，不然會找不到選項，位置在 connection → data 的 terminal-detail 內，設為「<strong>xterm-256color</strong>」，二是要把 Backspace 設為 <strong>Control-H</strong> ，選項位置在 Terminal → Keyboard 的 Change the sequences sent by 內，這樣設完重新連線應該就可以使用256色的環境了，不確定有沒有成功的可以去抓 <a href="http://www.system-linux.net/doc/xterm/colortest.pl">colortest.pl</a> 這個perl script來跑跑看。</p>

<p>256色有什麼好處呢？雖然掛BBS和IRC是都沒差，不過平常操作和vim的樣式就可以使用比較多顏色了，我現在在主機上的vim就改用 <a href="http://blog.infinitered.com/entries/show/8">IR_Black</a> 這個 color schema 了，顏色漂亮不少。</p>

<p><a href="http://www.flickr.com/photos/othree/2962106594/" title="Flickr 上 othree 的 vim"><img src="//farm4.static.flickr.com/3276/2962106594_9f865fda34.jpg" width="500" height="314" alt="vim" /></a></p>


<ul>
<li><a href="http://push.cx/2008/256-color-xterms-in-ubuntu">256-Color XTerms in Ubuntu</a></li>
<li><a href="http://blog.yzlin.org/2008/05/14/22/">Make <span class="caps">UTF</span>-8 Environment Comfortable</a></li>
</ul>

</b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000545" baseName="javascript-the-good-parts">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-10-12</b:date>
				<b:time>12:12:27</b:time>
			</b:datetime>
			<b:category>books</b:category>
			<b:title>JavaScript 優良部分</b:title>
			<b:content>
				<b:summary> 本書評由othree評論於2008/08/15，評分為5分（滿分5分），採創用 CC 姓名標示-相同方式分享 授權條款釋出。 JavaScript 優良部分（JavaScript: The Good Parts）在英文版出版消息出來時我就很有興趣了，本來也預訂要購買了，沒想到中文版很快就出了，當然是二話不說就買下來了，畢竟不管英文閱讀能力如何，我看中文吸收還是比較快，書到手時首先被他的厚度嚇了一跳，全書才160多頁，定價420，不過內容實在是很不錯，我是覺得收穫/頁數比Pro JavaScript Techniques還要高。 書中主要是分成分成語法、物件、函式、繼承、陣列和正規表示式（Regular Expression）幾個部分來介紹JavaScript的優良部分，除了語法部分外，每章都講到不少慣例的寫法，許也可以稱為設計模式，像是var that = this;這個作法，我以前比較有印象是看過var self = this;，我自己則沒有特別用哪個變數名稱，不過看到這段之後去google了一下，用that的其實比較多。書中比較難的大概還是函式和繼承這部份吧，以繼承來說，JavaScript其實在設計上並沒有真的講到繼承（inherit）的，資料封包也是，不過都有其他方法可以做到這些事情，書中提到的繼承方法大概有三四種，其特性都有介紹。至於函式的部份我還有一些還沒花腦袋去把code看懂，不過就已經理解或是用過的方法而言，這章節介紹的東西都很有用，寫小script可能用不到，不過需要複雜一點的演算法的時候，相信裡面的東西就會很有幫助了。 除了優良部分外，還有一篇附錄是講JavaScript不良的部份，像是每本書都會提到的 == 的怪異行為，一些可能會造成錯誤解讀的用法等等，除了這些優良部分和不良部份的介紹外，其實書中在各個章節，都若有若無的在強調寫code要保持良好的程式碼風格，到第九章還特別把這件事提除來強調，即使到附錄的不良的部份也還事宜在提到這些事情，這部份的內容其實我覺得是蠻意外的收穫，因為這些慣例的寫法通常不屬於規格的一部分，如果沒人整理出來要靠自己學習事很花時間的，為此接下來也還要買Pro JavaScript Design Patterns，希望也會是一本好書。 JavaScript 優良部分整體而言內容紮實，長度短了點，雖然部分內容有些複雜，不過就如序文所說，這本書我也推薦給剛開始接觸JavaScript的人，畢竟，不該碰的東西，該養成的習慣都是早點知道比較好啊。...</b:summary>
				<b:mainContent><div class="hreview" id="hreview-JavaScript-The-Good-Parts">
  <p class="item">
    <a class="fn url" href="http://www.oreilly.com.tw/product2_web.php?id=a238" title="JavaScript 優良部分"><img src="//blog.othree.net/log/2008/10/12/javascript-the-good-parts/js-good-parts.gif" title="JavaScript 優良部分" alt="JavaScript 優良部分" width="170" height="211" /></a>
  </p>
  <p class="entry-info">
  本書評由<span class="reviewer vcard"><span class="fn nickname">othree</span></span>評論於<abbr class="dtreviewed" title="20080815">2008/08/15</abbr>，評分為<abbr title="5" class="rating">5分（滿分5分）</abbr>，採<a rel="license" href="http://creativecommons.org/licenses/by-sa/2.5/tw/deed.zh_TW">創用 CC 姓名標示-相同方式分享 授權條款</a>釋出。
  </p>
  <div class="description">
    <p>JavaScript 優良部分（<a href="http://oreilly.com/catalog/9780596517748/">JavaScript: The Good Parts</a>）在英文版出版消息出來時我就很有興趣了，本來也預訂要購買了，沒想到中文版很快就出了，當然是二話不說就買下來了，畢竟不管英文閱讀能力如何，我看中文吸收還是比較快，書到手時首先被他的厚度嚇了一跳，全書才160多頁，定價420，不過內容實在是很不錯，我是覺得收穫/頁數比<a href="http://blog.othree.net/log/2008/02/21/pro-javascript-techniques/">Pro JavaScript Techniques</a>還要高。</p>
    <p>書中主要是分成分成語法、物件、函式、繼承、陣列和正規表示式（Regular Expression）幾個部分來介紹JavaScript的優良部分，除了語法部分外，每章都講到不少慣例的寫法，許也可以稱為設計模式，像是<code>var that = this;</code>這個作法，我以前比較有印象是看過<code>var self = this;</code>，我自己則沒有特別用哪個變數名稱，不過看到這段之後去google了一下，用<strong>that</strong>的其實比較多。書中比較難的大概還是函式和繼承這部份吧，以繼承來說，JavaScript其實在設計上並沒有真的講到繼承（inherit）的，資料封包也是，不過都有其他方法可以做到這些事情，書中提到的繼承方法大概有三四種，其特性都有介紹。至於函式的部份我還有一些還沒花腦袋去把code看懂，不過就已經理解或是用過的方法而言，這章節介紹的東西都很有用，寫<a href="http://blog.othree.net/log/2008/09/20/konami-command/">小script</a>可能用不到，不過需要複雜一點的演算法的時候，相信裡面的東西就會很有幫助了。</p>
    <p>除了優良部分外，還有一篇附錄是講JavaScript不良的部份，像是每本書都會提到的 == 的怪異行為，一些可能會造成錯誤解讀的用法等等，除了這些優良部分和不良部份的介紹外，其實書中在各個章節，都若有若無的在強調寫code要保持良好的程式碼風格，到第九章還特別把這件事提除來強調，即使到附錄的不良的部份也還事宜在提到這些事情，這部份的內容其實我覺得是蠻意外的收穫，因為這些慣例的寫法通常不屬於規格的一部分，如果沒人整理出來要靠自己學習事很花時間的，為此接下來也還要買<a href="http://www.apress.com/book/view/9781590599082">Pro JavaScript Design Patterns</a>，希望也會是一本好書。</p>
    <p>JavaScript 優良部分整體而言內容紮實，長度短了點，雖然部分內容有些複雜，不過就如序文所說，這本書我也推薦給剛開始接觸JavaScript的人，畢竟，不該碰的東西，該養成的習慣都是早點知道比較好啊。</p>
  </div>
</div></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="2"></b:comments>


		</b:entry>

		<b:entry entryID="000544" baseName="my-day-yesterday">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-10-12</b:date>
				<b:time>12:03:04</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>My Day, Yesterday</b:title>
			<b:content>
				<b:summary>Flickr Blog上看到的。...</b:summary>
				<b:mainContent><p><a href="http://blog.flickr.net/zh/2008/10/12/%E6%8A%8A%E4%B8%80%E5%A4%A9%E6%BF%83%E7%B8%AE%E6%88%9090%E7%A7%92/">Flickr Blog</a>上看到的。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000543" baseName="rockman-9">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-10-11</b:date>
				<b:time>21:36:43</b:time>
			</b:datetime>
			<b:category>acg</b:category>
			<b:title>逆勢操作的Rockman 9</b:title>
			<b:content>
				<b:summary>在次世代主機的戰爭之中，任天堂跳脫了以往追求主機性能、畫面、聲光效果的競賽，把新主機的重心轉往遊戲的本質，推出了Wii，結果主機大賣，公司股價即使在現在這波全球性的經濟危機之下還能逆勢上漲。最近有一款遊戲則做出更讓人驚訝的策略，雖然還不知道其收益會是如何，不過各種消息讓我覺得還是很值得介紹這款遊戲，這款遊戲就是洛克人九。...</b:summary>
				<b:mainContent><p>在次世代主機的戰爭之中，任天堂跳脫了以往追求主機性能、畫面、聲光效果的競賽，把新主機的重心轉往遊戲的本質，推出了Wii，結果主機大賣，公司股價即使在現在這波全球性的經濟危機之下還能逆勢上漲。最近有一款遊戲則做出更讓人驚訝的策略，雖然還不知道其收益會是如何，不過各種消息讓我覺得還是很值得介紹這款遊戲，這款遊戲就是<a href="http://www.capcom.co.jp/rockman/9">洛克人九</a>。</p>

<p><img src="//blog.othree.net/log/2008/10/11/rockman-9/rockman-logo.jpg" alt="" /></p></b:mainContent>
				<b:extendContent><p>洛克人（Rockman）是1987年在任天堂紅白機上推出的橫向捲軸動作遊戲，本傳系列之前最後一款是1996年在上PS推出的八代，除了本傳系列外，還有推出各種衍生系列，沒記錯的話，洛克人系列是史上系列作最多的遊戲，其中也不乏3D的版本，2008年推出的洛克人九卻決定以8bit（紅白機等級）的技術來製作，洛克人的一堆動作也都拿掉了，只剩跳和射擊，不能跑不能滑不能蹲，關卡難度也回到以前會讓人想摔手把的程度，幾乎一切都返樸歸真，對於老玩家來說實在是非常的懷念而且也非常期待，結果首週也達到不錯的銷量（數字我忘了，也沒有後續的情報）。</p>

<p>而這幾天在日本舉辦的東京電玩展上更是有了<a href="http://www.4gamer.net/games/072/G007292/20081010071/">驚人的發表</a>，CAPCOM官方要免費提供洛克人九的素材給人二次創作，而且發表當天就可以在<a href="http://www.niconicommons.jp/">ニコニ・コモンズ（niconi commons）</a>上抓到了，標籤都設為<a href="http://www.niconicommons.jp/tag/%E3%80%90%E3%83%AD%E3%83%83%E3%82%AF%E3%83%9E%E3%83%B3%E5%85%AC%E5%BC%8F%E3%80%91">【ロックマン公式】</a>，除了遊戲中的人物各種動作圖形、高解析度宣傳圖之外，還有關卡背景音樂等，這應該是日本遊戲史上第一次吧，之前雖然也有些作品的官方網站會提供些素材，不過素材品質和使用範圍的授權和洛克人九這次的程度相比之下根本都是雜魚而已，目前這些素材都是不限範圍的非商業使用，和創用CC不同，他有自己的授權條款，如果有興趣使用的人可能需要自己去看一下。</p>

<p>這次會有8bit洛克人九和官方的素材公開，和ニコニコ上的二次創作關係很大，像是打不倒的空氣人和億千萬等等的洛克人二次創作，都在ACG社群內造成很大的迴響，歌曲不知不覺中也成為家諭戶曉的名曲，我個人是認為因為這些二次創作的關係，稲船敬二才會決定迴歸傳統還只用到8bit的等級，甚至是開放使用這些素材，如果這次的洛克人九能夠產生一個正循環，開放素材讓更多的二次創作產生，而這些二次創作所產生的效應也能對CAPCOM產生益處，不論是經濟收益還是知名度，或許都會吸引其他作品和公司也開放素材的使用，要是真的產生這樣的趨勢的話，在日本長年以來都位於灰色地帶的同仁市場會有個嶄新的局面也說不定。</p></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000542" baseName="yuicompressor">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2008-10-11</b:date>
				<b:time>20:45:47</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>YUI Compressor</b:title>
			<b:content>
				<b:summary>這東西好像很久以前有看過一次，那時不知道為什麼沒深入接觸（或許是看到java就逃跑了），期間還有試過perl的javascript compressor，不過用起來都不是很方便，直到前陣子看到DK示範了一下才又提起興趣，可惜我的blog剛搬離研究室的電腦，而且linux上也不像FreeBSD上有port好的，所以就變成需要在windows下使用，用命令列操控是還算方便，不過因為是包成jar檔，檔名又蠻長的，打命令的時候還蠻辛苦的，所以就寫了個batch檔案來處理： SET PP=D:\tools\yuicompressor\ java -jar %PP%yuicompressor.jar --charset utf-8 %1 %2 %3 %4 %5 %6 %7 %8 %9 確定檔案路徑和基本的選項之後，把這個batch檔丟到path下的目錄，以後就可以用這個指令來壓縮js和css檔了，不過在我自己的電腦上還有遇到別的問題，就是.bat檔不會真的執行，不知道做了什麼事才變成這樣，總之又去找了bat2exec把bat檔轉成com檔，不過這個小程式出處不明，希望沒有什麼木馬在裡面@@。 事後感想是windows的命令列能不能好用一點啊Q_Q。...</b:summary>
				<b:mainContent><p><a href="http://developer.yahoo.com/yui/compressor/">這東西</a>好像很久以前有看過一次，那時不知道為什麼沒深入接觸（或許是看到java就逃跑了），期間還有試過<a href="http://dean.edwards.name/packer/">perl的javascript compressor</a>，不過用起來都不是很方便，直到前陣子看到<a href="http://blog.gslin.org/archives/2008/09/22/1705/">DK示範了一下</a>才又提起興趣，可惜我的blog剛搬離研究室的電腦，而且linux上也不像FreeBSD上有port好的，所以就變成需要在windows下使用，用命令列操控是還算方便，不過因為是包成jar檔，檔名又蠻長的，打命令的時候還蠻辛苦的，所以就寫了個batch檔案來處理：</p>



<pre><code>SET PP=D:\tools\yuicompressor\
java -jar %PP%yuicompressor.jar --charset utf-8 %1 %2 %3 %4 %5 %6 %7 %8 %9</code></pre>



<p>確定檔案路徑和基本的選項之後，把這個batch檔丟到path下的目錄，以後就可以用這個指令來壓縮js和css檔了，不過在我自己的電腦上還有遇到別的問題，就是.bat檔不會真的執行，不知道做了什麼事才變成這樣，總之又去找了<a href="http://www.programmersheaven.com/download/14524/download.aspx">bat2exec</a>把bat檔轉成com檔，不過這個小程式出處不明，希望沒有什麼木馬在裡面@@。</p>

<p>事後感想是windows的命令列能不能好用一點啊Q_Q。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="2"></b:comments>


		</b:entry>

	</b:entries>
</b:blog>
