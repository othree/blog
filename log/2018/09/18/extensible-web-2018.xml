<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>s</b:listType>
			<b:listData listID="000939" baseName="extensible-web-2018">Extensible Web at 2018</b:listData>

			<b:previous>
				<b:mTitle>ECMAScript 2015 新功能間的關係</b:mTitle>
				<b:mDate>2018-09-17</b:mDate>
				<b:mBase>ecmascript-2015-rel-of-features</b:mBase>
			</b:previous>


			<b:next>
				<b:mTitle>Intrinsic Size 媒體寬高比</b:mTitle>
				<b:mDate>2018-09-21</b:mDate>
				<b:mBase>intrinsic-size</b:mBase>
			</b:next>

		</b:entriesMeta>
		<b:entry entryID="000939" baseName="extensible-web-2018">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2018-09-18</b:date>
				<b:time>21:31:27</b:time>
			</b:datetime>
			<b:category>web</b:category>

			<b:CommentsAccepted>0</b:CommentsAccepted>


			<b:PingsAccepted>0</b:PingsAccepted>

			<b:title>Extensible Web at 2018</b:title>
			<b:content>
				<b:summary> 2013 年有一份 Extensible Web 宣言，簽署人同意致力於開發 Web Platform 更底層的介面，讓開發者可以自己擴展 Web Platform，而構成 Web 介面的基本三要素其實就是 HTML、CSS、JavaScript。 其實我在當時就覺得很奇妙，我可以想像的到開發者自己擴充 HTML 標籤，不過卻想像不出來到底 JavaScript 和 CSS 要如何讓開發者擴充，沒想到今天回過頭來看，整個網路標準的發展方向真的是有在朝這方向前進，首先來看 HTML 的部分，其實就是 Web Component，包括了 Custom Element、Shadow DOM、Template、HTML Import 等標準，透過這些新的 Web API，開發者很容易就可以做出可重複利用，有自訂行為的自製標籤了。 JavaScript 的部分，其實在上一篇文章介紹那一串 ES6 新功能的最後，有提到 meta programming 的新功能，雖然不是完完全全想擴充什麼就擴充什麼，但是 JavaScript...</b:summary>
				<b:mainContent><p><img src="https://i.imgur.com/YsbKHg1.gif" alt="" width="275" height="252" /></p>
<p>2013 年有一份 Extensible Web 宣言，簽署人同意致力於開發 Web Platform 更底層的介面，讓開發者可以自己擴展 Web Platform，而構成 Web 介面的基本三要素其實就是 HTML、CSS、JavaScript。</p>
<p>其實我在當時就覺得很奇妙，我可以想像的到開發者自己擴充 HTML 標籤，不過卻想像不出來到底 JavaScript 和 CSS 要如何讓開發者擴充，沒想到今天回過頭來看，整個網路標準的發展方向真的是有在朝這方向前進，首先來看 HTML 的部分，其實就是 <a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components">Web Component</a>，包括了 Custom Element、Shadow DOM、Template、HTML Import 等標準，透過這些新的 Web API，開發者很容易就可以做出可重複利用，有自訂行為的自製標籤了。</p>
<p>JavaScript 的部分，其實在上一篇文章介紹<a href="https://blog.othree.net/log/2018/09/17/ecmascript-2015-rel-of-features/">那一串 ES6 新功能</a>的最後，有提到 meta programming 的新功能，雖然不是完完全全想擴充什麼就擴充什麼，但是 JavaScript 確實是慢慢的有些可以讓開發者比較深入底層的介面可以用。</p>
<p>最後 CSS 的部分，就是 CSS Houdini 了，Houdini 其實就是史上最偉大魔術師胡迪尼，從名稱就可以感受到這個東西有多 <em>magic</em> 了，其實 Houdini 不是一個標準，而是一個 <a href="https://wiki.mozilla.org/CSS/Houdini">W3C Working Group</a>，他們主要的目標就是建構出一整套 API 讓 CSS 可以擴充，而目前也已經有些<a href="https://drafts.css-houdini.org/">成果</a>了，我自己是看了去年一場演講的影片才對 Houdini 有了初步的認識：</p>
<div class="embed_16_9">
    <iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/r-Hc3hN9e6I?rel=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen="allowfullscreen"></iframe>
</div>
<p>現在最主要是已經有 Chrome 把 Paint API 實做出來，所以已經可以用 Canvas 畫圖了，雖然整個計畫離完成還要很久，不過看到 CSS 真的可以開始擴充了，還是覺得很 Magic~</p>
<p>Image Source: <a href="https://imgur.com/gallery/YsbKHg1">https://imgur.com/gallery/YsbKHg1</a></p>
</b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>
			<b:comments commentCount="0">

			</b:comments>
			<b:trackbacks trackbackCount="0" trackbackURL="">

			</b:trackbacks>
		</b:entry>
	</b:entries>
</b:blog>