<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>m</b:listType>
			<b:listData listID="2009-03">March 2009</b:listData>

			<b:previous>
				<b:mTitle>February 2009</b:mTitle>
				<b:mDate>2009/02</b:mDate>
			</b:previous>


			<b:next>
				<b:mTitle>April 2009</b:mTitle>
				<b:mDate>2009/04</b:mDate>				
			</b:next>

		</b:entriesMeta>

		<b:entry entryID="000574" baseName="object-oriented-javascrip">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2009-03-29</b:date>
				<b:time>01:42:58</b:time>
			</b:datetime>
			<b:category>books</b:category>
			<b:title>Object Oriented Javascript</b:title>
			<b:content>
				<b:summary> 本書評由othree 評論於2009/03/29 ，評分為4.5分（滿分5分） ，採創用 CC 姓名標示 授權條款釋出。 看書名就知道，這本書是專門在講 JavaScript 的物件導向，其實看完這本書我當下的想法是：「媽媽我不要用 JavaScript 寫物件導向程式 Q_Q。」 這本書總共有八章，我大概可以切成三段，首先是一到四章，講基礎的 JavaScript，裡面有些東西後面會用到還蠻重要的，再來是本書最重點的五六兩章，在講 prototype 和物件繼承，最後是剩下的BOM、DOM、design pattern和附錄，前後的部份我也沒看的很仔細，主要還是五六章為主。 第五章介紹 JavaScript 特有的 prototype 屬性，接著第六章就開始講解要怎樣利用 prototype 來實作物件繼承，這部份真是越看越不想用 JavaScript 來寫 OO 的程式，作者一種方法接著一種方法介紹，然後再說有什麼問題，解著介紹比較好的方法，整章看下來早就忘了已經介紹幾種方法了，就是看完這張才讓我有了上面的感想，不過用像 Base 這種已經寫好的 library 我到還可以接受啦。 總之，結論，這本在 prototype 和 JavaScript 物件繼承的部份，講的很詳細，是別本書無法取代的，如果對這部份想要深入研究的，那我會推薦來看這本，不過很多時候的 Web...</b:summary>
				<b:mainContent><div class="hreview">
  <p>
    <a target="_blank" href="http://www.packtpub.com/object-oriented-javascript-applications-libraries/book"><img alt="Object Oriented JavaScript" src="http://blog.othree.net/log/2009/03/29/object-oriented-javascrip/ooj-cover.png" height="381" width="300" /></a>
  </p>
  <p>
  本書評由<b class="reviewer vcard nickname">othree</b>
  評論於<abbr class="dtreviewed" title="20090329">2009/03/29</abbr>
  ，評分為<abbr title="4.5">4.5分（滿分5分）</abbr>
  ，採<a target="_blank" rel="license" href="http://creativecommons.org/licenses/by/2.5/tw/">創用 CC 姓名標示 授權條款</a>釋出。
  </p>
  <div class="description">
    <p>看書名就知道，這本書是專門在講 JavaScript 的物件導向，其實看完這本書我當下的想法是：「媽媽我不要用 JavaScript 寫物件導向程式 Q_Q。」</p>
    <p>這本書總共有<a target="_blank" href="http://www.packtpub.com/article/object-oriented-javascript-applications-libraries-table-of-contents">八章</a>，我大概可以切成三段，首先是一到四章，講基礎的 JavaScript，裡面有些東西後面會用到還蠻重要的，再來是本書最重點的五六兩章，在講 prototype 和物件繼承，最後是剩下的BOM、DOM、design pattern和附錄，前後的部份我也沒看的很仔細，主要還是五六章為主。</p>
    <p>第五章介紹 JavaScript 特有的 prototype 屬性，接著第六章就開始講解要怎樣利用 prototype 來實作物件繼承，這部份真是越看越不想用 JavaScript 來寫 OO 的程式，作者一種方法接著一種方法介紹，然後再說有什麼問題，解著介紹比較好的方法，整章看下來早就忘了已經介紹幾種方法了，就是看完這張才讓我有了上面的感想，不過用像 <a target="_blank" href="http://base2.googlecode.com/svn/doc/base2.html#/doc/%21base2.Base">Base</a> 這種已經寫好的 library 我到還可以接受啦。</p>
    <p>總之，結論，這本在 prototype 和 JavaScript 物件繼承的部份，講的很詳細，是別本書無法取代的，如果對這部份想要深入研究的，那我會推薦來看這本，不過很多時候的 Web Develop 是用不太到這些東西的（開發 Firefox Extension 用到的機會還比較大）。</p>
  </div>
</div></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000573" baseName="zowie_n-rf1">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2009-03-08</b:date>
				<b:time>01:41:51</b:time>
			</b:datetime>
			<b:category>buy</b:category>
			<b:title>Zowie N-RF1</b:title>
			<b:content>
				<b:summary>上個月參加 iqmore blog 的活動，我幸運的抽到這張滑鼠墊來試用，所以有了這篇文章，剛好我之前用的是EVERGLIDE TITAN（我知道很老了XD），所以就拿這張來做比較了，直接說結論，這張滑鼠墊在各方面都比TITAN好，重點特色的防水就不說了，像是移動時的阻力，鼠墊背面防滑層的效果，表現都比TITAN還好。 其實可以的話，考量到桌面空間，我是不希望用鼠墊的，不過一般桌面用起來都不是很好，通常是摩擦力太大，所以後來還是用起鼠墊來，在玻璃和布之間，我挑選的一直是布墊，原因有二，一是觸感比較好，二是價錢比較便宜，當然布墊沒辦法到玻璃墊那樣誇張的滑順程度，不過我覺得用起來也還算ok，也配過鐵佛龍膠布來貼鼠腳，效果當然不錯，不過磨損的實在很快，所以後來也沒繼續貼了，總之我後來換了 EVERGLIDE TITAN 後就一直用了幾年沒換，這次換用 Zowie 的RF-1 後有種科技持續在進步的感覺XD。首先感覺到的當然就是摩擦力變小了，雖然沒用多久就沒感覺了，不過在回去用 TITAN 就覺得移動困難XD，算是有明顯的差距。再來是他的滑防層，看起來摸起來都沒什麼，不過效果還真的很不錯，放在桌上，我的MX-R 壓上去，要從旁邊拉動就很困難了。 最後要說說我覺得還比較不夠的，就是要做細微控制的時候，還是很容易跑超過，這部份也可能是因為我手殘吧XD Zowie 官網 老貓的 Blog...</b:summary>
				<b:mainContent><p>上個月參加 iqmore blog 的活動，我幸運的抽到這張滑鼠墊來試用，所以有了這篇文章，剛好我之前用的是EVERGLIDE <span>TITAN</span>（我知道很老了XD），所以就拿這張來做比較了，直接說結論，這張滑鼠墊在各方面都比TITAN好，重點特色的防水就不說了，像是移動時的阻力，鼠墊背面防滑層的效果，表現都比TITAN還好。</p>

<p><a target="_blank" href="http://www.flickr.com/photos/othree/3337109801/" title="Flickr 上 othree 的 Zowie N-RF1"><img src="http://farm4.static.flickr.com/3664/3337109801_5dd88794e5.jpg" alt="疊疊樂，下面是之前用的 Everglide Titan" height="375" width="500" /></a></p>

<p>其實可以的話，考量到桌面空間，我是不希望用鼠墊的，不過一般桌面用起來都不是很好，通常是摩擦力太大，所以後來還是用起鼠墊來，在玻璃和布之間，我挑選的一直是布墊，原因有二，一是觸感比較好，二是價錢比較便宜，當然布墊沒辦法到玻璃墊那樣誇張的滑順程度，不過我覺得用起來也還算ok，也配過鐵佛龍膠布來貼鼠腳，效果當然不錯，不過磨損的實在很快，所以後來也沒繼續貼了，總之我後來換了 <span>EVERGLIDE TITAN </span>後就一直用了幾年沒換，這次換用 Zowie 的RF-1 後有種科技持續在進步的感覺XD。首先感覺到的當然就是摩擦力變小了，雖然沒用多久就沒感覺了，不過在回去用 <span>TITAN </span>就覺得移動困難XD，算是有明顯的差距。再來是他的滑防層，看起來摸起來都沒什麼，不過效果還真的很不錯，放在桌上，我的MX-R 壓上去，要從旁邊拉動就很困難了。</p>

<p>最後要說說我覺得還比較不夠的，就是要做細微控制的時候，還是很容易跑超過，這部份也可能是因為我手殘吧XD</p>

<p><a target="_blank" href="http://www.flickr.com/photos/othree/3337942016/" title="Flickr 上 othree 的 Zowie N-RF1"><img src="http://farm4.static.flickr.com/3339/3337942016_2f9edda55c.jpg" alt="用很久的 MX-Revolution" height="500" width="375" /></a></p>

<p><a target="_blank" href="http://www.flickr.com/photos/othree/3337114517/" title="Flickr 上 othree 的 Zowie N-RF1"><img src="http://farm4.static.flickr.com/3398/3337114517_84813ab000.jpg" alt="背面防滑墊比較" height="375" width="500" /></a></p>

<ul>
<li><a target="_blank" href="http://www.zowiegear.com/">Zowie 官網</a></li>
<li><a target="_blank" href="http://www.iqmore.idv.tw/" title="iqmore">老貓的 Blog</a></li>
</ul></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000572" baseName="cross-browser-inline-block">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2009-03-04</b:date>
				<b:time>01:40:38</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>Cross-Browser Inline Block</b:title>
			<b:content>
				<b:summary>大約兩週前在 Mozilla Webdev Blog 上有一篇 Cross-Browser Inline-Block ，介紹如何用 inline block 代替 float 排列，好解決方塊高度不同時，float 排列會造成的問題，當然，這麼新(?)的 display 屬性，必定會有瀏覽器不支援，加上其實目前各家瀏覽器的行為表現都還不是很一致，所以整篇文章大部分的篇幅是在處理 cross browser 的問題。那時候 DK 長輩說我要是有什麼想法的話可以發一篇，那時候雖然覺得好像有什麼可以講的，不過直到昨天看了 flickr 的原始碼時才知道我想講的是什麼。首先，其實這篇文章介紹的方法我覺得做的很好了，CSS hack的部份也還算乾淨，不過我很龜毛，覺得用到 inline 來做這種像是 block 的東西就是覺得怪怪的，昨天在看 flickr 時突然就在想：「他們是用什麼方法來排照片的？」打開原始碼一看，是 table，flickr 是用 table 來排照片的，我才回憶起之前買的 Everything You Know About CSS is...</b:summary>
				<b:mainContent><p>大約兩週前在 Mozilla Webdev Blog 上有一篇 <a target="_blank" href="http://blog.mozilla.com/webdev/2009/02/20/cross-browser-inline-block/">Cross-Browser Inline-Block</a> ，介紹如何用 inline block 代替 float 排列，好解決方塊高度不同時，float 排列會造成的問題，當然，這麼新(?)的 display 屬性，必定會有<span title="IE">瀏覽器</span>不支援，加上其實目前各家瀏覽器的行為表現都還不是很一致，所以整篇文章大部分的篇幅是在處理 cross browser 的問題。那時候 DK 長輩說我要是有什麼想法的話可以發一篇，那時候雖然覺得好像有什麼可以講的，不過直到昨天看了 flickr 的原始碼時才知道我想講的是什麼。</p><p>首先，其實這篇文章介紹的方法我覺得做的很好了，CSS hack的部份也還算乾淨，不過我很龜毛，覺得用到 inline 來做這種像是 block 的東西就是覺得怪怪的，昨天在看 flickr 時突然就在想：「他們是用什麼方法來排照片的？」打開原始碼一看，是 table，flickr 是用 table 來排照片的，我才回憶起之前買的 <a target="_blank" href="http://blog.othree.net/log/2008/12/18/csswrong/">Everything You Know About <span>CSS </span>is Wrong</a> 這本書，裡面主要介紹到的東西是 table-cell, table-row, ... 等表格元件的 display 屬性，又稱為 css-table，簡單說就是可以拿其他標籤來做 table，這些 display 屬性值可以讓 <span>HTML </span>文件保持它比較適合的語意，但是顯示上又能夠和 table 一樣排列，雖然我在 Everything You Know About <span>CSS </span>is Wrong 的書評中寫到我覺得拿 css-table 來排版還是怪怪的，但是如果是拿來排照片、商品目錄這種，我就突然覺得還不錯，不過 css-table 很理所當然的和 table 一樣，一列要幾個 cell 在寫 <span>HTML </span>markup 階段時就要決定了，不像 float 或是 inline-block 可以透過控制長度來調整，真的達到文件結構和顯示分開的理想。</p>

<p>用 css-table 來排還是有它的好處，最明顯的就是同一列的 cell 高度都會一樣。想要元件高度會自動調整，然後同排的還會一樣高，目前只有用 table 的解法，不論是真的用 table 還是用 css-table，當然，盡量避免非表格資料的東西使用 table 標籤，所以比較好的處理方法還是 css-table。</p>

<p>兩種方法各有他的優缺點，還很難說哪種方法比較好，先不考慮 css-table 方法在舊瀏覽器的支援度問題的話，我是覺得可以用整個版面的 layout 是固定寬度還是自動寬度來決定用那個方法比較好，如果版面是固定寬度的話比較適合用 css-table，反之則是用 inline block。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

	</b:entries>
</b:blog>
