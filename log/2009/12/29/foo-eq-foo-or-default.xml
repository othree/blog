<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>s</b:listType>
			<b:listData listID="000603" baseName="foo-eq-foo-or-default">var foo = foo || {};</b:listData>

			<b:previous>
				<b:mTitle>spidermonkey 的 UTF-8 支援</b:mTitle>
				<b:mDate>2009-12-27</b:mDate>
				<b:mBase>spidermonkey-utf-8</b:mBase>
			</b:previous>


			<b:next>
				<b:mTitle>closure-compiler on OSX</b:mTitle>
				<b:mDate>2009-12-29</b:mDate>
				<b:mBase>closure-compiler-osx</b:mBase>
			</b:next>

		</b:entriesMeta>
		<b:entry entryID="000603" baseName="foo-eq-foo-or-default">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2009-12-29</b:date>
				<b:time>12:42:23</b:time>
			</b:datetime>
			<b:category>script</b:category>

			<b:CommentsAccepted>1</b:CommentsAccepted>



			<b:PingsAccepted>0</b:PingsAccepted>

			<b:title>var foo = foo || {};</b:title>
			<b:content>
				<b:summary>foo = foo || {}; 這樣的寫法大家一定不陌生，如果 ab 有值的話就繼續用，不然就讓他成為空物件。通常會用到的地方有兩種，函式設定參數預設值，或是跨檔案的公用函式庫，這種時候會把變數放在 global scope 下，也就是全域變數，要宣告全域變數的話不用 var，直接變數名稱就可以了，就像上面那段 code，不過實際上，這樣寫是會出錯的，沒寫 var 的話，第二個 foo 會跑出 foo 尚未定義的錯誤，所以寫成標題那樣是比較沒問題的，不過有時候，程式碼會全部包在一個 function scope 裡面，避免安全的問題，但是在這個 scope 裡面用 var 宣告變數的話，變數又不會是全域的，這時其實加上 window 就可以了： (function () { foo = window.foo || {}; })(); 也可以用 if 判斷：...</b:summary>
				<b:mainContent><pre><code>foo = foo || {};</code></pre>



<p>這樣的寫法大家一定不陌生，如果 ab 有值的話就繼續用，不然就讓他成為空物件。通常會用到的地方有兩種，函式設定參數預設值，或是跨檔案的公用函式庫，這種時候會把變數放在 global scope 下，也就是全域變數，要宣告全域變數的話不用 var，直接變數名稱就可以了，就像上面那段 code，不過實際上，這樣寫是會出錯的，沒寫 var 的話，第二個 foo 會跑出 foo 尚未定義的錯誤，所以寫成標題那樣是比較沒問題的，不過有時候，程式碼會全部包在一個 function scope 裡面，避免安全的問題，但是在這個 scope 裡面用 var 宣告變數的話，變數又不會是全域的，這時其實加上 window 就可以了：</p>



<pre><code>(function () {
foo = window.foo || {};
})();</code></pre>



<p>也可以用 if 判斷：</p>



<pre><code>(function () {
if (! window.foo ) { window.foo = {} }
})();</code></pre>



<p>最後我還發現一件趣事，大家可以猜猜看下面的 code 會不會有錯誤：</p>



<pre><code>(function () {
foo = undefined;
foo = foo || {};
})()</code></pre></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>
			<b:comments commentCount="3">

				<b:comment commentID="102887" entryID="000603">
					<b:author>
						<b:authorName>Clydewu</b:authorName>
						<b:authorEmail></b:authorEmail>
						<b:authorUrl></b:authorUrl>
					</b:author>
					<b:datetime>
						<b:date>2009-12-30</b:date>
						<b:time>02:41:17</b:time>
					</b:datetime>
					<b:content>
						<b:mainContent><p>我猜是不會，實際上好像也是不會
原因是foo = undefined時，由於是&#8221;給值&#8221;的動作
所以js會自動替不存在的值宣告並給值undefined，在把我們指定的undefined給值一次。
所以foo=foo||{}時第二個foo不會不存在。</p>

<p>如果直接執行foo=foo||{}，由於是判斷，而不是給值動作所以不會有上述的自動宣告</p>

<p>這樣說對嘛?</p>
</b:mainContent>
					</b:content>
				</b:comment>

				<b:comment commentID="102899" entryID="000603">
					<b:author>
						<b:authorName>怿飞</b:authorName>
						<b:authorEmail>blankzheng@gmail.com</b:authorEmail>
						<b:authorUrl>http://www.planabc.net</b:authorUrl>
					</b:author>
					<b:datetime>
						<b:date>2009-12-30</b:date>
						<b:time>13:24:27</b:time>
					</b:datetime>
					<b:content>
						<b:mainContent><p>其实对于未定义变量只可写入，但不可读取。对于读操作，如果一直追溯到全局执行环境的 scriptObject 上都找不到，就会产生运行期错误。</p>
</b:mainContent>
					</b:content>
				</b:comment>

				<b:comment commentID="102917" entryID="000603">
					<b:author>
						<b:authorName>othree.net</b:authorName>
						<b:authorEmail></b:authorEmail>
						<b:authorUrl>http://blog.othree.net</b:authorUrl>
					</b:author>
					<b:datetime>
						<b:date>2009-12-31</b:date>
						<b:time>10:05:44</b:time>
					</b:datetime>
					<b:content>
						<b:mainContent><p>@Clydewu 有趣的是，這樣給值下去，變得無法判斷他是不是真的 undefined ，雖然實際上不一樣。</p>

<p>@怿飞 我的問題是，為什麼前面加上 var 宣告就不會有錯誤了。</p>
</b:mainContent>
					</b:content>
				</b:comment>

			</b:comments>
			<b:trackbacks trackbackCount="0" trackbackURL="https://othree.net/mt/mt-tb.cgi/602">

			</b:trackbacks>
		</b:entry>
	</b:entries>
</b:blog>