<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>s</b:listType>
			<b:listData listID="000154" baseName="update-mysql-4-1-without-problem">避開編碼問題升級MySQL 4.1</b:listData>

			<b:previous>
				<b:mTitle>PHP5的XSL似乎有bug</b:mTitle>
				<b:mDate>2005-05-16</b:mDate>
				<b:mBase>bug-of-xsl-in-php-5</b:mBase>
			</b:previous>


			<b:next>
				<b:mTitle>Maid in Taiwan</b:mTitle>
				<b:mDate>2005-05-18</b:mDate>
				<b:mBase>maid-in-taiwan</b:mBase>
			</b:next>

		</b:entriesMeta>
		<b:entry entryID="000154" baseName="update-mysql-4-1-without-problem">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2005-05-17</b:date>
				<b:time>23:13:20</b:time>
			</b:datetime>
			<b:category>software</b:category>

			<b:CommentsAccepted>0</b:CommentsAccepted>


			<b:PingsAccepted>0</b:PingsAccepted>

			<b:title>避開編碼問題升級MySQL 4.1</b:title>
			<b:content>
				<b:summary>MySQL 4.1不向下相容，最主要的原因就是他在語系編碼的支援上大幅度的進步，但是剛裝起來的人一定都覺得奇怪，為什麼會跑出一堆亂碼，我昨天經過一整晚的折騰後，終於把問題解決了，最主要的原因是他預設的語言編碼是latin1。另外，這篇是以UTF-8編碼的資料為範例，Big5應該也可以，不過我沒測試過，想測試的人就把文章中一些編碼的參數改成Big5應該就可以了。還有我的環境是Windows XP。...</b:summary>
				<b:mainContent><p><a href="http://www.mysql.com/">MySQL</a> 4.1不向下相容，最主要的原因就是他在語系編碼的支援上大幅度的進步，但是剛裝起來的人一定都覺得奇怪，為什麼會跑出一堆亂碼，我昨天經過一整晚的折騰後，終於把問題解決了，最主要的原因是他預設的語言編碼是latin1。另外，這篇是以<strong><span class="caps">UTF</span>-8</strong>編碼的資料為範例，Big5應該也可以，不過我沒測試過，想測試的人就把文章中一些編碼的參數改成Big5應該就可以了。還有我的環境是Windows XP。</p></b:mainContent>
				<b:extendContent><p>既然這篇要講的是升級問題，當然有個步驟，首先在升級之前，備份的你的資料庫，這點很重要，當你即使照著我的方法還是失敗時，你還有一條退路，而且將資料輸出成sql檔案也是我的升級步驟一。備份資料的方法有三個，如果有裝<a href="http://www.phpmyadmin.net/">phpMyadmin</a>，可以直接用他的匯出功能輸出sql檔案，記得不要只輸出結構，資料也要輸出。另一個方法是用<a href="http://dev.mysql.com/doc/mysql/en/mysqldump.html">mysqldump</a>，檔案在<strong>mysql安裝目錄的bin子目錄</strong>裡面，你必須進入指令列模式（DOS視窗）才可以正確的操作該程式，要備份所有的資料庫，你可以輸入<code>mysqldump --all-databases &gt; all_databases.sql</code>，這樣會把所有的資料都輸出到<strong>all_databases.sql</strong>這個檔案，檔案位置應該就是在<strong>bin</strong>裡面，如果有另外指定就看你指定到哪了。如果只要複製其中幾個資料庫則是用<code>mysqldump --databases db_name1 db_name2 &gt; databases.sql</code>這樣的指令，db_name的部分就看你要匯出哪些資料庫。第三個方法是直接把mysql下的data子目錄的檔案都備份下來，但是這樣並不會有後面需要用的sql檔案，如果你用這個方法備份資料庫，你還是需要用前面兩個方法的其中一個來取得sql檔案。</p>

<p>備份完資料庫，取得sql檔案後，最好先用文字編輯軟體打開他，確定有沒有亂碼，如果你原先的資料不是UTF-8的話，可以趁這個機會用其他程式把sql檔案轉成UTF-8，這個檔案的編碼就是你後面設定mysql要用的編碼了。</p>

<p>接下來就可以安裝MySQL 4.1了，這部分可以用他的安裝檔，或用他的免安裝版都可以，只要確定能執行就可以。安裝完之後，我們要來修改<strong>my.ini</strong>這個檔案，這個檔案有可能在<strong>windows</strong>目錄裡面，也可能在<strong>mysql</strong>目錄裡面，如果不存在的話，你就必須要自己建立一個。如果已經存在的話，用文字編輯軟體打開來應該可以看到一些設定，我們要加設定的地方有四個，分別是<strong>[mysql]</strong>、<strong>[mysqld]</strong>、<strong>[client]</strong>、<strong>[mysqldump]</strong>四個地方，都在裡面加入<code>default-character-set = utf8</code>這個設定，如果沒有的話，你可以簡單建立一個內容如下的my.ini檔案：</p>



<pre><code>[mysqld]
default-character-set = utf8

[mysqldump]
default-character-set = utf8

[mysql]
default-character-set = utf8

[client]
default-character-set = utf8
</code></pre>



<p>檔案是放到windows目錄下比較保險，我自己用無安裝版是要放到那才會讀到，雖然好像可以調整位置，但是我還沒測試成功。OK之後重新啟動mysql，如果是直接安裝升級的話可能會有資料已經存在了，不過選取出來看應該會是亂碼，這時候你可以先手動刪除，或是你用phpMyadmin輸出的sql檔會先把重複的資料庫刪除（有選項可以勾選），那你也可以不用理會它，再來就是最後一步了，把你匯出的sql檔放回去，我是用phpMyAdmin來做這件事，發法是先隨便選一個資料庫（新安裝的也有預建好的test資料庫可以選），然後選擇sql這個選項，下面的<strong>文字檔案的位置</strong>處把你的sql檔案上傳，編碼選正確，然後送出就可以了。另外還可以用mysqldump，指令：<code>mysqldump db_name &lt; database.sql</code>，不過這個方式我沒測試過，而且看說明檔提供的範例指令，看起來都是還原單一資料庫，又或許db_name可以隨便給吧。</p>

<p>如果一切順利，現在還原的資料庫編碼就是正確的了，要確認最好的方法是用phpMyAdmin來檢視，因為他有支援MySQL 4.1的編碼功能，只要沒問題，用他來檢視資料就不會有亂碼。雖然資料沒問題，不過原來的程式還要做修改，<a href="http://www.sixapart.com/movabletype/">MovableType</a>算是很簡單的了，我在一個日本網站有看到詳細的說明和解決辦法，<a href="http://iandeth.dyndns.org/mt/ian/archives/000112.html">iandeth.: Movable Type + MySQL 4.1 を組み合わせると日本語が文字化けする不具合／障害の解決方法:</a>，說明的很詳細，其中解決辦法的部分我想不會日文也可以看的懂，就不多做解釋了（第一個方法只是加一行、不過第二個方法是比較好的解決方法）。</p>

<p>寫了這麼多，基本上不建議貿然升級4.1啦，最後才講好像不好XD。</p></b:extendContent>
			</b:content>
			<b:comments commentCount="1">

				<b:comment commentID="029852" entryID="000154">
					<b:author>
						<b:authorName>agee</b:authorName>
						<b:authorEmail>agee232@gmail.com</b:authorEmail>
						<b:authorUrl>http://tea.ymsh.tp.edu.tw/index.php?blogId=1</b:authorUrl>
					</b:author>
					<b:datetime>
						<b:date>2007-09-19</b:date>
						<b:time>13:56:27</b:time>
					</b:datetime>
					<b:content>
						<b:mainContent><p>因無法發送引用通告,特此通知大大敝人引用:
<a href="http://tea.ymsh.tp.edu.tw/index.php?op=ViewArticle&amp;articleId=1572&amp;blogId=1" rel="nofollow">http://tea.ymsh.tp.edu.tw/index.php?op=ViewArticle&amp;articleId=1572&amp;blogId=1</a></p>
</b:mainContent>
					</b:content>
				</b:comment>

			</b:comments>
			<b:trackbacks trackbackCount="0" trackbackURL="https://othree.net/mt/mt-tb.cgi/152">

			</b:trackbacks>
		</b:entry>
	</b:entries>
</b:blog>