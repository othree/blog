<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>s</b:listType>
			<b:listData listID="000669" baseName="dom-range-ierange-rangy">DOM Range, IERange, rangy</b:listData>

			<b:previous>
				<b:mTitle>Command Line JS Beautifier</b:mTitle>
				<b:mDate>2011-01-28</b:mDate>
				<b:mBase>command-line-js-beautifie</b:mBase>
			</b:previous>


			<b:next>
				<b:mTitle>Gundo.vim</b:mTitle>
				<b:mDate>2011-02-27</b:mDate>
				<b:mBase>gundovim</b:mBase>
			</b:next>

		</b:entriesMeta>
		<b:entry entryID="000669" baseName="dom-range-ierange-rangy">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2011-02-26</b:date>
				<b:time>20:44:02</b:time>
			</b:datetime>
			<b:category>script</b:category>

			<b:CommentsAccepted>0</b:CommentsAccepted>


			<b:PingsAccepted>0</b:PingsAccepted>

			<b:title>DOM Range, IERange, rangy</b:title>
			<b:content>
				<b:summary>有在接觸 JavaScript 編輯器的比較會遇到這問題，就是如何存取、甚至修改使用者選取的文字，按照標準的話，應該是使用 DOM 的 Range ，不過一如往常，IE 不支援，預計是 IE9 才會有正式的支援，而之前的版本則是用他們自己的 TextRange ，基本上，TextRange 這個標準還蠻難懂的（意思就是我也還沒能了解），然後總之就是不好使用，所以就有了 IERange 這個函式庫，利用 TextRange 實作了 W3C 的 DOM Range ，而且發展蠻久了，還蠻可靠。 不過 IERange 還有一個問題沒辦法解決，就是輸入欄位如 input 和 textarea 內，文字選取狀態的存取，現在大部分瀏覽器都是支援 selectionStart 、 selectionEnd 這兩個屬性和 setSelectionRange() ，標準是定在 HTML5 的 text field selections...</b:summary>
				<b:mainContent><p>有在接觸 JavaScript 編輯器的比較會遇到這問題，就是如何存取、甚至修改使用者選取的文字，按照標準的話，應該是使用 <a href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html">DOM 的 Range</a> ，不過一如往常，IE 不支援，預計是 <a href="http://blogs.msdn.com/b/ie/archive/2010/05/11/dom-range.aspx">IE9 才會有正式的支援</a>，而之前的版本則是用他們自己的 <a href="http://msdn.microsoft.com/en-us/library/ms535872.aspx">TextRange</a> ，基本上，TextRange 這個標準還蠻難懂的（意思就是我也還沒能了解），然後總之就是不好使用，所以就有了 <a href="http://code.google.com/p/ierange/">IERange</a> 這個函式庫，利用 TextRange 實作了 W3C 的 DOM Range ，而且發展蠻久了，還蠻可靠。</p>

<p>不過 IERange 還有一個問題沒辦法解決，就是輸入欄位如 input 和 textarea 內，文字選取狀態的存取，現在大部分瀏覽器都是支援 <code>selectionStart</code> 、 <code>selectionEnd</code> 這兩個屬性和 <code>setSelectionRange()</code> ，標準是定在 <a href="http://dev.w3.org/html5/spec/Overview.html#textFieldSelection">HTML5 的 text field selections API</a> 裡面，IE 的話則是要使用上面提到的 TextRange 來存取，而且實際上操作也沒很簡單，所以也有位 <a href="http://stackoverflow.com/users/96100/tim-down">Tim Down</a> 弄了 <a href="http://code.google.com/p/rangyinputs/">rangyinputs</a> 這個 <a href="http://code.google.com/p/rangy/">rangy</a> 的簡化版，專門針對跨瀏覽器、文字輸入框的選取所做的函式庫，也有包好的 jQuery Plugin，我看 Stack Overflow 上不少篇相關的問題都有人推薦 rangy （作者本人的推薦也不少XD），實際上下去並測了一下還沒有遇到什麼問題，雖然功能上沒什麼問題，不過還是有些地方有些可惜，就是它的 API 沒有跟著 HTML 標準，然後沒有文件，所以要怎麼用要自己看原始碼，另外我覺得有一些地方設計似乎不是很好，像是 <code>getSelection()</code> 會傳回 range 物件，但是 <code>setSelection()</code> 卻不能直接把 range 物件送進去，要把選取的開始和結束兩個直分成兩個參數丟進去，不過相較於要跟 TextRange 打交道這檔事，這些缺點根本就是優點啊！</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>
			<b:comments commentCount="0">

			</b:comments>
			<b:trackbacks trackbackCount="0" trackbackURL="https://othree.net/mt/mt-tb.cgi/668">

			</b:trackbacks>
		</b:entry>
	</b:entries>
</b:blog>