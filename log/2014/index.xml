<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>y</b:listType>
			<b:listData listID="2014">2014</b:listData>

			<b:previous>
				<b:mTitle>2013</b:mTitle>
				<b:mDate>2013</b:mDate>
			</b:previous>


		</b:entriesMeta>

		<b:entry entryID="000794" baseName="harukas-300">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-05-02</b:date>
				<b:time>22:12:15</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>大阪新的大樓夜景 HARUKAS 300</b:title>
			<b:content>
				<b:summary> 講到大阪的夜景，我想很多人都知道梅田空中庭園，不過這次關西是第二次去大阪，想說去去不同地方看夜景，剛好看到有人介紹阿倍野HARUKAS大樓，就去看看了，就夜景來說其實我還是比較喜歡梅田的，因為在河邊，不會只是單純的城市夜景，而且有個懸空的電扶梯，搭起來有些提心吊膽，還蠻有趣，本來去 HARUKAS 300 對夜景是沒很期待的，其實也還不差，可以看到新世界地標、道頓崛的唐吉珂德摩天輪和大阪港等等，不過這篇我想說的是 Harukas 300 的規劃和用心程度，目前在我去過的幾個觀景台中是名列前茅的。...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14011095382/" title="Harukas 300 by othree, on Flickr"><img src="//farm3.staticflickr.com/2911/14011095382_9bd7d51bea_b.jpg" width="1024" height="683" alt="Harukas 300" src-1="(max-width: 768px)  //farm3.staticflickr.com/2911/14011095382_9bd7d51bea.jpg 1x, //farm3.staticflickr.com/2911/14011095382_9bd7d51bea_b.jpg 2x" src-2="//farm3.staticflickr.com/2911/14011095382_889642da6a_k.jpg 2x" /></a></p>

<p>講到大阪的夜景，我想很多人都知道<a href="http://www.kuchu-teien.com/tc/index.html">梅田空中庭園</a>，不過這次關西是第二次去大阪，想說去去不同地方看夜景，剛好看到有人<a href="http://happycloud2013.blogspot.tw/2013/12/kintetsu-rail-pass-wide-abeno.html">介紹</a>阿倍野HARUKAS大樓，就去看看了，就夜景來說其實我還是比較喜歡梅田的，因為在河邊，不會只是單純的城市夜景，而且有個懸空的電扶梯，搭起來有些提心吊膽，還蠻有趣，本來去 HARUKAS  300 對夜景是沒很期待的，其實也還不差，可以看到新世界地標、道頓崛的唐吉珂德摩天輪和大阪港等等，不過這篇我想說的是 Harukas 300 的規劃和用心程度，目前在我去過的幾個觀景台中是名列前茅的。</p>
</b:mainContent>
				<b:extendContent><p>阿倍野HARUKAS是今年才完工的，目前日本第一高的大樓（東京鐵塔和天空樹都更高，不過不是大樓），原址就是近鐵百貨和近鐵阿倍野橋站，2008 年開始改建成現在的<a href="http://www.abenoharukas-300.jp/zh/">阿倍野 HARUKAS 大樓</a>，一樣和近鐵阿倍野橋站共構，下層部就是近鐵百貨，從大阪地鐵和 JR 過去都很方便，比去梅田的藍天大樓要簡單方便太多了，我是搭地鐵過去的，車站直接就在大樓下面，不用走長長的地下通道，然後到 2F 買票的地方也很好找，除了找從 2F 到 16F 入口的電梯時走錯方向找不到外，都很順利，接著就搭高速電梯上到位於 60 樓的觀景台 <a href="http://www.abenoharukas-300.jp/observatory/observatory.html">HARUKAS 300</a>，300 是 300 公尺的意思，順便題一下，台北 101 是超過 500 公尺的。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14014292225/" title="Harukas 300 by othree, on Flickr"><img src="//farm8.staticflickr.com/7080/14014292225_2ab9bc0d62_b.jpg" width="1024" height="683" alt="Harukas 300" src-1="(max-width: 768px)  //farm8.staticflickr.com/7080/14014292225_2ab9bc0d62.jpg 1x, //farm8.staticflickr.com/7080/14014292225_2ab9bc0d62_b.jpg 2x" src-2="//farm8.staticflickr.com/7080/14014292225_83a4bea9e5_k.jpg 2x" /></a></p>

<p>電梯的天頂有一塊是透明的，然後他們很巧妙的在電梯井裡面裝了燈飾，還蠻漂亮的，本來想錄影下來不過手機沒操作正確就沒錄到了。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14034287973/" title="Harukas 300 by othree, on Flickr"><img src="//farm3.staticflickr.com/2929/14034287973_551b9a0bff_b.jpg" width="1024" height="683" alt="Harukas 300" src-1="(max-width: 768px)  //farm3.staticflickr.com/2929/14034287973_551b9a0bff.jpg 1x, //farm3.staticflickr.com/2929/14034287973_551b9a0bff_b.jpg 2x" src-2="//farm3.staticflickr.com/2929/14034287973_ffb1d2fcd4_k.jpg 2x" /></a></p>

<p>到達六十樓後我才發現到 HARUKAS  300 很豪氣的用了三層樓，而且是最高的三層，並且是我目前去過看夜景的大樓裡面規劃最好的，六十樓是主要看夜景的地方，叫天上迴廊，五十九樓是出口和商店、五十八樓則是有一個露天的庭園和餐廳，餐廳是室內的，庭園兩邊還有木階梯可以自由坐著，不過因為在戶外所以有點冷，另外 HARUKAS300 並沒有限制不能使用腳架，而且六十樓在入夜後，刻意的沒什麼燈光，只有一些告示的光線，對拍照的人來說是非常棒的一件事，因為可以減少很多花在遮玻璃的反光的時間，如果想要好好拍照，認真看景色的就在這層樓，如果想要休息、吃東西喝飲料就在五十八樓，要離開和購物的在五十九樓，完全都分開不會互相干擾。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14108516893/" title="Harukas 300 by othree, on Flickr"><img src="//farm8.staticflickr.com/7182/14108516893_083cfb34c6_b.jpg" width="1024" height="683" alt="Harukas 300" src-1="(max-width: 768px)  //farm8.staticflickr.com/7182/14108516893_083cfb34c6.jpg 1x, //farm8.staticflickr.com/7182/14108516893_083cfb34c6_b.jpg 2x" src-2="//farm8.staticflickr.com/7182/14108516893_97319597a2_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14034271613/" title="Harukas 300 by othree, on Flickr"><img src="//farm8.staticflickr.com/7334/14034271613_df5fc0edb3_b.jpg" width="1024" height="683" alt="Harukas 300" src-1="(max-width: 768px)  //farm8.staticflickr.com/7334/14034271613_df5fc0edb3.jpg 1x, //farm8.staticflickr.com/7334/14034271613_df5fc0edb3_b.jpg 2x" src-2="//farm8.staticflickr.com/7334/14034271613_db9eb67aa2_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/13991163756/" title="Harukas 300 by othree, on Flickr"><img src="//farm6.staticflickr.com/5088/13991163756_d3de4b82c2_b.jpg" width="1024" height="683" alt="Harukas 300" src-1="(max-width: 768px)  //farm6.staticflickr.com/5088/13991163756_d3de4b82c2.jpg 1x, //farm6.staticflickr.com/5088/13991163756_d3de4b82c2_b.jpg 2x" src-2="//farm6.staticflickr.com/5088/13991163756_6d9e1d5cd6_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14011111502/" title="Harukas 300 by othree, on Flickr"><img src="//farm8.staticflickr.com/7147/14011111502_bbab921ffe_b.jpg" width="1024" height="683" alt="Harukas 300" src-1="(max-width: 768px)  //farm8.staticflickr.com/7147/14011111502_bbab921ffe.jpg 1x, //farm8.staticflickr.com/7147/14011111502_bbab921ffe_b.jpg 2x" src-2="//farm8.staticflickr.com/7147/14011111502_2bf5528b6b_k.jpg 2x" /></a></p>

<p>在貼夜景前還要介紹一下 HARUKAS  300 的吉祥物，叫做阿倍野熊，Abeno Bea（bear），可以在彩虹上走，喜歡吃雲和睡覺，身體會隨著天色變色，還可以和他合照，可惜布娃娃都太大了，不然好想買一隻回家的。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14034275663/" title="Harukas 300 by othree, on Flickr"><img src="//farm6.staticflickr.com/5185/14034275663_bf7cf1429d_b.jpg" width="1024" height="683" alt="Harukas 300" src-1="(max-width: 768px)  //farm6.staticflickr.com/5185/14034275663_bf7cf1429d.jpg 1x, //farm6.staticflickr.com/5185/14034275663_bf7cf1429d_b.jpg 2x" src-2="//farm6.staticflickr.com/5185/14034275663_22e21b5424_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14014767634/" title="Harukas 300 by othree, on Flickr"><img src="//farm6.staticflickr.com/5025/14014767634_7ee6eafebf_b.jpg" width="1024" height="683" alt="Harukas 300" src-1="(max-width: 768px)  //farm6.staticflickr.com/5025/14014767634_7ee6eafebf.jpg 1x, //farm6.staticflickr.com/5025/14014767634_7ee6eafebf_b.jpg 2x" src-2="//farm6.staticflickr.com/5025/14014767634_53ef940141_k.jpg 2x" /></a></p>

<p>最後就來看看 HARUKAS  300 的景吧。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14014288025/" title="Harukas 300 by othree, on Flickr"><img src="//farm8.staticflickr.com/7299/14014288025_5172d41d47_b.jpg" width="1024" height="683" alt="Harukas 300" src-1="(max-width: 768px)  //farm8.staticflickr.com/7299/14014288025_5172d41d47.jpg 1x, //farm8.staticflickr.com/7299/14014288025_5172d41d47_b.jpg 2x" src-2="//farm8.staticflickr.com/7299/14014288025_41e7af7859_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14034281343/" title="Harukas 300 by othree, on Flickr"><img src="//farm8.staticflickr.com/7363/14034281343_f016856f57_b.jpg" width="1024" height="683" alt="Harukas 300" src-1="(max-width: 768px)  //farm8.staticflickr.com/7363/14034281343_f016856f57.jpg 1x, //farm8.staticflickr.com/7363/14034281343_f016856f57_b.jpg 2x" src-2="//farm8.staticflickr.com/7363/14034281343_a597b3434e_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14014281005/" title="Harukas 300 by othree, on Flickr"><img src="//farm8.staticflickr.com/7239/14014281005_3d303b1d3c_b.jpg" width="1024" height="683" alt="Harukas 300" src-1="(max-width: 768px)  //farm8.staticflickr.com/7239/14014281005_3d303b1d3c.jpg 1x, //farm8.staticflickr.com/7239/14014281005_3d303b1d3c_b.jpg 2x" src-2="//farm8.staticflickr.com/7239/14014281005_27355fd63d_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/13991187346/" title="Harukas 300 by othree, on Flickr"><img src="//farm8.staticflickr.com/7276/13991187346_d8609ab7e0_b.jpg" width="683" height="1024" alt="Harukas 300" src-1="(max-width: 768px)  //farm8.staticflickr.com/7276/13991187346_d8609ab7e0.jpg 1x, //farm8.staticflickr.com/7276/13991187346_d8609ab7e0_b.jpg 2x" src-2="//farm8.staticflickr.com/7276/13991187346_a63765ccf4_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14011114892/" title="Harukas 300 by othree, on Flickr"><img src="//farm6.staticflickr.com/5154/14011114892_ffbf60ac55_b.jpg" width="1024" height="683" alt="Harukas 300" src-1="(max-width: 768px)  //farm6.staticflickr.com/5154/14011114892_ffbf60ac55.jpg 1x, //farm6.staticflickr.com/5154/14011114892_ffbf60ac55_b.jpg 2x" src-2="//farm6.staticflickr.com/5154/14011114892_9cc8a81edf_k.jpg 2x" /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/14011113172/" title="Harukas 300 by othree, on Flickr"><img src="//farm8.staticflickr.com/7155/14011113172_7fd6daf712_b.jpg" width="1024" height="683" alt="Harukas 300" src-1="(max-width: 768px)  //farm8.staticflickr.com/7155/14011113172_7fd6daf712.jpg 1x, //farm8.staticflickr.com/7155/14011113172_7fd6daf712_b.jpg 2x" src-2="//farm8.staticflickr.com/7155/14011113172_ec8f34e742_k.jpg 2x" /></a></p>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000793" baseName="web-component-at-osdc">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-04-12</b:date>
				<b:time>23:07:20</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>Web Component at OSDC</b:title>
			<b:content>
				<b:summary>/*A_A*/ 這次 OSDC 講的投影片，另外有兩個地方要補充一下，第一個是我的 Github 上的範例，因為用到 HTML Import 的關係，有安全性限制，一定要開個 HTTP Server，不然會出錯誤，然後我有用 gulp 設定好了，理論上裝好 gulp 就可以在 localhost 把開發用的 HTTP Server 開起來，然後現在的 Chrome Canary 無法跑，還不知道原因，所以請用 Chrome Stable。 第二個是現在的參考資料，很大部份都是參考 HTML5 Rocks 的文章，可以參考我之前介紹 Web Component 的文章最下面，這些文章的內容其實一直有在根據實做更新，所以會發現和 Spec Draft 定義不一樣。...</b:summary>
				<b:mainContent><script async="async" class="speakerdeck-embed" data-id="7b33cc90a36601311a734eb53c3a6292" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js">/*A_A*/</script>

<p>這次 OSDC 講的投影片，另外有兩個地方要補充一下，第一個是我的 Github 上的<a href="https://github.com/othree/web-component-test">範例</a>，因為用到 HTML Import 的關係，有安全性限制，一定要開個 HTTP Server，不然會出錯誤，然後我有用 gulp 設定好了，理論上裝好 gulp 就可以在 localhost 把開發用的 HTTP Server 開起來，然後現在的 Chrome Canary 無法跑，還不知道原因，所以請用 Chrome Stable。</p>

<p>第二個是現在的參考資料，很大部份都是參考 HTML5 Rocks 的文章，可以參考我之前介紹 <a href="https://blog.othree.net/log/2013/11/27/web-component/">Web Component</a> 的文章最下面，這些文章的內容其實一直有在根據實做更新，所以會發現和 Spec Draft 定義不一樣。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000792" baseName="cve-2014-0160">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-04-08</b:date>
				<b:time>23:00:03</b:time>
			</b:datetime>
			<b:category>server</b:category>
			<b:title>OpenSSL 安全性問題 CVE-2014-0160</b:title>
			<b:content>
				<b:summary>今天資安的大新聞就是這個了，OpenSSL 的 新弱點，嚴重程度高到還有一個專站 heartbleed.com （心在流血）。也有人幫忙做了檢測工具可以看看你的網站有沒有在影響範圍內，不過因為弱點是在 OpenSSL 上，所以其實不是只有網站會受影響，總之有問題的看到會像是這樣： 沒問題的話會是： 第一時間有很多大站都中鏢了，像是 github 之類的，不過我剛剛看已經修好了，我的 server 用的是 Ubuntu 12 LTS 就是 apt 更新過後重開就好了，建議是連 key 也重新生就是，更詳細的資訊可以看看 Server Fault 的問答...</b:summary>
				<b:mainContent><p>今天資安的大新聞就是這個了，OpenSSL 的 <a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0160">新弱點</a>，嚴重程度高到還有一個專站 <a href="http://heartbleed.com/">heartbleed.com</a> （心在流血）。也有人幫忙做了<a href="http://filippo.io/Heartbleed/">檢測工具</a>可以看看你的網站有沒有在影響範圍內，不過因為弱點是在 OpenSSL 上，所以其實不是只有網站會受影響，總之有問題的看到會像是這樣：</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/13717637293/" title="CVE-2014-016 Vulnerable by othree, on Flickr"><img src="//farm8.staticflickr.com/7453/13717637293_10e2cde873_b.jpg" width="1024" height="853" alt="CVE-2014-016 Vulnerable" src-1="(max-width: 768px)  //farm8.staticflickr.com/7453/13717637293_10e2cde873.jpg 1x, //farm8.staticflickr.com/7453/13717637293_10e2cde873_b.jpg 2x"  /></a></p>

<p>沒問題的話會是：</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/13717637123/" title="CVE-2014-0160 pass by othree, on Flickr"><img src="//farm8.staticflickr.com/7377/13717637123_3703d23ca2_b.jpg" width="1024" height="555" alt="CVE-2014-0160 pass" src-1="(max-width: 768px)  //farm8.staticflickr.com/7377/13717637123_3703d23ca2.jpg 1x, //farm8.staticflickr.com/7377/13717637123_3703d23ca2_b.jpg 2x"  /></a></p>

<p>第一時間有很多大站都中鏢了，像是 github 之類的，不過我剛剛看已經修好了，我的 server 用的是 Ubuntu 12 LTS 就是 apt 更新過後重開就好了，建議是連 key 也重新生就是，更詳細的資訊可以看看 Server Fault 的<a href="http://serverfault.com/questions/587329/heartbleed-what-is-it-and-what-are-options-to-mitigate-it">問答</a></p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000791" baseName="immediate-in-js">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-03-02</b:date>
				<b:time>13:50:53</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>process.nextTick, setImmediate, setTimeout, requestAnimationFrame</b:title>
			<b:content>
				<b:summary>標題這幾個 API 是感覺功能有些接近的東西，process.nextTick 是 node 的，setImmediate 是微軟提出但是只有 IE 和 node 有實作，setTimeout 是最老牌的，感覺後面給它 0ms 延遲，效果和其他幾個很像，requestAnimationFrame 則是更新畫面作動畫時用的新 API，那細部這幾個 API 有什麼差異呢？ 要繼續之前可能要先了解一下 JavaScript Event Loop，和 Timer 還有瀏覽器更新 UI 的關係，可以參考 John Resig 的 How JavaScript Timers Work 這篇文章，標題那四個 API 除了最後一個 requestAnimationFrame 一定是等到瀏覽器要更新 UI 了才會呼叫到，然後螢幕有個更新頻率，不管怎樣快都不會到千分之一秒叫一次，所以它基本上就是最慢的。...</b:summary>
				<b:mainContent><p>標題這幾個 API 是感覺功能有些接近的東西，<code>process.nextTick</code> 是 node 的，<code>setImmediate</code> 是微軟提出但是只有 IE 和 node 有實作，<code>setTimeout</code> 是最老牌的，感覺後面給它 0ms 延遲，效果和其他幾個很像，<code>requestAnimationFrame</code> 則是更新畫面作動畫時用的新 API，那細部這幾個 API 有什麼差異呢？</p>

<p>要繼續之前可能要先了解一下 JavaScript Event Loop，和 Timer 還有瀏覽器更新 UI 的關係，可以參考 John Resig 的 <a href="http://ejohn.org/blog/how-javascript-timers-work/">How JavaScript Timers Work</a> 這篇文章，標題那四個 API 除了最後一個 requestAnimationFrame 一定是等到瀏覽器要更新 UI 了才會呼叫到，然後螢幕有個更新頻率，不管怎樣快都不會到千分之一秒叫一次，所以它基本上就是最慢的。</p>

<p>那前面三個有什麼差別呢？先來看看 <code>setImmediate</code> 和 <code>setTimeout</code>，根據微軟的<a href="http://ie.microsoft.com/testdrive/Performance/setImmediateSorting/Default.html">說法</a>，因為 setTimeout 有個最小的 4ms 延遲，所以他們設計了 setImmediate 這個完全無延遲的 API 介面出來，不過其實根據 whatwg 的 <a href="http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout">spec</a>，其實要 nesting 的 setTimeout call 才要加上這個 4ms 最小延遲，也就是在 setTimeout 裡面又呼叫 setTimeout 這種狀況，而且要超過五層，會這樣設計是為了避免連續的 setTimout 會造成 UI 卡住，所以我猜是微軟的 setTimeout 實作不正確，而 <a href="https://code.google.com/p/chromium/issues/detail?id=146172">Webkit</a> 和 <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=686201">Firefox</a> 也因此都沒實作它，總之要是正確的作 setTimout，不要連續呼叫超過五層，那他和 setImmediate 應該會是一樣快的，順代一題，微軟那個比較的網頁上就沒有設成 0ms 的 case 可以看在其他瀏覽器上的表現。</p>

<p>最後一個是 <code>process.nextTick</code> 了，這是 node 才有的 API，它和後面三個的作法不太一樣，速度也是所有 API 裡面最快的，實際上它不是把 function 丟到 timer 的 queue 裡面等，而是跟系統說，現在這個 all stack 結束後，立即去執行這些 function，也就是它其實是獨立的 queue，所有丟到 nextTick 裡面的 function 都執行完後，才輪的到 setImmediate 或是其他 UI、系統 IO 的份，而這個 queue 是先進先出，所以其實還蠻好用的，難怪在 node 裡面感覺大家用得很兇，不過要注意。</p>

<p>回頭看一下 setImmediate，其實網路上也是有不少 <a href="https://github.com/NobleJS/setImmediate">polyfill</a> 提供，這些實作都是用 postMessage 來避開 setTimeout 會產生的 4ms 最小延遲，無法使用 postMessage 時會 fallback 到 setTimout。其實會看這些東西是因為 browserify 的關係，因為 <a href="http://browserify.org/">browserify</a> 有說會提供 node 的東西到瀏覽器上，像是 <code>process.nextTick</code>，好奇了一下 <code>setImmediate</code> 有沒有也提供，結果看起來目前是沒有，不過深入研究之後也發現其實不是真的有這個需要就是了。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="1"></b:comments>


		</b:entry>

		<b:entry entryID="000790" baseName="object-fit">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-01-28</b:date>
				<b:time>22:32:51</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>object-fit</b:title>
			<b:content>
				<b:summary>在一些情境下，網站的圖片來源可能無法和版面很契合，例如新聞網站，新聞的照片可能有直的橫的，甚至有不同的寬高比，但是網站的版面配置不可能配合所有的可能性，如果想要有個封面故事，又要個滿版的照片，又或者是提供給 Facebook 的照片，它的縮圖都是正方形的，但是大部分的時候，文章的照片都不會是這種比例，最理想是有個 server 端的程式可以幫忙把圖片轉成想要的大小，例如 Facebook 其實是有個程式來作這件事，包括調整大小、重新壓縮、快取，大概連雲端分散式儲存的部份等等問題都一口氣處理掉了。 如果要純前端處理，其實目前最好用的作法是用 CSS3 Background 的 background-size: cover;，這個樣式會讓標籤的背景圖調整成剛好可以填滿元素大小的程度，當然也考慮好寬高比了，這個方法最主要的缺點在於把圖片從 HTML 文件中抽掉了，在語意上不太好，像是搜尋引擎之類的，對於 &lt;img&gt; 和 CSS 背景的處理應該還是會有差異的，例如 Google 圖片搜尋我就沒印象有找到 CSS 的背景圖過。 要維持 &lt;img&gt; 標籤的存在，又要不管大小和寬高比都可以滿版，在現在是只能用 JavaScript 來輔助，實際上的邏輯也不會太複雜，其實就是比較一下版面的寬高比和圖片的寬高比，然後決定用外框的寬還是高當基準，接著維持圖片的寬高比縮放到計算的大小，定位到讓圖片置中，寫成 jQuery plugin 大概像是下面這樣： $.fn.cover = (selector) -&gt; $(@).each -&gt; $outer = $(@)...</b:summary>
				<b:mainContent><p>在一些情境下，網站的圖片來源可能無法和版面很契合，例如新聞網站，新聞的照片可能有直的橫的，甚至有不同的寬高比，但是網站的版面配置不可能配合所有的可能性，如果想要有個封面故事，又要個滿版的照片，又或者是提供給 Facebook 的照片，它的縮圖都是正方形的，但是大部分的時候，文章的照片都不會是這種比例，最理想是有個 server 端的程式可以幫忙把圖片轉成想要的大小，例如 Facebook 其實是有個程式來作這件事，包括調整大小、重新壓縮、快取，大概連雲端分散式儲存的部份等等問題都一口氣處理掉了。</p>

<p>如果要純前端處理，其實目前最好用的作法是用 <a href="http://www.w3.org/TR/css3-background/#the-background-size">CSS3 Background</a> 的 <code>background-size: cover;</code>，這個樣式會讓標籤的背景圖調整成剛好可以填滿元素大小的程度，當然也考慮好寬高比了，這個方法最主要的缺點在於把圖片從 HTML 文件中抽掉了，在語意上不太好，像是搜尋引擎之類的，對於 <code>&lt;img&gt;</code> 和 CSS 背景的處理應該還是會有差異的，例如 Google 圖片搜尋我就沒印象有找到 CSS 的背景圖過。</p>

<p>要維持 <code>&lt;img&gt;</code> 標籤的存在，又要不管大小和寬高比都可以滿版，在現在是只能用 JavaScript 來輔助，實際上的邏輯也不會太複雜，其實就是比較一下版面的寬高比和圖片的寬高比，然後決定用外框的寬還是高當基準，接著維持圖片的寬高比縮放到計算的大小，定位到讓圖片置中，寫成 jQuery plugin 大概像是下面這樣：</p>

<pre><code>$.fn.cover = (selector) -&gt;
  $(@).each -&gt;
    $outer = $(@)
    ow = $outer.width()
    oh = $outer.height()
    or = ow / oh
    $outer.find(selector).each -&gt;
      $item = $(@)
      iw = $item.width()
      ih = $item.height()
      ir = iw / ih
      if ir &lt; or
        w = ow
        h = ow / ir
        l = 0
        t = (oh - h) / 2
      else
        h = oh
        w = oh * ir
        t = 0
        l = (ow - w) / 2

      $item.css(width: w, height: h, top: t, left: l)
</code></pre>

<p>使用範例：</p>

<pre><code>$('.cell').cover('img')
</code></pre>

<p>不過實際上還要考慮的問題不少，像是執行的時間點，上面這個範例可以運作的時間不只要圖片讀好，有正確的寬高之外，<code>.cell</code> 或是說 <code>$outer</code> 也要在頁面上顯示，有 render 過，才能夠取得它的寬高，整個函式才能夠正確的運作，結果就是訪客其實會看到一瞬間圖片調整好大小位置前的樣子。</p>

<p>用 JavaScript 加上 <code>&lt;img&gt;</code> 這個方案的缺點除了上面說的之外，還有一個是會需要多一層的標籤，不過目前還是很多人會使用這個方案，也有不少 Library 在處理這個問題，像是 <a href="http://soulwire.github.io/fit.js/">fit.js</a>。</p>

<p>這個問題，其實在未來就不存在了，CSS3 Image 裡面有個新的樣式定義就是為了處理這個問題，叫做 <a href="http://dev.w3.org/csswg/css-images-3/#object-fit">object-fit</a>，可以想像成讓 <code>&lt;img&gt;</code> 標籤可以用 background-image 的方式來操控裡面的圖面了，而對應 <code>background-size</code> 的，就是 <code>object-fit</code> 了，未來可以這樣寫 HTML：</p>

<pre><code>&lt;img src="http://blah.com/blah.png" class="cover" width="300" height="300" /&gt;
</code></pre>

<p>配上 CSS：</p>

<pre><code>img.cover {
  object-fit: cover;
}
</code></pre>

<p>就可以同時達到不用多一層標籤，又有實際的 <code>&lt;img&gt;</code>，加上不用 JavaScript，不用考慮 resize 圖片的時機，非常的完美，不過這個新標準目前實作的瀏覽器不多，只有 Chrome 和換成 WebKit 前的 Opera，Opera 的 blog 也有發表過一篇文章介紹這個新屬性：<a href="http://dev.opera.com/articles/view/css3-object-fit-object-position/">CSS3 Object Fit Object Position</a>，裡面也有不少範例可以用 Chrome 開來試試看。</p>

<p>要說有什麼缺點的話，其實還是有的，就是這個 object-fit 不是排版用的，只能用在圖片上，不像 JavaScript library 基本上是什麼元素都可以調整，沒有受限。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000789" baseName="mozilla-monument">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-01-15</b:date>
				<b:time>23:54:32</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>Mozilla Monument</b:title>
			<b:content>
				<b:summary> 參加 Mozilla Summit 時說的紀念碑已經做好了，最近有社群朋友去把每面都拍下來，於是就出現了找名字的風潮，我也找到我的名字所以紀念一下，希望有機會去親眼看看。...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11966368896/" title="othree at Mozilla SF Monument by othree, on Flickr"><img src="//farm6.staticflickr.com/5508/11966368896_b7bfcb2c90_b.jpg" width="1024" height="864" alt="othree at Mozilla SF Monument" src-1="(max-width: 768px)  //farm6.staticflickr.com/5508/11966368896_b7bfcb2c90.jpg 1x, //farm6.staticflickr.com/5508/11966368896_b7bfcb2c90_b.jpg 2x"  /></a></p>

<p>參加 Mozilla Summit 時說的紀念碑已經做好了，最近有社群朋友去把每面都拍下來，於是就出現了找名字的風潮，我也找到我的名字所以紀念一下，希望有機會去親眼看看。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000787" baseName="mixed-content">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-01-08</b:date>
				<b:time>23:45:54</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>Mixed Content</b:title>
			<b:content>
				<b:summary>最近在翻舊文章，檢查連結圖片時，看到幾篇文章有引用 ted.com 的影片，不過現在卻看不到影片了，研究一陣子發現是因為 ted.com 還沒有支援 https，但是我這邊已經是用 https 連線了，這種情況在現在主流瀏覽器包括 Firefox、Chrome、IE ，http 的內容都是會被擋下來的，而且即使站長在 CSP 裡面有加到白名單也沒用（後來想想還算合理，兩邊設計的角度不一樣），被擋下來時其實瀏覽器都會有通知訪客： IE 在開發工具內還會有紅字嚇人： 訪客是可以自己去打開這個限制的，不過這樣做之後，畫面上都還會有警示，像是 Firefox 在網址前面會有個黃色三角形： Chrome 則是會把 https 劃掉： 一度想要用 proxy 方式來處理，不過後來放棄了，ted.com 那邊的 html 內的連結寫法還真是多采多姿啊（遠目）。這問題其實正解就是要 ted.com 去支援安全連線，所以我寫信去跟他們建議了，不過一時半刻也不會解決，所以還是需要個暫時解決的方法，目前想法是寫個說明，就像是這篇文章，然後有引用 ted.com 影片的文章都加上連結到這篇文章，除此之外，除了 embed iframe 外，也加上普通的超連結，這樣訪客也可以不要開例外允許非安全連線內容，而是直接連去 ted.com 看影片，像是 TOSSUG HTML5 分享補充...</b:summary>
				<b:mainContent><p>最近在翻舊文章，檢查連結圖片時，看到幾篇文章有引用 <a href="http://www.ted.com/">ted.com</a> 的影片，不過現在卻看不到影片了，研究一陣子發現是因為 ted.com 還沒有支援 https，但是我這邊已經是用 https 連線了，這種情況在現在主流瀏覽器包括 Firefox、Chrome、IE ，http 的內容都是會被擋下來的，而且即使站長在 CSP 裡面有加到白名單也沒用（後來想想還算合理，兩邊設計的角度不一樣），被擋下來時其實瀏覽器都會有通知訪客：</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11834406594/" title="Firefox block mixed content by othree, on Flickr"><img src="//farm6.staticflickr.com/5511/11834406594_683ec5e488_b.jpg" width="1024" height="783" alt="Firefox block mixed content" src-1="(max-width: 768px)  //farm6.staticflickr.com/5511/11834406594_683ec5e488.jpg 1x, //farm6.staticflickr.com/5511/11834406594_683ec5e488_b.jpg 2x"  /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11834272353/" title="Chrome block mixed content by othree, on Flickr"><img src="//farm8.staticflickr.com/7415/11834272353_88d18f35c4_b.jpg" width="1024" height="783" alt="Chrome block mixed content" src-1="(max-width: 768px)  //farm8.staticflickr.com/7415/11834272353_88d18f35c4.jpg 1x, //farm8.staticflickr.com/7415/11834272353_88d18f35c4_b.jpg 2x"  /></a></p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11820942545/" title="IE block mixed content by othree, on Flickr"><img src="//farm4.staticflickr.com/3696/11820942545_45a9948590_b.jpg" width="1024" height="768" alt="IE block mixed content" src-1="(max-width: 768px)  //farm4.staticflickr.com/3696/11820942545_45a9948590.jpg 1x, //farm4.staticflickr.com/3696/11820942545_45a9948590_b.jpg 2x"  /></a></p>

<p>IE 在開發工具內還會有紅字嚇人：</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11820942315/" title="IE block mixed content by othree, on Flickr"><img src="//farm4.staticflickr.com/3742/11820942315_803c340984_b.jpg" width="930" height="520" alt="IE block mixed content" src-1="(max-width: 768px)  //farm4.staticflickr.com/3742/11820942315_803c340984.jpg 1x, //farm4.staticflickr.com/3742/11820942315_803c340984_b.jpg 2x"  /></a></p>

<p>訪客是可以自己去打開這個限制的，不過這樣做之後，畫面上都還會有警示，像是 Firefox 在網址前面會有個黃色三角形：</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11834407574/" title="Firefox allow mixed content by othree, on Flickr"><img src="//farm8.staticflickr.com/7290/11834407574_99c84f38d3_b.jpg" width="1024" height="783" alt="Firefox allow mixed content" src-1="(max-width: 768px)  //farm8.staticflickr.com/7290/11834407574_99c84f38d3.jpg 1x, //farm8.staticflickr.com/7290/11834407574_99c84f38d3_b.jpg 2x"  /></a></p>

<p>Chrome 則是會把 https 劃掉：</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11834272603/" title="Chrome allow mixed content by othree, on Flickr"><img src="//farm4.staticflickr.com/3771/11834272603_5bf07439ea_b.jpg" width="1024" height="783" alt="Chrome allow mixed content" src-1="(max-width: 768px)  //farm4.staticflickr.com/3771/11834272603_5bf07439ea.jpg 1x, //farm4.staticflickr.com/3771/11834272603_5bf07439ea_b.jpg 2x"  /></a></p>

<p>一度想要用 proxy 方式來處理，不過後來放棄了，ted.com 那邊的 html 內的連結寫法還真是多采多姿啊（遠目）。這問題其實正解就是要 ted.com 去支援安全連線，所以我寫信去跟他們建議了，不過一時半刻也不會解決，所以還是需要個暫時解決的方法，目前想法是寫個說明，就像是這篇文章，然後有引用 ted.com 影片的文章都加上連結到這篇文章，除此之外，除了 embed iframe 外，也加上普通的超連結，這樣訪客也可以不要開例外允許非安全連線內容，而是直接連去 ted.com 看影片，像是 <a href="https://blog.othree.net/log/2010/07/24/tossug-html5-talk/">TOSSUG HTML5 分享補充</a> 這篇文章。</p>

<p>最後附上瀏覽器的說明：</p>

<ul>
<li><a href="https://blog.mozilla.org/tanvi/2013/04/10/mixed-content-blocking-enabled-in-firefox-23/">Firefox Announce</a></li>
<li><a href="https://support.mozilla.org/zh-TW/kb/how-does-content-isnt-secure-affect-my-safety?as=u&amp;utm_source=inproduct">Firefox Help</a></li>
<li><a href="https://groups.google.com/a/chromium.org/forum/#!topic/chromium-dev/-fOQXnJqtWU">Chromium Announce</a></li>
<li><a href="https://support.google.com/chrome/answer/1342714?hl=zh-Hant">Chrome Help</a></li>
</ul>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000786" baseName="more-twitter-cards">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-01-05</b:date>
				<b:time>00:34:06</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>More Twitter Cards</b:title>
			<b:content>
				<b:summary>進入本題前，先岔題到 open graph 一下，就是前兩天才注意到要用 Open Graph protocol 的話，其實在 html 裡面要加上 prefix="og: http://ogp.me/ns#" 的屬性和值： &lt;!DOCTYPE html&gt; &lt;html xmlns="http://www.w3.org/1999/xhtml" lang="zh-tw" prefix="og: http://ogp.me/ns#" &gt; 這個 prefix 屬性其實是 RDFa 來的，所以其實 Open Graph Protocol 也是走 RDFa 系統，Twitter Card 就比較沒走的這麼語意網了。 這篇其實是要說 Twitter Card 的更新，首先是卡片的種類變多了，在一開始只有 Photo、Summary 和...</b:summary>
				<b:mainContent><p>進入本題前，先岔題到 open graph 一下，就是前兩天才注意到要用 <a href="http://opengraphprotocol.org/">Open Graph protocol</a> 的話，其實在 html 裡面要加上 <code>prefix="og: http://ogp.me/ns#"</code> 的屬性和值：</p>

<pre><code>&lt;!DOCTYPE html&gt;
&lt;html
    xmlns="http://www.w3.org/1999/xhtml"
    lang="zh-tw"
    prefix="og: http://ogp.me/ns#"
&gt;
</code></pre>

<p>這個 prefix 屬性其實是 <a href="http://www.w3.org/TR/rdfa-syntax/#s_syntax">RDFa</a> 來的，所以其實 Open Graph Protocol 也是走 RDFa 系統，Twitter Card 就比較沒走的這麼語意網了。</p>

<p>這篇其實是要說 Twitter Card 的更新，首先是卡片的種類變多了，在一開始只有 Photo、Summary 和 Player 三種，現在則又多了 App、Product、Gallery 和 Summary Large Image 四種。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11754350766/" title="Twitter Card by othree, on Flickr"><img src="//farm4.staticflickr.com/3755/11754350766_84fd72a647_b.jpg" width="853" height="1024" alt="Twitter Card" src-1="(max-width: 768px)  //farm4.staticflickr.com/3755/11754350766_84fd72a647.jpg 1x, //farm4.staticflickr.com/3755/11754350766_84fd72a647_b.jpg 2x"  /></a></p>

<p>其中 App 還蠻早就有了，以前如果貼 iTunes Store 連結的話就可以看到，只是一開始沒開放申請的樣子，新的幾種卡片我最想要的其實是 Summary Large Image，這個其實就是最早的 Photo 卡片的樣子，和 Photo 其實只差 description，我一開始會偷用 Photo 卡片來讓文章的圖片比較大，只是他們後來改成不會顯示我提供的文章摘要，直到前幾天才發現有新的 Summary Large Image，完全就是當初的 Photo 卡啊，所以看到就立馬申請下去。</p>

<p>申請的過程和以前也不一樣了，現在是在卡片<a href="https://dev.twitter.com/docs/cards/validation/validator">測試工具</a>那邊先測試，如果驗證格式沒問題就會出現黃色的通知和申請鈕可以按下去，如果是已經申請通過的話就會是綠色的。還有就是測試工具也多了組出 sample code 的功能，還算蠻不錯的，有些比較複雜的卡片格式就可以利用這個工具來搞清楚。</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11754351616/" title="Twitter Card by othree, on Flickr"><img src="//farm3.staticflickr.com/2806/11754351616_f76fa313e2_b.jpg" width="1024" height="694" alt="Twitter Card" src-1="(max-width: 768px)  //farm3.staticflickr.com/2806/11754351616_f76fa313e2.jpg 1x, //farm3.staticflickr.com/2806/11754351616_f76fa313e2_b.jpg 2x" src-2="//farm3.staticflickr.com/2806/11754351616_4d814b31d0_k.jpg 2x" /></a></p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

		<b:entry entryID="000785" baseName="scrolling-performance">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2014-01-01</b:date>
				<b:time>01:49:24</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>Scrolling Performance</b:title>
			<b:content>
				<b:summary>元旦就是要來發篇技術文章的啦。 一直覺得我的 blog 在 scroll 的時候好像不是很順暢，把之前亂加的 parallax 特效拿掉也沒什麼改善，於是週末花了些時間研究了一下，其實要改進捲動時效能可以作的事情大概就是那些，Fixing a parallax scrolling website to run in 60 FPS 這篇文章有整理成條目： Resize、scroll 事件不要在迴圈內綁 Resize、scroll 事件的 handler 用 requestAnimationFrame 來執行 避免 resize 大張圖片 避免 background-size HTML5 Rocks 的 Scrolling Performance 這篇文章則是介紹如何分析網站捲動的效能，也有提到一些上面那篇文章沒講到的項目，像是避免 repaint，避免一些計算比較昂貴的 style 等。另外最近還有一個很有名的...</b:summary>
				<b:mainContent><p>元旦就是要來發篇技術文章的啦。</p>

<p>一直覺得我的 blog 在 scroll 的時候好像不是很順暢，把之前亂加的 parallax 特效拿掉也沒什麼改善，於是週末花了些時間研究了一下，其實要改進捲動時效能可以作的事情大概就是那些，<a href="http://kristerkari.github.io/adventures-in-webkit-land/blog/2013/08/30/fixing-a-parallax-scrolling-website-to-run-in-60-fps/">Fixing a parallax scrolling website to run in 60 FPS</a> 這篇文章有整理成條目：</p>

<ol>
<li>Resize、scroll 事件不要在迴圈內綁</li>
<li>Resize、scroll 事件的 handler 用 requestAnimationFrame 來執行</li>
<li>避免 resize 大張圖片</li>
<li>避免 background-size</li>
</ol>

<p>HTML5 Rocks 的 <a href="http://www.html5rocks.com/en/tutorials/speed/scrolling/">Scrolling Performance</a> 這篇文章則是介紹如何分析網站捲動的效能，也有提到一些上面那篇文章沒講到的項目，像是避免 repaint，避免一些計算比較昂貴的 style 等。另外最近還有一個很有名的 <a href="http://www.thecssninja.com/javascript/pointer-events-60fps">hack</a>，是在捲動時，使用 <code>pointer-events: none;</code> 來避免元件產生 hover 的特效結果增加畫面 painting 的運算。</p>

<p>在講我遇到的問題前想先來說一下下面這張圖怎麼看：</p>

<p><a class="thumbnail" href="http://www.flickr.com/photos/othree/11624929755/" title="Scroll cause image resize by othree, on Flickr"><img src="//farm4.staticflickr.com/3780/11624929755_c33c8aa3f0_b.jpg" width="1024" height="750" alt="Scroll cause image resize" src-1="(max-width: 768px)  //farm4.staticflickr.com/3780/11624929755_c33c8aa3f0.jpg 1x, //farm4.staticflickr.com/3780/11624929755_c33c8aa3f0_b.jpg 2x"  /></a></p>

<p>這張圖是 Chrome 的內建開發工具，目前要作 performance tuning 最好的工具還是 Chrome 開發工具的這個 Timeline 和 Profile，網路上找的到的相關資源也是以 Chrome 為主。這張圖的上半是 framerate 的狀態表示，上面的綠色 bar 代表的是生成畫面前運算執行的時間，所以是越短越好，可以看到那個區塊有兩條橫線，右邊寫了 30fps 和 60fps，意思是執行時間只要能壓在那條線下面，就可以讓頁面有該 frame rate 的表現。下半部就可以拉近去細看不同時間點做了哪些事情，像是圖片 decode、resize、事件的 callback 執行等等都可以分辨。</p>

<p>使用這個開發工具來看到底是那邊計算很花時間，結果發現一直有 image resize 的運算在發生，即使我的圖片都已經全部讀好，頁面從頭卷到尾過，只要從新捲動就會發現 Chrome 又重新把 resize 過的 image 再 resize 一次，後來同事 <a href="http://blog.linmic.net/">Linmic</a> 寫了 test case 來測試各種定義圖片寬高的方法：</p>

<ul>
<li><code>&lt;img&gt;</code> width/height 屬性</li>
<li>CSS 相對長度定義（百分比、em）</li>
<li>CSS 絕對長對定義（px）</li>
<li>CSS 背景圖 + background-size</li>
</ul>

<p>等等，結果發現只有第一個方法圖片不會因為頁面捲動而需要重新 resize，簡單說就是，如果圖片的寬高是用到 CSS 的定義來決定的話，那在 Chrome 下就會有個 bug 是，頁面捲動時，即使圖片尺寸沒有變過，Chrome 還是會重新去 resize。根據目測，這問題在 Firefox 和 Safari 上是沒有的樣子，Chrome 的差距比較大，而且現在因為 responsive design 的關係，文章內的插圖很多寬高都是相對的寬高，像是很多人用的 <a href="http://getbootstrap.com/">Bootstrap</a> 就是這樣，其實影響的範圍蠻廣的，而且找不到方法可以避開，搜尋一下看起來是有一張 <a href="https://code.google.com/p/chromium/issues/detail?id=162514">issue</a>，希望能夠早點修復啊。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>

			<b:comments commentCount="0"></b:comments>


		</b:entry>

	</b:entries>
</b:blog>
