<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>y</b:listType>
			<b:listData listID="2016">2016</b:listData>

			<b:previous>
				<b:mTitle>2015</b:mTitle>
				<b:mDate>2015</b:mDate>
			</b:previous>


		</b:entriesMeta>

		<b:entry entryID="000863" baseName="kyushu-rail">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2016-04-05</b:date>
				<b:time>10:26:33</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>九州鐵道</b:title>
			<b:content>
				<b:summary> 之前去了一趟九州，順便觀察了一下聽說很厲害的九州鐵道（不只是 JR），覺得果然名不虛傳，整個就是設計的比較有質感，不論是普通車還是特急列車都感覺的出來比其他地區的還要搶眼些，這次搭到比較特別的列車是特急KAMOME（特急かもめ），從博多到長崎，還有由布院之森（ゆふいんの森），從久留米到由步院，首先就來看一下特急KAMOME（以下圖多）。...</b:summary>
				<b:mainContent><p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23906413032/" title="九洲JR by othree, on Flickr"><img src="https://farm2.staticflickr.com/1631/23906413032_de2b68a752_b.jpg" width="1024" height="683" alt="九洲JR" srcset="https://farm2.staticflickr.com/1631/23906413032_de2b68a752_b.jpg 1024w, https://farm2.staticflickr.com/1631/23906413032_280443efa8_h.jpg 1600w" /></a></p>

<p>之前去了一趟九州，順便觀察了一下聽說很厲害的九州鐵道（不只是 JR），覺得果然名不虛傳，整個就是設計的比較有質感，不論是普通車還是特急列車都感覺的出來比其他地區的還要搶眼些，這次搭到比較特別的列車是特急KAMOME（特急かもめ），從博多到長崎，還有由布院之森（ゆふいんの森），從久留米到由步院，首先就來看一下特急KAMOME（以下圖多）。</p>
</b:mainContent>
				<b:extendContent><p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23718944270/" title="九洲JR 特急かもめ by othree, on Flickr"><img src="https://farm6.staticflickr.com/5780/23718944270_beb002c64b_b.jpg" width="1024" height="683" alt="九洲JR 特急かもめ" srcset="https://farm6.staticflickr.com/5780/23718944270_beb002c64b_b.jpg 1024w, https://farm6.staticflickr.com/5780/23718944270_74413e4a22_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23906393962/" title="九洲JR 特急かもめ by othree, on Flickr"><img src="https://farm6.staticflickr.com/5827/23906393962_9997bb3aa2_b.jpg" width="1024" height="683" alt="九洲JR 特急かもめ" srcset="https://farm6.staticflickr.com/5827/23906393962_9997bb3aa2_b.jpg 1024w, https://farm6.staticflickr.com/5827/23906393962_06e25b4cd5_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23906401312/" title="九洲JR 特急かもめ by othree, on Flickr"><img src="https://farm2.staticflickr.com/1641/23906401312_b20d4571b3_b.jpg" width="1024" height="683" alt="九洲JR 特急かもめ" srcset="https://farm2.staticflickr.com/1641/23906401312_b20d4571b3_b.jpg 1024w, https://farm2.staticflickr.com/1641/23906401312_bf8ec24ae4_h.jpg 1600w" /></a></p>

<p>特急KAMOME外觀就是以白色為主，非常有現代感，在各個地方出現的印字讓我一直有某種非常熟悉的感覺，想了很久才想到在哪裡看過這種設計。特急KAMOME我們是搭來回兩趟，其中第一趟搭的車內的椅子寫的是 SONIC，不知道為什麼就是。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23646781379/" title="九洲JR 特急かもめ by othree, on Flickr"><img src="https://farm2.staticflickr.com/1640/23646781379_393da49365_b.jpg" width="1024" height="683" alt="九洲JR 特急かもめ" srcset="https://farm2.staticflickr.com/1640/23646781379_393da49365_b.jpg 1024w, https://farm2.staticflickr.com/1640/23646781379_0420cb3b4b_h.jpg 1600w" /></a></p>

<p>車子內裝雖然有點陳舊，不過都是真材實料的。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23988553226/" title="九洲JR 特急かもめ by othree, on Flickr"><img src="https://farm6.staticflickr.com/5639/23988553226_ea044aa6d7_b.jpg" width="1024" height="683" alt="九洲JR 特急かもめ" srcset="https://farm6.staticflickr.com/5639/23988553226_ea044aa6d7_b.jpg 1024w, https://farm6.staticflickr.com/5639/23988553226_319be88a0f_h.jpg 1600w" /></a></p>

<p>真皮座椅：</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24058322106/" title="九州 長崎本線 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5638/24058322106_63dbf8c8a4_b.jpg" width="1024" height="683" alt="九州 長崎本線" srcset="https://farm6.staticflickr.com/5638/24058322106_63dbf8c8a4_b.jpg 1024w, https://farm6.staticflickr.com/5638/24058322106_d0ff9c533e_h.jpg 1600w" /></a></p>

<p>木地板：</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23906410602/" title="九洲JR 特急かもめ by othree, on Flickr"><img src="https://farm2.staticflickr.com/1678/23906410602_16226592ba_b.jpg" width="683" height="1024" alt="九洲JR 特急かもめ" srcset="https://farm2.staticflickr.com/1678/23906410602_16226592ba_b.jpg 683w, https://farm2.staticflickr.com/1678/23906410602_d90d448247_h.jpg 1067w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24014645915/" title="九洲JR 特急かもめ by othree, on Flickr"><img src="https://farm2.staticflickr.com/1631/24014645915_da336a3051_b.jpg" width="1024" height="683" alt="九洲JR 特急かもめ" srcset="https://farm2.staticflickr.com/1631/24014645915_da336a3051_b.jpg 1024w, https://farm2.staticflickr.com/1631/24014645915_a3e485e7cf_h.jpg 1600w" /></a></p>

<p>另外長崎本線有一段是靠海的，往長崎方向是左邊，往博多則是右邊，有機會可以順便看看海景：</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23456159344/" title="九州 長崎本線 by othree, on Flickr"><img src="https://farm2.staticflickr.com/1458/23456159344_8c6158660f_b.jpg" width="1024" height="683" alt="九州 長崎本線" srcset="https://farm2.staticflickr.com/1458/23456159344_8c6158660f_b.jpg 1024w, https://farm2.staticflickr.com/1458/23456159344_33243744e9_h.jpg 1600w" /></a></p>

<p>九州新幹線，布座椅配上綠色內裝，比較特別的是座椅上還有盲人點字的設計，方便視障朋友找座位，之前倒是沒看過這個設計，覺得這個位置挑的很棒。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23788722920/" title="九州 新幹線 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5692/23788722920_3cde4f90cf_b.jpg" width="1024" height="683" alt="九州 新幹線" srcset="https://farm6.staticflickr.com/5692/23788722920_3cde4f90cf_b.jpg 1024w, https://farm6.staticflickr.com/5692/23788722920_63a175f794_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24058308566/" title="九州 新幹線 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5697/24058308566_22615f8195_b.jpg" width="1024" height="683" alt="九州 新幹線" srcset="https://farm6.staticflickr.com/5697/24058308566_22615f8195_b.jpg 1024w, https://farm6.staticflickr.com/5697/24058308566_c0dee8c1f8_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23457601623/" title="九州 新幹線 by othree, on Flickr"><img src="https://farm2.staticflickr.com/1448/23457601623_206bdb70bd_b.jpg" width="1024" height="683" alt="九州 新幹線" srcset="https://farm2.staticflickr.com/1448/23457601623_206bdb70bd_b.jpg 1024w, https://farm2.staticflickr.com/1448/23457601623_25f74d39c1_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23457600323/" title="九州 新幹線 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5816/23457600323_c31211338e_b.jpg" width="1024" height="683" alt="九州 新幹線" srcset="https://farm6.staticflickr.com/5816/23457600323_c31211338e_b.jpg 1024w, https://farm6.staticflickr.com/5816/23457600323_8bbbceb5f3_h.jpg 1600w" /></a></p>

<p>除了 JR 的部分，九州還有為數不少的路面電車，這次去的長崎和熊本都有</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24008994426/" title="長崎 by othree, on Flickr"><img src="https://farm2.staticflickr.com/1554/24008994426_4b877cdfa0_b.jpg" width="1024" height="683" alt="長崎" srcset="https://farm2.staticflickr.com/1554/24008994426_4b877cdfa0_b.jpg 1024w, https://farm2.staticflickr.com/1554/24008994426_410b41f87d_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23952525871/" title="長崎 路面電車 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5730/23952525871_c42c6232e7_b.jpg" width="1024" height="683" alt="長崎 路面電車" srcset="https://farm6.staticflickr.com/5730/23952525871_c42c6232e7_b.jpg 1024w, https://farm6.staticflickr.com/5730/23952525871_5062eacc1d_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23788692160/" title="九州 熊本 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5703/23788692160_e190c2b75c_b.jpg" width="1024" height="683" alt="九州 熊本" srcset="https://farm6.staticflickr.com/5703/23788692160_e190c2b75c_b.jpg 1024w, https://farm6.staticflickr.com/5703/23788692160_b43fc5642c_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24084357925/" title="九州 熊本 by othree, on Flickr"><img src="https://farm2.staticflickr.com/1703/24084357925_56b4d5433b_b.jpg" width="1024" height="683" alt="九州 熊本" srcset="https://farm2.staticflickr.com/1703/24084357925_56b4d5433b_b.jpg 1024w, https://farm2.staticflickr.com/1703/24084357925_360dcc09c7_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24084356355/" title="九州 熊本 by othree, on Flickr"><img src="https://farm2.staticflickr.com/1710/24084356355_54eb2c173e_b.jpg" width="1024" height="683" alt="九州 熊本" srcset="https://farm2.staticflickr.com/1710/24084356355_54eb2c173e_b.jpg 1024w, https://farm2.staticflickr.com/1710/24084356355_93b3839502_h.jpg 1600w" /></a></p>

<p>其中熊本的列車變化比較大，每一台的個性也比較鮮明，有一些就像上面那台一樣很新很漂亮，有些則是超舊的車體，甚至還有陳年木地板的。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23718117279/" title="九州 熊本 by othree, on Flickr"><img src="https://farm2.staticflickr.com/1703/23718117279_ee4b6870fc_b.jpg" width="1024" height="683" alt="九州 熊本" srcset="https://farm2.staticflickr.com/1703/23718117279_ee4b6870fc_b.jpg 1024w, https://farm2.staticflickr.com/1703/23718117279_29b5afda2f_h.jpg 1600w" /></a></p>

<p>最後就要來介紹由布院之森，這台列車則是觀光列車，和前面介紹的特急KAMOME有著根本上的用途差異，特急KAMOME畢竟還是通勤列車，由布院之森則是以觀光休閒為目的的，所以整台車從外觀就和常見的火車造型差異不小。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23987196642/" title="九州 由布院之森 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5754/23987196642_220dc2b279_b.jpg" width="1024" height="683" alt="九州 由布院之森" srcset="https://farm6.staticflickr.com/5754/23987196642_220dc2b279_b.jpg 1024w, https://farm6.staticflickr.com/5754/23987196642_bf7fa6af17_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24012702821/" title="九州 由布院之森 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5754/24012702821_5594b7d6b0_b.jpg" width="1024" height="683" alt="九州 由布院之森" srcset="https://farm6.staticflickr.com/5754/24012702821_5594b7d6b0_b.jpg 1024w, https://farm6.staticflickr.com/5754/24012702821_bdf13d82ca_h.jpg 1600w" /></a></p>

<p>車內空間很特別。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23799654450/" title="九州 由布院之森 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5749/23799654450_b1b73e9547_b.jpg" width="1024" height="683" alt="九州 由布院之森" srcset="https://farm6.staticflickr.com/5749/23799654450_b1b73e9547_b.jpg 1024w, https://farm6.staticflickr.com/5749/23799654450_48b6882f10_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23987232252/" title="九州 由布院之森 by othree, on Flickr"><img src="https://farm2.staticflickr.com/1509/23987232252_7e2b7e5035_b.jpg" width="1024" height="683" alt="九州 由布院之森" srcset="https://farm2.staticflickr.com/1509/23987232252_7e2b7e5035_b.jpg 1024w, https://farm2.staticflickr.com/1509/23987232252_09825bf3f3_h.jpg 1600w" /></a></p>

<p>還有賣店，有不少土特產可以買，還有紀念章可以蓋：</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24012722431/" title="九州 由布院之森 by othree, on Flickr"><img src="https://farm2.staticflickr.com/1605/24012722431_79ba0f25a1_b.jpg" width="1024" height="683" alt="九州 由布院之森, " srcset="https://farm2.staticflickr.com/1605/24012722431_79ba0f25a1_b.jpg 1024w, https://farm2.staticflickr.com/1605/24012722431_1df0a49769_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24069223656/" title="九州 由布院之森 by othree, on Flickr"><img src="https://farm2.staticflickr.com/1521/24069223656_f2b13327f4_b.jpg" width="683" height="1024" alt="九州 由布院之森" srcset="https://farm2.staticflickr.com/1521/24069223656_f2b13327f4_b.jpg 683w, https://farm2.staticflickr.com/1521/24069223656_bc8e098ad2_h.jpg 1067w" /></a></p>

<p>然後其實由布院之森不只一種車型，總共有六台，基本上有兩種車型，而且內裝也有不一樣的版本。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24095321785/" title="九州 由布院之森 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5724/24095321785_6fd9cd73a1_b.jpg" width="1024" height="683" alt="九州 由布院之森, " srcset="https://farm6.staticflickr.com/5724/24095321785_6fd9cd73a1_b.jpg 1024w, https://farm6.staticflickr.com/5724/24095321785_e4c39ffda1_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24095322415/" title="九州 由布院之森 by othree, on Flickr"><img src="https://farm2.staticflickr.com/1587/24095322415_4abaaeaeeb_b.jpg" width="1024" height="683" alt="九州 由布院之森, " srcset="https://farm2.staticflickr.com/1587/24095322415_4abaaeaeeb_b.jpg 1024w, https://farm2.staticflickr.com/1587/24095322415_a5ea0d25b8_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24008890372/" title="九州 由布院之森 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5784/24008890372_f189e97802_b.jpg" width="1024" height="683" alt="九州 由布院之森" srcset="https://farm6.staticflickr.com/5784/24008890372_f189e97802_b.jpg 1024w, https://farm6.staticflickr.com/5784/24008890372_a113e25f93_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23749193849/" title="九州 由布院之森 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5739/23749193849_d1b53ec5a2_b.jpg" width="1024" height="683" alt="九州 由布院之森" srcset="https://farm6.staticflickr.com/5739/23749193849_d1b53ec5a2_b.jpg 1024w, https://farm6.staticflickr.com/5739/23749193849_a77eadabca_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24034370801/" title="九州 由布院之森 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5659/24034370801_68f1077939_b.jpg" width="1024" height="683" alt="九州 由布院之森" srcset="https://farm6.staticflickr.com/5659/24034370801_68f1077939_b.jpg 1024w, https://farm6.staticflickr.com/5659/24034370801_301fee0208_h.jpg 1600w" /></a></p>

<p>另外附贈一下目前最高等級的九州七星號列車的專屬車站。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23467059704/" title="九州 由布院之森 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5799/23467059704_8f5a0f5d87_b.jpg" width="1024" height="683" alt="九州 由布院之森" srcset="https://farm6.staticflickr.com/5799/23467059704_8f5a0f5d87_b.jpg 1024w, https://farm6.staticflickr.com/5799/23467059704_b6b747371a_h.jpg 1600w" /></a></p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24095295965/" title="九州 由布院之森 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5669/24095295965_bb64de8432_b.jpg" width="1024" height="683" alt="九州 由布院之森" srcset="https://farm6.staticflickr.com/5669/24095295965_bb64de8432_b.jpg 1024w, https://farm6.staticflickr.com/5669/24095295965_61b44d82eb_h.jpg 1600w" /></a></p>

<p>前面有提到，九州 JR 的列車一些設計讓我覺得很熟悉，其實連一些普通車也是，想了很久，才終於想到，原來是 GUNPLA 水貼貼好後所呈現的風格，順便提供一張範例：</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/78411572@N03/8331709839/" title="RX-93 ν-Gundam　Ver.Ka by Tehu O (てふ男), on Flickr"><img src="https://farm9.staticflickr.com/8362/8331709839_77cbde26f6_b.jpg" width="1024" height="683" alt="RX-93 ν-Gundam　Ver.Ka, " srcset="https://farm9.staticflickr.com/8362/8331709839_77cbde26f6_b.jpg 1024w" /></a></p>

<p>後來經朋友告知才知道九州 JR 主要的設計顧問是水戸岡鋭治，於是我就苦苦搜尋他是否有喜歡 GUNDAM 或是 GUNPLA 的訊息，結果意外的困難，顯然是個隱性阿宅，不過我最後還是找到一條有利的線索：</p>

<blockquote class="twitter-tweet" data-lang="zh-tw"><p lang="ja" dir="ltr">超潜入リアルスコープで鉄道デザイナーの水戸岡鋭治氏がデザインしたラッピング新幹線の紹介がされていました　しかし、水戸岡氏の事務所にあった等身大ガンダムの方が気になる・・・</p>-- Q10＠はぐれメタル (@Q_points) <a href="https://twitter.com/Q_points/status/452408891175751680">2014年4月5日</a></blockquote>

<script async="async" src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>大概簡單翻譯一下就是這位仁兄去了一趟水戸岡鋭治的事務所，發現有台等身大鋼彈，讓他好不在意～～</p>

<p>最後的最後就附上九州 JR 的吉祥物 KURO 吧。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24034362611/" title="九州 JR KURO by othree, on Flickr"><img src="https://farm2.staticflickr.com/1591/24034362611_2564c66b8a_b.jpg" width="1024" height="683" alt="九州 JR KURO" srcset="https://farm2.staticflickr.com/1591/24034362611_2564c66b8a_b.jpg 1024w, https://farm2.staticflickr.com/1591/24034362611_582caa91f6_h.jpg 1600w" /></a></p>
</b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000862" baseName="brotli-gzip-alt">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2016-03-21</b:date>
				<b:time>13:43:51</b:time>
			</b:datetime>
			<b:category>server</b:category>
			<b:title>brotli, gzip 的替代格式</b:title>
			<b:content>
				<b:summary> 最近幫 blog 做了不少的調整，最近會慢慢整理放上來，其中的第一個修改就是支援 brotli 了，brotli 是 Google 繼 Zopfli 之後，又一個針對網路傳輸做的貢獻，兩者都是用瑞士的麵包來命名，Zopfli 是 2013 年 2 月發佈，Brotli 是在 2015 年 9 月發佈的，不過直到最近才有瀏覽器支援，最先支援的是 Firefox，接著才是 Google 的 Chrome，預計版本號 50 時會支援，brotli 在發表時就同時發表一份測試數據了，顯示出它可以讓文件檔案更小約 20%，但是加解密的速度還是和 gzip 差不多，相信對於行動裝置的耗能也不會差異太大，不過對大檔案的壓縮效率就不一定比較好了，基本上非常適合拿來壓縮一般網站傳輸的 HTML/CSS/JS 之類的檔案。...</b:summary>
				<b:mainContent><p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23998562432/" title="湯布院 by othree, on Flickr"><img src="https://farm2.staticflickr.com/1692/23998562432_ec46795cd9_b.jpg" width="1024" height="683" alt="湯布院, " srcset="https://farm2.staticflickr.com/1692/23998562432_ec46795cd9_b.jpg 1024w, https://farm2.staticflickr.com/1692/23998562432_d3f328fdaf_h.jpg 1600w" /></a></p>

<p>最近幫 blog 做了不少的調整，最近會慢慢整理放上來，其中的第一個修改就是支援 <a href="https://github.com/google/brotli">brotli</a> 了，brotli 是 Google 繼 <a href="https://github.com/google/zopfli">Zopfli</a> 之後，又一個針對網路傳輸做的貢獻，兩者都是用瑞士的麵包來命名，Zopfli 是 <a href="http://google-opensource.blogspot.tw/2013/02/compress-data-more-densely-with-zopfli.html">2013 年 2 月發佈</a>，Brotli 是在 <a href="http://google-opensource.blogspot.tw/2015/09/introducing-brotli-new-compression.html">2015 年 9 月發佈</a>的，不過直到最近才有瀏覽器支援，最先支援的是 Firefox，接著才是 Google 的 Chrome，預計版本號 50 時會支援，brotli 在發表時就同時發表一份<a href="http://www.gstatic.com/b/brotlidocs/brotli-2015-09-22.pdf">測試數據</a>了，顯示出它可以讓文件檔案更小約 20%，但是加解密的速度還是和 gzip 差不多，相信對於行動裝置的耗能也不會差異太大，不過對大檔案的壓縮效率就不一定比較好了，基本上非常適合拿來壓縮一般網站傳輸的 HTML/CSS/JS 之類的檔案。</p>
</b:mainContent>
				<b:extendContent><p>支援 brotli 格式的瀏覽器會使用 HTTP 協定跟 server 端溝通，送出的 header 會有：</p>

<pre><code>Accept-Encoding: br
</code></pre>

<p>一般瀏覽器都已經支援 gzip 和 deflate 很久了，所以像是 Firefox 會送出：</p>

<pre><code>Accept-Encoding: gzip, deflate, br
</code></pre>

<p>Server 端基本上會自動針對這些資訊作判斷來決定要回傳用什麼格式壓縮的內容，也可以不壓縮，例如已經最佳化過的圖片，通常就不會再次壓縮，因為壓縮效益會很差，反而還要多花 CPU 去解壓縮，得不償失，以前 Apache2 在支援 deflate 格式的時候，用的是內建的 <a href="http://httpd.apache.org/docs/2.0/mod/mod_deflate.html">mod_deflate</a>，只要在設定寫好哪些檔案要用 deflate 壓縮，Apache 就會自己處理好跟瀏覽器溝通的部分，不過目前並沒有 mod_brotli 之類的東西可以用，所以 Apache2 要全面支援還有些問題，其中目前比較可行的是採用預先壓縮好的靜態檔案加上 rewrite 來<a href="https://lyncd.com/2015/11/brotli-support-apache/">支援</a>：</p>

<pre><code>&lt;Files *.js.br&gt;
  AddType "text/javascript" .br
  AddEncoding br .br
&lt;/Files&gt;
&lt;Files *.css.br&gt;
  AddType "text/css" .br
  AddEncoding br .br
&lt;/Files&gt;

RewriteEngine On

RewriteCond %{HTTP:Accept-Encoding} br
RewriteCond %{REQUEST_FILENAME}.br -f
RewriteRule ^(.*)$ $1.br [L]

RewriteCond %{HTTP:Accept-Encoding} gzip
RewriteCond %{REQUEST_FILENAME}.gz -f
RewriteRule ^(.*)$ $1.gz [L]
</code></pre>

<p>當然這種方法就只能針對純靜態檔案，對於 PHP 之類動態產生的內容就無法處理，可喜的是我有看到 Jim Jagielski 有打算 <a href="http://mail-archives.apache.org/mod_mbox/httpd-users/201601.mbox/%3C549EBED9-2E3F-43CC-BDED-198B8ED4E257@jaguNET.com%3E">實做</a> Apache 支援了，只可惜我等不下去，就把我的 web server 重灌（brotli 需要 64 位元作業系統）順便把 Apache 換成 nginx，nginx 上目前有兩個 brotli module，一個是 <a href="https://github.com/google/ngx_brotli">Google 的</a>，另外一個是 <a href="https://github.com/cloudflare/ngx_brotli_module">CloudFlare 的</a>，我挑的是 Google 的，不過現在覺得應該先試試看 CloudFlare 的才對，Google 的 ngx_brotli 是 depend on <a href="https://github.com/bagder/libbrotli">libbrotli</a> 的，libbrotli 很有趣，他是 cURL 的作者 <a href="https://daniel.haxx.se/">Daniel Stenberg</a> 去弄起來的，同時也是 Mozilla 的員工（不是 Google），然後 Google 的 ngx_brotli 卻是引用他的 lib，而不是去找自己的 brotli 專案下手，不知道這中間到底是怎麼回事，不過現在應該是快要<a href="https://github.com/google/brotli/issues/326">整</a><a href="https://github.com/google/brotli/issues/332">併</a>起來了。</p>

<p>CloudFlare 的 <a href="https://github.com/cloudflare/ngx_brotli_module">ngx_brotli_module</a> 則是直接把 brotli encoder 的程式碼放進去，不用 libbrotli，不過也不是沒有缺點，首先就是它只有 encoder，不能解壓 brotli 格式的 request body，再來是支援的設定比較少，Google 的可以設定的項目比較多，和 gzip 的相當接近，而且提供了 <code>brotli_static</code> 這個設定可以讓 nginx 自己去找看看有沒有預先壓縮好的 <code>br</code> 檔案，就像是上面 Apache 用的設定做的事情。我目前對於一般靜態的 css, js 檔案也有使用這個方法來節省 CPU 和降低 request 的反應時間。</p>

<p>結果當然是蠻不錯的，這邊之前是用 bootstrap 這個 css framework，壓縮前的 <code>bootstrap.min.css</code> 有 98.9KB，gzip 後是 19.9KB，用 zopfli 約是 15KB，用 brotli 可以再降低到 14.68KB，用的都是預設的壓縮密度，目前改用 Yahoo 的 <a href="http://purecss.io/">pure.css</a>，單看某一頁的 HTML + CSS + JS，資料量總共約 57.8 KB，使用 brotli 後，和 gzip(zopfli) 比可以再節省傳輸量到 25% 左右。</p>

<p>最後補充一下 <a href="https://www.iispeed.com/pagespeed/products/iisbrotli">IIS 也有支援</a> 了，這篇文章還有 Alexa 前一萬名網站的檔案下去用 brotli 壓縮的結果比較。</p>
</b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000859" baseName="device-pixel-ratio-header">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2016-02-28</b:date>
				<b:time>14:34:04</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>Device Pixel Ratio Header</b:title>
			<b:content>
				<b:summary>之前文章有介紹過 DPR（Device Pixel Ratio），不過當時只能透過 JavaScript 在 client 端存取，如果 server 端要知道 client 端的 DPR 至少得要來回交換一次資訊，在那個時候就有想過應該之後會有新的標準來負責處理這個問題，而最近終於看到標準的草案了，叫做 HTTP Client Hints，照字面的意思，這個 HTTP 擴充標準不是只有 DPR，而是提供 client 端的一些資訊，目前包括了： DPR width viewport-width downlink 其中 DPR 就是 device pixel ratio；viewport-width 就和以前介紹過的 viewport width 一樣；width 比較特別，是實際希望的 resource 寬度，而不是真的屬於 device...</b:summary>
				<b:mainContent><p>之前<a href="https://blog.othree.net/log/2012/10/28/device-pixel-ratio/">文章</a>有介紹過 DPR（Device Pixel Ratio），不過當時只能透過 JavaScript 在 client 端存取，如果 server 端要知道 client 端的 DPR 至少得要來回交換一次資訊，在那個時候就有想過應該之後會有新的標準來負責處理這個問題，而最近終於看到標準的草案了，叫做 <a href="http://httpwg.org/http-extensions/client-hints.html">HTTP Client Hints</a>，照字面的意思，這個 HTTP 擴充標準不是只有 DPR，而是提供 client 端的一些資訊，目前包括了：</p>

<ul>
<li>DPR</li>
<li>width</li>
<li>viewport-width</li>
<li>downlink</li>
</ul>

<p>其中 <code>DPR</code> 就是 device pixel ratio；<code>viewport-width</code> 就和以前介紹過的 viewport width 一樣；<code>width</code> 比較特別，是實際希望的 resource 寬度，而不是真的屬於 device 的資訊，例如圖片在網頁內是 160px，裝置的 DPR 是 2，<code>width</code> 就是 160×2 = 320px；最後一個 <code>downlink</code> 則是以前一直很難取得的網路速度，以前最大的限制在於不管是 client 端還是 server 端都很難取得實際的網路速度，雖然可以用 JavaScript 下載檔案算時間來取得素質，但是這樣的作法其實有個兩難的問題，一方面問題是如果檔案大小，那取得的數字會很不準確，另一方面問題是如果檔案太大，那必然就是浪費時間和網路頻寬，更不用說很多地方沒有吃到飽方案可以用，這樣的作法應該不會太受歡迎，甚至如果不測速度，搞不好都已經把網頁讀好了。現在把這個資訊的提供者更往上一層，改成由瀏覽器提供，瀏覽器就可以跟作業系統作溝通，就比較有機會不用先測速就拿到可以參考的網路速度。這些 Header 傳輸的時候都不用附上單位，只有數字，其中 downlink 的單位是 Mbps，而規範所希望瀏覽器提供的 downlink 數字是參考 <a href="https://w3c.github.io/netinfo/#downlinkmax-attribute">Network Information API</a> 這份 API 裡面整理的，主要連線方法的理論速度上限，例如 GSM 就是 0.01、LTE 是 100﹑wifi 802.11g 是 54，本來是想說這個數字是看瀏覽器自己決定，不只根據連線的方式，還會看實際的傳輸數字或是使用者偏好，例如他可能使用 LTE 但是因為不是吃到飽，所以希望把速度報低一點之類的。</p>

<p>Downlink 其實會比預期的還要有用，除了可以根據網路速度決定回傳的圖片大小外，還可以根據 downlink 大小來決定要回傳的 CSS，實際上使用可能像是，網路慢的時候就給出比較輕量的 CSS 回去給 client 端，用不一樣的版面呈現給使用者，有點像是 Google 的 <a href="https://www.ampproject.org/">Accelerated Mobile Pages Project</a>  所做的。</p>

<p>Client hint header 是個需要 opt-in 的擴充功能，就是預設是沒開的，那要怎麼開啟呢，就是在網頁 document 的 header 加上 <code>Accept-CH</code>：</p>

<pre><code>Accept-CH: "DPR, Downlink"
</code></pre>

<p>或是加上 meta tag</p>

<pre><code>&lt;meta http-equiv="Accept-CH" content="DPR, Width, Viewport-Width"&gt;
</code></pre>

<p>其中 equiv 是 equivalent 意思，就是和 HTTP header 等效的意思，透過這個 header 跟瀏覽器說 server 端可以接收 client hint 資訊，然後支援的瀏覽器就會在後續，這個網頁所需要用到的其它資源，像是 js, css, 圖片等等的 request 都加上這些資訊，這個溝通過程其實就是使用已經很久的機制： <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Content_negotiation">HTTP content negotiation</a>，用的 header 也是 <code>Accept</code> 開頭的，目前已經支援的還只有 Chrome，而且要 46 版以後，其他幾個瀏覽器大多都還在討論要不要支援，Firefox 是有一些<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=935216">進度</a>。</p>

<p>這樣的設計其實有點先進，不完全是褒意，因為這意味著要 server 端，負責提供圖片的服務器，收到 request 後去看 DPR 或是 width 之類的資訊再來挑選要回傳哪一張圖片回去，而通常提供圖片靜態檔案的服務都不太有邏輯處理，大部分就是簡單的 HTTP server，只看靜態檔案，有就傳檔案回去，沒有就回傳 404，相信之後是會有些 module 或是設定的方法讓 HTTP server 可以把這部分直接處理掉，不過一些規模比較大的網站，如果有用上 CDN 的，可能就沒法直接用上這功能，還要等看有沒有 CDN 廠商支援。</p>

<p>Client hint 目前看來會是 responsive image 未來的一個主要解法，和 media query 相比其實有兩個很大的差異，第一個是 media query 是馬上（且隨時）發生效果，和 HTTP request 是無關的，所以一開始下載下來的網頁就會發生效果，但是 client hint 要透過第一個 HTML document 本身的 request 進行溝通，意味著 HTML document 本身的 request 是不會收到 client hint。第二個就是 media query 是隨時發生作用的，即使在網頁完整讀取下來後，還是有可能因為使用者造成的 client 環境變化，而讓瀏覽器去多下載一份檔案，最常見的情形就是調整視窗大小，在手機上可能就是轉直轉橫造成 viewport 寬度變化，甚至在 Mac 如果外接普通螢幕，拖拉瀏覽器視窗到不同螢幕也會造成影響，如果這些變化剛好符合設定的 media query，DPR 從 1 變成 2，就會讓瀏覽器又去下載了一張 DPR 不同的圖片，這類狀況在網路頻寬有限的環境下實在不是好事，而用 client hint header 的話就完全不會有這種狀況了，就只會有一開始帶著 Client Hint 去抓下來的那個檔案。</p>

<p>不過 Client Hint 也不是完全沒有副作用，目前最大的問題就是這幾個新 header 都不列在 <a href="https://fetch.spec.whatwg.org/#simple-header">simple headers</a> 裡面，所以在做 CORS request 的時候，本來不用 preflight request 的都會變成需要 preflight request 了，這個問題其實現在還在討論，因為其實有很多類似的新 header 都會造成一樣的問題，像是 CSP、Server-Sent Events 裡面的 Event-ID，主要是這麼多 Header 進去，就不 simple 了，而且照最近標準發展的狀況來看，這份 simple headers 的清單很難固定不變，有興趣的可以跟一下<a href="https://github.com/whatwg/fetch/issues/52">討論</a>。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000858" baseName="how-to-reduce-pdf-size">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2016-02-06</b:date>
				<b:time>10:10:15</b:time>
			</b:datetime>
			<b:category>software</b:category>
			<b:title>How to Reduce PDF Size and Keep Text</b:title>
			<b:content>
				<b:summary>Requirement Small size of PDF file generated from PSD, with real text(for accessibility) and good image quality. Expect Expect the PDF file size is a little bit larger than JPG file. Issue Use save as and choose Photoshop PDF will...</b:summary>
				<b:mainContent><h4>Requirement</h4>

<p>Small size of PDF file generated from PSD, with real text(for accessibility) and good image quality.</p>

<h4>Expect</h4>

<p>Expect the PDF file size is a little bit larger than JPG file.</p>

<h4>Issue</h4>

<p>Use <strong>save as</strong> and choose <strong>Photoshop PDF</strong> will generate large PDF. But save as JPG/PNG is much smaller. Test file spec:</p>

<ul>
<li>Page Size: 210mm*297mm (A4)</li>
<li>Resolution: 1240px*1754px</li>
<li>Fonts: 2 English font</li>
</ul>

<p>Sizes:</p>

<table>
<thead>
  <tr>
    <th>Format</th>
    <th>Option</th>
    <th>Size</th>
  </tr>
</thead>
<tbody>
  <tr>
    <td>PSD</td>
    <td></td>
    <td>79.7MB</td>
  </tr>
  <tr>
    <td>PNG</td>
    <td></td>
    <td>&#160;1.2MB</td>
  </tr>
  <tr>
    <td>JPG</td>
    <td>q: 100</td>
    <td>&#160;0.6MB</td>
  </tr>
  <tr>
    <td>PDF</td>
    <td>default</td>
    <td>&#160;7.0MB</td>
  </tr>
</tbody>
</table>

<p>File transformed on Adobe CC 2016 Jan </p>

<p>Tried several methods to reduce the file size includes:</p>

<ul>
<li>Remove unused layers</li>
<li>Merge and flatten all layers</li>
<li>Use lower jpeg compression quality</li>
<li>Not save meta data</li>
<li>Not preserve Photoshop editing capability</li>
<li>Use Photoshop autotool > PDF presentation</li>
<li>Use Illustrator</li>
<li>Use Acrobat Pro to optimize PDF</li>
</ul>

<p>But none of them can really make the PDF file as small as expected.</p>

<h4>Solution</h4>

<p>Separate the text and image. Also create a clean PSD file. Steps:</p>

<ol>
<li>Hide all text layers</li>
<li>Save as PNG file</li>
<li>Open PNG file in Photoshop</li>
<li>Unhide text layers and copy text layers to PNG file (should place at right place)</li>
<li>Save as Photoshop PDF file</li>
</ol>

<h5>Result</h5>

<table>
<thead>
  <tr>
    <th>Format</th>
    <th>Option</th>
    <th>Size</th>
  </tr>
</thead>
<tbody>
  <tr>
    <td>JPG</td>
    <td>q: 100</td>
    <td style="text-align: right">618.0KB</td>
  </tr>
  <tr>
    <td>PDF</td>
    <td>default</td>
    <td style="text-align: right">624.0KB</td>
  </tr>
</tbody>
</table>

<p>PS. I think other vector object can also use this method to keep their quality and maintain PDF in small size. But not tested.</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000857" baseName="json-universe">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2016-01-11</b:date>
				<b:time>22:38:31</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>JSON Universe</b:title>
			<b:content>
				<b:summary>JSON 在這幾年不但標準化，還開始漸漸的取代了 XML，成為網路上主要的資料交換格式，我認為主要的原因在於他相對於 XML 簡單好懂好用很多，另外一個優點就是他格式很簡單好懂，學起來很快，而相較於更傳統的 Form URL encode 的資料傳輸格式，我覺得最大的優點是他多了 Data Type，而且也可以一口氣送出結構化的資料，傳統的 Form URL encode 雖然有 key value pair，也可以用 [] 模仿出陣列，不過他的所有的 value 都是字串，在 server 端都還要自己判斷欄位，手動做一次型別轉換。只是雖然 JSON 很好上手，還是有幾個地雷容易踩到，如果是會寫 JavaScript 的人更容易中招，大概列舉一下： 不支援註解 物件的 key 一定要用字串型式，就是一定要用引號框起來 字串一定要用雙引號，不能用單引號 陣列或物件的最後一個元素後面不能加逗點（ES5 允許） 當然要避免這些問題，最保險就是用各個語言已經有人實做好的函示庫來處理，而不要自己用組字串的方式來產生 JSON string。不過這篇文章不是要講這些，其實會想寫這篇文章是從 E4X 那篇文章開始來的，那篇文章有提到...</b:summary>
				<b:mainContent><p><a href="http://json.org/">JSON</a> 在這幾年不但<a href="https://www.ietf.org/rfc/rfc4627.txt">標準化</a>，還開始漸漸的取代了 XML，成為網路上主要的資料交換格式，我認為主要的原因在於他相對於 XML 簡單好懂好用很多，另外一個優點就是他格式很簡單好懂，學起來很快，而相較於更傳統的 Form URL encode 的資料傳輸格式，我覺得最大的優點是他多了 Data Type，而且也可以一口氣送出結構化的資料，傳統的 Form URL encode 雖然有 key value pair，也可以用 <code>[]</code> 模仿出陣列，不過他的所有的 value 都是字串，在 server 端都還要自己判斷欄位，手動做一次型別轉換。只是雖然 JSON 很好上手，還是有幾個地雷容易踩到，如果是會寫 JavaScript 的人更容易中招，大概列舉一下：</p>

<ul>
<li>不支援註解</li>
<li>物件的 key 一定要用字串型式，就是一定要用引號框起來</li>
<li>字串一定要用雙引號，不能用單引號</li>
<li>陣列或物件的最後一個元素後面不能加逗點（ES5 允許）</li>
</ul>

<p>當然要避免這些問題，最保險就是用各個語言已經有人實做好的函示庫來處理，而不要自己用組字串的方式來產生 JSON string。不過這篇文章不是要講這些，其實會想寫這篇文章是從 <a href="https://blog.othree.net/log/2015/12/25/jsx-e4x/">E4X</a> 那篇文章開始來的，那篇文章有提到 E4X 已經被棄用了，而 Mozilla 建議的替代方案是一個叫 JXON 的東西，名字看起來和 JSON 很像，而事實上除了 JXON，還有一堆名稱和 JSON 很相近的相關技術，像是 JSONH、BSON、LJSON ...等等，不過其實我找不太到有人去收集這些東西，所以就決定自己來整理一下，這篇文章就是要來介紹一下這堆 JSON 衍生出來的東西，以下沒照特定排序。</p>
</b:mainContent>
				<b:extendContent><h4>JXON</h4>

<p>第一個要介紹的就是剛剛提到的 <a href="https://developer.mozilla.org/en-US/docs/JXON">JXON</a>，JXON 全名是 lossless JavaScript XML Object Notation，是使用 JavaScript 語言的 syntax 來表示 XML 文件的資料，可以達到完整無失真的呈現，就是說可以還原成一模一樣的 XML，不過其實 JXON 並不是真的有個明確的標準，並沒有一個組織或單位來制訂，雖然如此，還是可以找到有人有<a href="https://github.com/tyrasd/jxon">實做</a>。</p>

<h4>JSONx</h4>

<p>第二個要介紹的是 <a href="https://www-01.ibm.com/support/knowledgecenter/SS9H2Y_7.1.0/com.ibm.dp.doc/json_jsonx.html">JSONx</a>，這是 IBM 推出的一種 XML 文件格式，目的非常有趣，和 JXON 剛好相反，是用 XML 文件來表示 JSON 文件的資料，namespace 是 <code>http://www.ibm.com/xmlns/prod/2009/jsonx</code>，講真的我想不到到底有誰會有需求使用到這個標準，隨便看個範例文件吧：</p>

<pre><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;json:object xsi:schemaLocation="http://www.datapower.com/schemas/json jsonx.xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:json="http://www.ibm.com/xmlns/prod/2009/jsonx"&gt;
  &lt;json:string name="name"&gt;John Smith&lt;/json:string&gt;
  &lt;json:object name="address"&gt;
    &lt;json:string name="streetAddress"&gt;21 2nd Street&lt;/json:string&gt;
    &lt;json:string name="city"&gt;New York&lt;/json:string&gt;
    &lt;json:string name="state"&gt;NY&lt;/json:string&gt;
    &lt;json:number name="postalCode"&gt;10021&lt;/json:number&gt;
  &lt;/json:object&gt;
  &lt;json:array name="phoneNumbers"&gt;
    &lt;json:string&gt;212 555-1111&lt;/json:string&gt;
    &lt;json:string&gt;212 555-2222&lt;/json:string&gt;
  &lt;/json:array&gt;
  &lt;json:null name="additionalInfo" /&gt;
  &lt;json:boolean name="remote"&gt;false&lt;/json:boolean&gt;
  &lt;json:number name="height"&gt;62.4&lt;/json:number&gt;
  &lt;json:string name="ficoScore"&gt; &gt; 640&lt;/json:string&gt;
&lt;/json:object&gt;
</code></pre>

<h4>MessagePack</h4>

<p><a href="http://msgpack.org/">MessagePack</a> 是一個類似 Protocol Buffer 的 Binary 資料交換格式，不過其資料的構成很 JSON，官網上的測試頁面就可以讓你直接輸入 JSON 資料，然後它會轉成 MessagePack 的格式。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/24129761021/" title="MessagePack Try by othree, on Flickr"><img src="https://farm2.staticflickr.com/1543/24129761021_bf896219e8_c.jpg" width="840" height="289" alt="MessagePack Try" srcset="https://farm2.staticflickr.com/1543/24129761021_bf896219e8_c.jpg 768w, https://farm2.staticflickr.com/1543/24129761021_02e672ba3d_h.jpg 1600w" /></a></p>

<p>MessagePack 相較於下面介紹的其他幾個 Binary 格式是比較好懂些，也有比較完整的實做和支援，是目前比較多人使用的 binary JSON 格式，也有一些商業網站採用，像是 Pinterest、fluentd。這類的 binary 資料格式蠻常被拿來和 Google 的 <a href="https://developers.google.com/protocol-buffers/">Protocol Buffer</a> 來做比較，當然相較於 Protocol Buffer 來說，JSON 型式的資料結構其特色就是 schema free，不用事先定義好傳輸資料內部的結構。</p>

<h4>BSON, BJSON</h4>

<p><a href="http://bsonspec.org/">BSON</a>、<a href="http://bjson.org/">BJSON</a> 也都是 Binary 的 JSON 表現格式，不過這兩個規格都不完全相容於 JSON，有多一些自定義的資料型態，像是 regular expression，然後大部分人都只有談到 BSON，不太有人講到 BJSON 的樣子。</p>

<h4>UBJSON, Smile</h4>

<p><a href="http://ubjson.org/">UBJSON</a>(Universal Binary JSON) 和 <a href="http://wiki.fasterxml.com/SmileFormatSpec">Smile</a> 也和上面幾個一樣是 Binary 的資料格式，和 BSON 比起來則是差在這兩個格式完全相容於 JSON，意思就是可以做到 <code>UBJSON -&gt; JSON -&gt; UBJSON</code> 這樣的資料轉而完全不會遺失資訊。</p>

<p>Binanry 的 JSON 表現格式其實還有一個叫 <a href="https://componentality.com/xjson/">xJSON</a> 的比較沒知名度這樣。</p>

<h4>Hjson</h4>

<p><a href="http://hjson.org/">Hjson</a> 全名是 the Human JSON，顧名思義就是更人性化的 JSON 格式，是一個比 JSON 寬鬆的規範，例如允許註解，不用 <code>,</code> 改成用換行也可以分開不同元素：</p>

<pre><code>[
  1
  2
  3
]
</code></pre>

<p>物件的 key 不需要字串的引號：</p>

<pre><code>{ foo: 123 }
</code></pre>

<p>等等很多方便的語法，不過其實如果要用機器產生這些寬鬆的資料是不太好，比較適合的場合還是用人工維護的 JSON 檔案。</p>

<h4>rson</h4>

<p><a href="https://code.google.com/p/rson/">rson</a> 是一個 JSON 的 superset，和 Hjson 的目標有些接近，不過 rson 的一些新語法更接近 <a href="http://www.yaml.org/">YAML</a> 格式，專案是放在 Google Code 上，而且似乎已經沒維護了，是個總有一天會消失在網路上的東西吧。</p>

<h4>LJSON</h4>

<p><a href="https://github.com/MaiaVictor/LJSON">LJSON</a> 的 L 應該是 lambda 的意思，也是個 JSON 的擴充格式，改變只有一個，就是多了可以儲存 pure function 的能力，儲存 function 的形式是很像 ES6 arrow function 的樣子：</p>

<pre><code>(v0)=&gt;({"author":"John","message":v0})
</code></pre>

<p>最大的差別在於 <code>=&gt;</code> 後面是接 <code>()</code>，並且還有個特色是它會想辦法最佳化，會有像是 dead code removal 的效果。如果要自己做到用 JSON 儲存 function 的話，一般是可以先用 <code>toString</code> 來輸出 function 的原始碼，要還原時再用 <code>new Function</code> 來還原，不過如果不是 pure function，例如有用到 closure 變數的話，就一定會失去這些 reference 到的變數了。</p>

<p>另外還有一個 <a href="https://github.com/daviddengcn/ljson">LJSON</a> 是叫做 Loose JSON，就和上面介紹的 Hjson 目標差不多，就不再多介紹了。</p>

<h4>JSON Lines</h4>

<p><a href="http://jsonlines.org/">JSON Lines</a> 也是有點接近上面介紹的幾個東西，其實是個很簡單的東西，就是把多個 JSON 資料用換行接在同一個文件檔案內，例如：</p>

<pre><code>[1,2,3]
[4,5,6]
[7,8,9]
</code></pre>

<p>三個 JSON 陣列接在一起，不是一個合法的 JSON string，一般 JSON Parser 都會說 Syntax Error，不過支援 JSON Lines 的環境下就可以把這串字串切開，分成三個陣列，支援的環境中我看到比較有名的大概就是 <a href="https://github.com/maxogden/dat/">dat</a> 了，這是一個蠻厲害的資料分享的工具，其中的串流模式傳輸資料就是用到 JSON Lines 格式（其實就是一個一個 JSON 資料輪流輸出）。</p>

<h4>JSONH</h4>

<p><a href="https://github.com/WebReflection/JSONH">JSONH</a> 就不是一個 JSON 的擴充格式了，它事實上是用來壓縮 JSON 的，特別適用於物件的陣列的資料集，像是：</p>

<pre><code>[
  {
    "name": "John",
    "gender": "Male",
    "country": "USA"
  },
  {
    "name": "Smith",
    "gender": "Male",
    "country": "Canada"
  }
]
</code></pre>

<p>透過用 JSONH 壓縮就會變成：</p>

<pre><code>[3, "name", "gender", "country", "John", "Male", "USA", "Smith", "Male", "Canada"]
</code></pre>

<p>最主要節省的就是大量重複的屬性名稱，如果屬性名稱長，陣列又長，這樣壓縮前後的資料量大小差距就會很明顯，不過如果資料階層比較複雜的話，沒辦法整理得這麼漂亮，壓縮效果就會打折了。</p>

<h4>Jsonnet</h4>

<p><a href="http://jsonnet.org/">Jsonnet</a> 是 Google 所推出，帶著一點程式語言特性的 JSON 文件格式，例如多了個 <code>self</code>：</p>

<pre><code>{
    person1: {
        name: "Alice",
        welcome: "Hello " + self.name + "!",
    },
    person2: self.person1 { name: "Bob" },
}
</code></pre>

<p>還有 tempalte string：</p>

<pre><code>{
    fmt2: "The word %(wd)s has %(le)d letters.  Go %(wd)s!"
        % {wd: $.word, le: std.length($.word)},
}
</code></pre>

<p>Array comprehension：</p>

<pre><code>{
    foo: [1, 2, 3],
    bar: [x * x for x in self.foo if x &gt;= 2],
    baz: { ["field" + x]: x for x in self.foo },
    obj: { ["foo" + "bar"]: 3 },
}
</code></pre>

<p>除了這些程式語法的特性之外， Jsonnet 還有像是 Hjson 的一些比較人性化的語法的支援，官網上則自稱是是一種 data template language，而不是單純的資料而已。</p>

<h4>JSON3</h4>

<p><a href="http://bestiejs.github.io/json3/">JSON3</a> 其實不是一個新版本的 JSON，而是一個更加穩健的 JavaScript 的 JSON 實做，多處理了一些不同瀏覽器的差異問題，3 的由來其實是相對於 Douglas 的 <a href="https://github.com/douglascrockford/JSON-js">json2.js</a>，這個 json2.js 是整個 JSON 進 ECMAScript 標準時最主要的依據，包括 Global Varibale 的名稱，API 的設計都是從這邊來的，至於這個 json2.js 的 2 的意思其實就是這是 Douglas 實做的第二版 JSON library。</p>

<h4>JSONP</h4>

<p><a href="https://zh.wikipedia.org/wiki/JSONP">JSONP</a> 其實不是一個標準，最早出處也不詳，不過早一點在 CORS 普及前就開始寫 Ajax 的人應該是很熟悉的東西，瀏覽器為了安全性問題，雖然可以跨直接用 XHR 做出 HTTP request，但是會限制跨 domain 的連線，現在有 CORS 可以讓網站所有者提供允許的白名單，但是在 CORS 普及前，基本上是完全被禁止的，不過有個方法就是插入 <code>&lt;script&gt;</code> 標籤去執行遠端的 js 檔案，這個方法的缺點就是只能執行，不能讀取檔案內容，JSONP 就是在這個限制下所設計出來可以用來跟遠端要資料的方法，基本上實做的方法就是在本地先產生好一個暫時的 callback function：</p>

<pre><code>window.cb123456 = function (data) {
  window.cb123456 = null; //clean up

  //do something with data      
};
</code></pre>

<p>然後把遠端資源加上參數指定 callback 名稱：</p>

<pre><code>&lt;script type="text/javascript"
     src="http://server2.example.com/RetrieveUser?UserId=1823&amp;jsonp=cb123456"&gt;
&lt;/script&gt;
</code></pre>

<p>遠端收到 Request 後產生特別的 response，本來要回傳的資料如下：</p>

<pre><code>{
  "name": "John",
  "gender": "Male",
  "country": "USA"
}
</code></pre>

<p>現在會變成一段 JavaScript 程式碼：</p>

<pre><code>cb1231465({
  "name": "John",
  "gender": "Male",
  "country": "USA"
});
</code></pre>

<h4>JSON Schema</h4>

<p>JSON 本身是很自由的資料格式，不過開發比較大型的應用程式，或是要做一些測試的時候，太過自由就不一定是優點了，所以很合理的就會有個來定義資料內容結構的描述語言出現，<a href="http://json-schema.org/">JSON Schema</a> 就是一個，而且似乎很合理的 JSON Schema 也是 JSON 文件：</p>

<pre><code>{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Product",
    "description": "A product from Acme's catalog",
    "type": "object",
    "properties": {
        "id": {
            "description": "The unique identifier for a product",
            "type": "integer"
        }
    },
    "required": ["id"]
}
</code></pre>

<p>這個文件格式也有在 <a href="http://raml.org/">RAML</a> 中被使用到，RAML 是個 RESTful API 的定義文件，如果 API 傳輸的資料是 JSON 的話，就可以內嵌 JSON Schema，都定義完整就可以用自動化工具來做一些測試了，或是也可以產生一些方便閱讀的文件等等。</p>

<h4>JSON-LD</h4>

<p><a href="http://json-ld.org/">JSON-LD</a> 是 JSON for Linked Data，所謂 Linked Data 其實就是語意網的一部分，基本上還是遵照 <a href="http://www.w3.org/RDF/">RDF</a> 架構去設計出來的文件，目前也很多網路服務都支援，像是 Google、Facebook 等等，甚至 Gmail 的一些特殊能力也是透過在信件內插入 JSON-LD 格式的資料才得以實現。</p>

<h4>JSON-RPC</h4>

<p><a href="http://json-rpc.org/">JSON-RPC</a> 基本上就是 XML-RPC 的 JSON 版本這樣，其實我也不知道有沒有人真的拿來應用就是，倒是 XML-RPC 現在還不少老東西有支援。</p>

<h4>GeoJSON</h4>

<p><a href="http://geojson.org/">GeoJSON</a> 則是針對地理資訊的 JSON 資料格式，基本上就是點線面，然後座標用經緯度，再加上 meta 資訊這樣，不會很複雜，GitHub 也支援 <a href="https://github.com/blog/1541-geojson-rendering-improvements">直接預覽</a> 的功能，<a href="http://g0v.tw/zh-TW/index.html">g0v</a> 上其實有不少專案都有用到 geojson 資料，還有個 <a href="https://github.com/g0v/twgeojson">twgeojson</a> 的基礎建設，最新版的檔案有點大，不過可以看看舊版本的<a href="https://github.com/g0v/twgeojson/blob/master/legacy/twTown1982.json">檔案</a>：</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/24218757206/" title="twgeojson g0v by othree, on Flickr"><img src="https://farm2.staticflickr.com/1657/24218757206_9c6e578f87_b.jpg" width="1024" height="707" alt="twgeojson g0v, " srcset="https://farm2.staticflickr.com/1657/24218757206_9c6e578f87_b.jpg 1024w, https://farm2.staticflickr.com/1657/24218757206_6834908581_h.jpg 1600w" /></a></p>

<p>GeoJSON 還有一個擴充版的文件格式叫做 <a href="https://github.com/mbostock/topojson">TopoJSON</a>，相較於 GeoJSON 比較適合用在 topology 上（可以想像你只要台灣地圖，但是不用放在世界地圖上），整體檔案大小也因此可以小很多。</p>

<h4>JSON-stat</h4>

<p><a href="http://json-stat.org/">JSON-stat</a> 是個把二維統計資訊表格用 JSON 表現的格式，而且不是只能夠處理兩個維度的資料而已，事實上可以儲存更多維度，JSON-stat 在儲存 raw data 的部分是用打平的一維陣列來儲存，所以也不用擔心太多層太過複雜的狀況，想詳細瞭解一點的可以參考官網右上角的投影片看看。</p>

<h4>JSON Graph</h4>

<p><a href="http://netflix.github.io/falcor/documentation/jsongraph.html">JSON Graph</a> 是 Netflix 推出的 <a href="http://netflix.github.io/falcor/">Falcor</a> 裡面用到的，Falcor 是一種用來取代 RESTful API 的新的前後端之間的溝通方式，這種方法和 RESTful 相比最大的差異就是不再是對單一的資源（resource）做操作，而是整個應用程式會用到的東西都組織定義好，放到一個大的 resource 內，然後再對這個大的資源做操作，而這個大的 resource 就是所謂的 JSON Graph 物件，Falcor 的出現是為了解決一些把 RESTful 用到很透徹時會出現的問題，不過真的要想用這套方法在自己的服務上其實是有些難度，因為要實做一個 Falcor Server，官方也只有提供 Node 版的。</p>

<h4>JSONPath</h4>

<p><a href="http://goessner.net/articles/JsonPath/">JSONPath</a> 是一個 JSON 的 query 語言，像是 <a href="https://developer.mozilla.org/en-US/docs/Web/XPath">XPath</a> 之於 XML，語法 syntax 其實和普通 JavaScript 程式碼很像，不會太難理解，一些範例：</p>

<pre><code>$.store.*
$.store.book[*].author
$.store..price
</code></pre>

<p>不過這些可不是程式碼，而是單純的字串，丟進 JSONPath 引擎再給它相對應的物件（不是 JSON 字串），就可以把目標位置的資料取出來。</p>

<h4>JSONiq</h4>

<p><a href="http://jsoniq.org/">JSONiq</a> 也是個用來 query JSON 資料用的語言，不過和上面的 JSONPath 不一樣，比較像是 SQL 那樣有點程式化，而且語法偏 functional programming，例如：</p>

<pre><code>for $sarah in collection("users"),
    $friend in collection("users")
where $sarah.name eq "Sarah"
      and
      (some $name in $sarah.friends[]
       satisfies $friend.name eq $name)
return $friend
</code></pre>

<h4>JSON Pointer</h4>

<p><a href="https://tools.ietf.org/html/rfc6901">JSON Pointer</a> 是一個 2013 的 RFC 標準(RFC-6901)，用途和 JSON Path 有點像，也是用來取出 JSON 文件中的一部份資料，不過最主要的差異在於 JSON Pointer 一定是只能指向到一個節點，只能拿到一個 value，不像 JSONPath 或是 JSONip 可以一次 query 很多節點，然後用陣列的形式傳回值；另外還有一個和 JSONPath 的差異是 JSON Pointer 和 XPath 的語法很接近：</p>

<pre><code>/foo/0
/actors/4/name
</code></pre>

<h4>JSON Patch</h4>

<p><a href="https://tools.ietf.org/html/rfc6902">JSON Patch</a> 是一個另 RFC 標準(RFC-6902)，緊接在 JSON Pointer 之後，這兩個標準都是都是在 <a href="https://blog.gslin.org/archives/2014/02/15/4261/json-patch/">gslin</a> 那邊看到的，JSON Patch 主要是定義了一組標準的對 JSON 的操作(operation)，提供了 add, remove, replace, move, copy, test 幾個操作，基本上看起來如下：</p>

<pre><code>{"op": "add", "path": "/pets/0", "value": "dog"}
</code></pre>

<p>這行的意思是要在 pets 下的第一個元素的位置加上一個值，字串 "dog"，JSON Patch 基本上是設計來和 HTTP Patch 配合的，以前如果要用 Patch 修改某個特定網路 reource 的話，一定要把整個完整的，更新過後的 JSON 資料傳一次，但是如果用 JSON Patch 就可以只傳要做怎樣的更新就可以了，可以節省很多資料的傳輸量，而且還可以先用 test 做測試，然後也可以一次做一連串的修改動作：</p>

<pre><code>[
  { "op": "replace", "path": "/baz", "value": "boo" },
  { "op": "add", "path": "/hello", "value": ["world"] },
  { "op": "remove", "path": "/foo"}
]
</code></pre>

<h4>JSONDiffPatch</h4>

<p><a href="http://benjamine.github.io/jsondiffpatch/demo/index.html">JSONDiffPatch</a> 是本來文章發出後才看到的 JSON 文件的 diff, patch 工具，網站上的 demo 還有視覺化的顯示，感覺很華麗：</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23699590343/" title="JSONDiffPatch by othree, on Flickr"><img src="https://farm2.staticflickr.com/1507/23699590343_c3d5b0dd16_b.jpg" width="425" height="654" alt="JSONDiffPatch, " srcset="https://farm2.staticflickr.com/1507/23699590343_c3d5b0dd16_b.jpg 665w" /></a></p>

<p>雖然用的格式不是 JSON Patch，而是自己有定義他的 <a href="https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md">delta format</a>，不過基本上作的事情很接近，另外他還可以 undo patch，也有 plugin 可以外掛，還算蠻完整的。</p>

<h4>JSONLint</h4>

<p><a href="http://jsonlint.com">JSONLint</a> 是 JSON 的文件格式檢查工具，不過實際上大部分人在命令列用的通常是 npm 裝的<a href="https://github.com/zaach/jsonlint">版本</a>，這版是 Mozilla 的 Zach Carter 用 JavaScript 實做的，我自己還蠻常用一個線上服務：<a href="https://jsonformatter.curiousconcept.com/">JSON Formatter</a>，除了可以做語法檢查，還可以用可以收展開的樹狀檢視模式來看 JSON 資料。</p>

<h4>?JSON</h4>

<p>最後，JSON 的相關應用和各種 library 真的是不少，其實 JSON 前面加上 26 個英文字母的任意一個，只有 <code>ojson</code> 沒有東西而已，其他 25 個名稱都有人用，不過大部分都是特定語言的 JSON library 實做就是了。然後相信我這篇文章列出來的不是全部，如果有人知道什麼特別的變化或應用也歡迎提供～</p>
</b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000856" baseName="2015">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2016-01-03</b:date>
				<b:time>15:20:10</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>2015</b:title>
			<b:content>
				<b:summary> 又到了一年一度的照片回顧了，今年因為比較多事情，竟然有一個月沒有照片（除了開箱以外），所以就另外多挑了一張照片出來這樣。首先是一月在台南武廟前面碳烤吐司那邊拍的，台南的大大小小寺廟真的很多，隨便一條巷子進去就有間小廟。 二月是最後一次五月天到HTC的尾牙了，今年聽說五月天沒有要唱尾牙場這樣。 三月的是在摩茲工寮拍的，是 Kano 的 workshop，Kano 是讓小朋友能自己從硬體組裝電腦的一個 kit，之前和朋友湊團買了不少台，達到可以請官方支援開一場 workshop 的目標，所以就辦了一場，也是我難得有機會拍小孩子的照片。 四月是我今年印象最深刻的一杯飲料，台南凰商號的鳳梨冰茶。 五月的時候去了北京一趟，趁著有一天假日去觀光一下，其中頤和園還蠻不錯的，這張照片是園內的麒麟，做工精細，光是台座就很華麗，然後這尊我都稱他為標準麒麟，感覺是有人要畫麒麟時可以來參考用的標準版。 六月就是都沒照片可以挑，所以跳到七月，今年幫 HITCON 記錄了不少活動，最主力參與的就是 HITCON 本番活動的四天研討會加前面兩天 Training 了，然後拍完我就感冒接著一直咳嗽到11月底，明年大概不能這樣從頭參加到尾了，挑的這張是 HITCON Girls 的讀書會的照片，其實 HITCON Girls 的難易度對我來說好像還蠻剛好的(?)。 八月是慣例的 COSCUP，這張是 Jserv 講完他封麥演講後拍的，因為覺得他神情不太一般就拍下來了，後來看他的一些心情抒發才知道是怎麼回事。 九月去幫忙拍了 Open Street Map 的研討會（State of The Map），規模不大，不過是我拍的蠻開心的一場活動，就是一種小而美的 fu。 十月其實也沒拍什麼照片，這張是某天下班時在信義區空橋拍的簡單夜景。...</b:summary>
				<b:mainContent><p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/16140518847/" title="武廟碳烤土司 by othree, on Flickr"><img src="https://farm8.staticflickr.com/7492/16140518847_59717232dc_b.jpg" width="1024" height="683" alt="武廟碳烤土司" srcset="https://farm8.staticflickr.com/7492/16140518847_59717232dc_b.jpg 1024w, https://farm8.staticflickr.com/7492/16140518847_245a05da67_h.jpg 1600w" /></a></p>

<p>又到了一年一度的照片回顧了，今年因為比較多事情，竟然有一個月沒有照片（除了開箱以外），所以就另外多挑了一張照片出來這樣。首先是一月在台南武廟前面碳烤吐司那邊拍的，台南的大大小小寺廟真的很多，隨便一條巷子進去就有間小廟。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/16456098101/" title="HTC 2014 Year End Party by othree, on Flickr"><img src="https://farm8.staticflickr.com/7322/16456098101_3302c040ba_b.jpg" width="1024" height="683" alt="HTC 2014 Year End Party" srcset="https://farm8.staticflickr.com/7322/16456098101_3302c040ba_b.jpg 1024w, https://farm8.staticflickr.com/7322/16456098101_bc349f389d_h.jpg 1600w" /></a></p>

<p>二月是最後一次五月天到HTC的尾牙了，今年聽說五月天沒有要唱尾牙場這樣。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/16535116467/" title="Kano 小朋友的電腦自己動手作工作坊 by othree, on Flickr"><img src="https://farm9.staticflickr.com/8602/16535116467_1e42f2e043_b.jpg" width="1024" height="683" alt="Kano 小朋友的電腦自己動手作工作坊" srcset="https://farm9.staticflickr.com/8602/16535116467_1e42f2e043_b.jpg 1024w, https://farm9.staticflickr.com/8602/16535116467_26174e67bb_h.jpg 1600w" /></a></p>

<p>三月的是在摩茲工寮拍的，是 Kano 的 workshop，Kano 是讓小朋友能自己從硬體組裝電腦的一個 kit，之前和朋友湊團買了不少台，達到可以請官方支援開一場 workshop 的目標，所以就辦了一場，也是我難得有機會拍小孩子的照片。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/17133378048/" title="台南凰商號、鳳梨冰茶 by othree, on Flickr"><img src="https://farm8.staticflickr.com/7669/17133378048_014e3ee6f2_b.jpg" width="1024" height="683" alt="台南凰商號、鳳梨冰茶" srcset="https://farm8.staticflickr.com/7669/17133378048_014e3ee6f2_b.jpg 1024w, https://farm8.staticflickr.com/7669/17133378048_dede7ec4d4_h.jpg 1600w" /></a></p>

<p>四月是我今年印象最深刻的一杯飲料，台南凰商號的鳳梨冰茶。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/18732255206/" title="頤和園 by othree, on Flickr"><img src="https://farm9.staticflickr.com/8873/18732255206_de78be9257_b.jpg" width="683" height="1024" alt="頤和園" srcset="https://farm9.staticflickr.com/8873/18732255206_de78be9257_b.jpg 683w, https://farm9.staticflickr.com/8873/18732255206_ecfa09195b_h.jpg 1067w" /></a></p>

<p>五月的時候去了北京一趟，趁著有一天假日去觀光一下，其中頤和園還蠻不錯的，這張照片是園內的麒麟，做工精細，光是台座就很華麗，然後這尊我都稱他為標準麒麟，感覺是有人要畫麒麟時可以來參考用的標準版。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/19502074628/" title="HITCON GIRLS 7月讀書會 by othree, on Flickr"><img src="https://farm1.staticflickr.com/413/19502074628_f5bd2785a1_b.jpg" width="1024" height="683" alt="HITCON GIRLS 7月讀書會" srcset="https://farm1.staticflickr.com/413/19502074628_f5bd2785a1_b.jpg 1024w, https://farm1.staticflickr.com/413/19502074628_6009dd3e0a_h.jpg 1600w" /></a></p>

<p>六月就是都沒照片可以挑，所以跳到七月，今年幫 HITCON 記錄了不少活動，最主力參與的就是 HITCON 本番活動的四天研討會加前面兩天 Training 了，然後拍完我就感冒接著一直咳嗽到11月底，明年大概不能這樣從頭參加到尾了，挑的這張是 HITCON Girls 的讀書會的照片，其實 HITCON Girls 的難易度對我來說好像還蠻剛好的(?)。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/21691691725/" title="COSCUP 2015 Day 2 by othree, on Flickr"><img src="https://farm1.staticflickr.com/732/21691691725_0158744a48_b.jpg" width="1024" height="683" alt="COSCUP 2015 Day 2" srcset="https://farm1.staticflickr.com/732/21691691725_0158744a48_b.jpg 1024w, https://farm1.staticflickr.com/732/21691691725_78680cc694_h.jpg 1600w" /></a></p>

<p>八月是慣例的 COSCUP，這張是 Jserv 講完他封麥演講後拍的，因為覺得他神情不太一般就拍下來了，後來看他的一些心情抒發才知道是怎麼回事。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/21588592452/" title="SOTM Taiwan 2015 Day 2 by othree, on Flickr"><img src="https://farm6.staticflickr.com/5666/21588592452_42ba1e0687_b.jpg" width="1024" height="683" alt="SOTM Taiwan 2015 Day 2" srcset="https://farm6.staticflickr.com/5666/21588592452_42ba1e0687_b.jpg 1024w, https://farm6.staticflickr.com/5666/21588592452_7c2e08433b_h.jpg 1600w" /></a></p>

<p>九月去幫忙拍了 Open Street Map 的研討會（State of The Map），規模不大，不過是我拍的蠻開心的一場活動，就是一種小而美的 fu。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/21840706024/" title="信義區 by othree, on Flickr"><img src="https://farm1.staticflickr.com/774/21840706024_a5df54ab4a_b.jpg" width="1024" height="683" alt="信義區" srcset="https://farm1.staticflickr.com/774/21840706024_a5df54ab4a_b.jpg 1024w, https://farm1.staticflickr.com/774/21840706024_dd9bbe8e4a_h.jpg 1600w" /></a></p>

<p>十月其實也沒拍什麼照片，這張是某天下班時在信義區空橋拍的簡單夜景。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23369387526/" title="菲貓 by othree, on Flickr"><img src="https://farm1.staticflickr.com/666/23369387526_c49aaa7eeb_b.jpg" width="1024" height="683" alt="菲貓" srcset="https://farm1.staticflickr.com/666/23369387526_c49aaa7eeb_b.jpg 1024w, https://farm1.staticflickr.com/666/23369387526_cb6c4f9d2f_h.jpg 1600w" /></a></p>

<p>十一月底幫家裡貓咪穿上正式服裝時拍的照片。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/23459263613/" title="Kumamon Square by othree, on Flickr"><img src="https://farm6.staticflickr.com/5771/23459263613_d450468173_b.jpg" width="1024" height="683" alt="Kumamon Square" srcset="https://farm6.staticflickr.com/5771/23459263613_d450468173_b.jpg 1024w, https://farm6.staticflickr.com/5771/23459263613_20f8262b93_h.jpg 1600w" /></a></p>

<p>十二月去了一趟九州，還專程去拜訪了 Kumamon ，熊本真的是很多 Kumamon，去熊本的行程就是拜訪熊本熊、熊本城、吃豬排、吃燒肉，熊本城其實是重建的，然後現在還是有城主，用的是一口城主制度，簡單說就是有捐錢幫忙維護熊本城就能當城主。</p>

<p><a data-flickr-embed="true" class="thumbnail" href="https://www.flickr.com/photos/othree/16222124870/" title="FF25 Cosplay by othree, on Flickr"><img src="https://farm8.staticflickr.com/7352/16222124870_39dd508f76_b.jpg" width="1024" height="683" alt="FF25 Cosplay" srcset="https://farm8.staticflickr.com/7352/16222124870_39dd508f76_b.jpg 1024w, https://farm8.staticflickr.com/7352/16222124870_7d47d8872c_h.jpg 1600w" /></a></p>

<p>最後補一張 cosplay 的照片，今年後半年都沒有拍相關的活動，剛好上面也都沒挑到這個主題的照片，最近 FF 開始移師到花博園區，那邊腹地比較廣大，比較不會有在台大的的種種問題，不過還搞不太清楚要在哪裡找人拍照就是。</p>
</b:mainContent>
				<b:extendContent>
</b:extendContent>
			</b:content>


		</b:entry>

	</b:entries>
</b:blog>
