<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>m</b:listType>
			<b:listData listID="2015-02">February 2015</b:listData>

			<b:previous>
				<b:mTitle>January 2015</b:mTitle>
				<b:mDate>2015/01</b:mDate>
			</b:previous>


			<b:next>
				<b:mTitle>March 2015</b:mTitle>
				<b:mDate>2015/03</b:mDate>				
			</b:next>

		</b:entriesMeta>

		<b:entry entryID="000834" baseName="csp">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2015-02-14</b:date>
				<b:time>15:26:33</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>CSP</b:title>
			<b:content>
				<b:summary> Communicating Sequential Processes，簡稱 CSP，和 Content Security Policy 不一樣，是用來處理非同步執行序之間溝通的一個數學模型，我最早是在 Addy Osmani 的 JavaScript Application Architecture On The Road To 2015 這篇文章裡面看到的，花了蠻多時間試著去瞭解，最近終於覺得懂一點皮毛可以紀錄一下了。...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16440158642/" title="CSP by othree, on Flickr"><img src="https://farm9.staticflickr.com/8598/16440158642_62042f3837_b.jpg" width="618" height="800" alt="CSP" srcset="https://farm9.staticflickr.com/8598/16440158642_62042f3837_b.jpg 791w, https://farm9.staticflickr.com/8598/16440158642_889b87bda0_h.jpg 1236w" /></a></p>

<p>Communicating Sequential Processes，簡稱 CSP，和 Content Security Policy 不一樣，是用來處理非同步執行序之間溝通的一個數學模型，我最早是在 Addy Osmani 的 <a href="https://medium.com/@addyosmani/javascript-application-architecture-on-the-road-to-2015-d8125811101b">JavaScript Application Architecture On The Road To 2015</a> 這篇文章裡面看到的，花了蠻多時間試著去瞭解，最近終於覺得懂一點皮毛可以紀錄一下了。</p>
</b:mainContent>
				<b:extendContent><p>CSP 其實不是新東西，是 <a href="http://en.wikipedia.org/wiki/Tony_Hoare">C. A. R. Hoare</a> 在 1978 年就發表的<a href="http://www.cs.ucf.edu/courses/cop4020/sum2009/CSP-hoare.pdf">論文</a>(PDF)，1985 還出了整本書來介紹，而且<a href="http://www.usingcsp.com/cspbook.pdf">全文 PDF</a> 都有在網路上，可是這本書實在太理論了，看了一點點就看不下去，只好找其它資源，發現還真的蠻少的，但是確有找到一些近幾年的實做，像是 Go 的 routine 間用 channel 溝通，或是 Clojure 的 core.async，當然 Addy Osmani 那篇也有提到 JavaScript 的部分。</p>

<p>根據我目前淺薄的理解，CSP 就是用 channel 的非同步溝通機制，channel 怎麼用呢，顧名思義，就是一個傳遞訊息用的頻道，不過我覺得用管線可以更精確的描述它，而且這是一個單向的管線，一邊只能傳訊息進去，一邊只能拿訊息出來，可以達成非同步的溝通最主要在於拿訊息這邊，當你在其中一個 process 中說你要跟某個 channel 拿一個訊息出來時，如果那個 channel 裡面沒有東西，則這邊的 process 就會停下來等到那個 channel 有訊息出現，這個等待的機制不同語言有各自的方法實做。</p>

<p>先來看看 Go 的範例吧，因為實在是比 JavaScript 的直覺多了：</p>

<pre><code>package main
import "fmt"

func main() {
    messages := make(chan string, 1)

    messages &lt;- "ping"

    msg := &lt;-messages
    fmt.Println(msg)
}
</code></pre>

<p>這段程式碼是基於 Go by Example 說明 channel 的<a href="https://gobyexample.com/channels">範例</a>，程式碼很好理解，<code>messages := make(chan string, 1)</code>這行用 make 產生一個 channel 指派給 messages 這個變數，<code>messages &lt;- "ping"</code> 表示把 "ping" 這個字串丟進去 message 這個 channel 裡面，然後 <code>msg := &lt;-messages</code> 表示從 message channel 裡面抓訊息出來，丟到 msg 這個變數，<code>:=</code> 是指派同時宣告變數的運算子，<code>&lt;-</code> 則是用來描述操作中訊息傳遞方向用的運算子，當它是箭頭就很好理解，在 Go 裡面稱為 <a href="https://golang.org/ref/spec#Receive_operator">receive operator</a>。</p>

<p>在第一個例子當中，因為是先送資料進去 channel 才拿出來，所以還不太有感覺，接下來看第二個例子，一樣是 Go by Example 的，這段是 <a href="https://gobyexample.com/channel-synchronization">Channel Synchronization</a> 的範例：</p>

<pre><code>package main

import "fmt"
import "time"

func worker(done chan bool) {
    fmt.Print("working...")
    time.Sleep(time.Second)
    fmt.Println("done")

    done &lt;- true
}

func main() {

    done := make(chan bool, 1)
    go worker(done)

    &lt;-done
}
</code></pre>

<p>這個範例稍微複雜一點，<code>done := make(chan bool, 1)</code> 先產生一個 done channel，然後用 <code>go worker(done)</code> 產生一個 concurrent routine，跑的是 worker 這個 function，內容在 main 的上面，基本上就是 sleep 一下然後傳訊息回 done channel，然後 main 最後的 <code>&lt;-done</code> 就是從 done channel 拿訊息出來，先不管平行出去的 routine，通常的程式跑到這行結束，整個程式就結束關閉了，不過，就是這個不過，正常情況下，有 <code>&lt;-channel</code> 的話，該 routine 程式執行到這邊就會暫停下來，直到有從 channel 裡面拿到訊息才會繼續跑下去（或是裡面已經有訊息，直接拿到就繼續往下）。</p>

<p>Go 的 channel 還有一些細節可以參考 <a href="http://guzalexander.com/2013/12/06/golang-channels-tutorial.html">Golang channels tutorial</a> 這篇文章，其實就是一個可以跨 routine 的傳遞資料的管道，資料可以一直傳，沒有限制數量，不過還有一些相關的細節，像是 sync channel，還有 channel 的 buffer 等等。</p>

<p>綜合以上的兩個範例，可以歸納出來，要支援 CSP 有兩個必要條件，第一個是可以做得出 channel 物件的機制，可以放資料進去，可以拿資料出來，是先進先出機制，這部分其實不是問題，問題是第二個條件，程式碼要能跑一跑停下來等訊息然後又繼續跑下去，這可不是用 <code>while (1)</code> 可以處理的狀況，用 recursive function call 效能也不太好，以前的 JavaScript 是無法良好的達成第二個條件的，直到 ES6 的 async function 出現。</p>

<p>ES6 async function 之前有<a href="https://blog.othree.net/log/2014/05/24/es6-iterable/">文章</a>介紹過，這邊就不再說明，不過總之就是執行到 <code>yield</code> 後，這個 function call 就會先停下來，把值傳出，直到下次再次執行該 function 才會繼續往下執行，這樣停下來的機制，正好可以利用來作為 CSP 等訊息的機制，不過利用 <code>yield</code> 的話有一個限制，就是一定要在 async function 裡面才可以利用 channel，不像 Go 由於是建在語言裡面的，main thread 也可以跟 channel 溝通。</p>

<p>雖然說可以利用 async function 可以做出 CSP 的架構出來，不過要只用 async function 來寫出像 Go 那樣簡短的程式碼實在是很困難，中間還有很多機制需要補起來，所以就開始有 library 實做，目前最有名的是 <a href="https://github.com/ubolonton/js-csp">js-csp</a>，Facebook 最近的 React.js Conf 其中一場議程介紹 CSP 時也是用 js-csp 做範例，錄影在這，作為入門 CSP 我覺得是蠻不錯的一場演講：</p>

<iframe width="853" height="480" src="https://www.youtube.com/embed/W2DgDNQZOwo?list=PLb0IAmt7-GS1cbw4qonlQztYV1TAW0sCr" frameborder="0" allowfullscreen="allowfullscreen"></iframe>

<p>js-csp 裡面其實做了很多事情，目前看起來像是參考 Go 來設計，例如這樣的 Go <a href="http://talks.golang.org/2013/advconc.slide#6">程式碼</a>：</p>

<pre><code>package main
import "fmt"
import "time"

type Ball struct{ hits int }

func player(name string, table chan *Ball) {
    for {
        ball := &lt;-table
        ball.hits++
        fmt.Println(name, ball.hits)
        time.Sleep(100 * time.Millisecond)
        table &lt;- ball
    }
}

func main() {
    table := make(chan *Ball)
    go player("ping", table)
    go player("pong", table)

    table &lt;- new(Ball) // game on; toss the ball
    time.Sleep(1 * time.Second)
    &lt;-table // game over; grab the ball
}
</code></pre>

<p>改成用 js-csp 寫的話就變成：</p>

<pre><code>function* player(name, table) {
  while (true) {
    var ball = yield csp.take(table);
    if (ball === csp.CLOSED) {
      console.log(name + ": table's gone");
      return;
    }
    ball.hits += 1;
    console.log(name + " " + ball.hits);
    yield csp.timeout(100);
    yield csp.put(table, ball);
  }
}

csp.go(function* () {
  var table = csp.chan();

  csp.go(player, ["ping", table]);
  csp.go(player, ["pong", table]);

  yield csp.put(table, {hits: 0});
  yield csp.timeout(1000);
  table.close();
});
</code></pre>

<p>用 <code>csp.chan</code> 產生 channel，用 <code>yield csp.take</code> 代替從 channel 取訊息，用 <code>yield csp.put</code> 代替送訊息到 channel，然後最重要的是用 <code>csp.go</code> 來代替從 Go 裡面用 <code>go</code> 產生 routine 的操作，然後不說可能沒人注意到，js-csp 把 routine(<a href="https://github.com/ubolonton/js-csp/blob/master/src/impl/process.js">process</a>)、<a href="https://github.com/ubolonton/js-csp/blob/master/src/impl/dispatch.js">ticker</a> 等比較底層的基礎建設都做起來了，也就是如此才能讓程式碼和 Go 的看起來這麼接近。</p>

<p>js-csp 基本上就是仿照 Go 的的語法來設計，只是常常需要 yield，語法還是不如 Go 來的簡潔，至於何種情境比較適合使用 CSP 呢，以 channel 的特性來說，目前看起來是常常會發生的 event 比較適合，像是常常被拿出來講的 mousemove 事件，另外就是有要分 thread 做平行運算的話也不錯，不過目前看起來是無法接上 WebWorker，主要是因為 <code>postMessage</code> 無法傳遞物件 instance 過去，而是會<a href="https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/The_structured_clone_algorithm">複製</a>一份；另外因為 channel 可以關起來，所以要用來實做 Promise 也不是不行，不過就沒什麼必要如此搞就是。</p>

<p>講到做事件的處理，應該會有人注意到實做上的細節問題，就是要怎麼讓多個 process 去讀取同一個 channel 呢，一般而言，channel 的訊息是只能讀取一次的，就是說雖然你可以多個 process 等同一個 channel 的訊息，但是只會有一個 process 會真的拿到新的訊息，而實務上，一個事件綁了多個 handler 的情形非常常見，照 channel 的機制，應該是不能用下去的，不然就要自己管裡 handler，又多繞了一圈，事實上，CSP 模型是有一些<a href="https://github.com/ubolonton/js-csp/blob/master/src/csp.operations.js">運算</a>可以用的，像要處理多個 handler 的問題，就可以用 <code>mult</code>，可以把一個 channel 轉成<a href="http://rupsshankar.tumblr.com/post/66648884392/demystifying-core-asyncs-tap-and-mult">一對多</a>，其它還有多對一的 share resource、Clojure 的 onto <a href="http://www.slideshare.net/borgesleonardo/clojure-reducers-cljsyd-aug-2012?ref=http://www.leonardoborges.com/writings/presentations/">等等</a>，應該是想的到的情形都已經有數學模型或是不同語言的實做可以處理了，不過 js-csp 在這部分還在開發中，像是 mult 就還在 beta 階段，其實還不太能真的用，作者有說現在的介面可能會改，也因此還沒寫到文件裡面。</p>

<p>最後想要記錄一下 Clojure 所提出的 transducer，transducer 的目的是讓 reduce 的操作可以用 compose 來組合，什麼是 reduce  操作呢，其實包括像 map、filter 都可以算是，但是這些操作以前是無法用 function composition 來做組合的，直到有了 transducer，又加上 transducer 把處理資料的型別也 decouple 出去了，所以 channel message 也可以利用。有兩篇文章可以參考，第一篇文章是 <a href="http://phuu.net/2014/08/31/csp-and-transducers.html">CSP and transducers in JavaScript</a>，這篇講得非常清楚，他是從無到有把 transducer 建構起來，我是第二次認真看這篇文章才理解的，另外一篇文章是 <a href="http://jlongster.com/Transducers.js--A-JavaScript-Library-for-Transformation-of-Data">Transducers.js: A JavaScript Library for Transformation of Data</a>，是 Transducer.js 的作者寫的，從不太一樣的角度來看 Transducer 這個設計，有機會再來分享詳細一點。</p>

<p>這篇文章其實也不算是介紹或教學 CSP on JavaScript，比較是記錄一些我花時間想辦法理解的問題，包括為什麼現在才有人用 JavaScript 實做 CSP，實際上怎麼實做，目前適用的地方，還有整理了對 transducer 的理解，如果單純是想理解 CSP，除了前面提到的文章之外，還有幾篇文章可以參考 <a href="https://swannodette.github.io/2013/08/24/es6-generators-and-csp/">ES6 Generators Deliver Go Style Concurrency</a>、<a href="http://jlongster.com/Taming-the-Asynchronous-Beast-with-CSP-in-JavaScript">Taming the Asynchronous Beast with CSP Channels in JavaScript</a>。</p>
</b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000833" baseName="tokyo-illumination">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2015-02-10</b:date>
				<b:time>23:49:05</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>東京點燈</b:title>
			<b:content>
				<b:summary> 去年底去那趟東京主要的目標之一是看聖誕的燈飾，日本人喜歡用 Illumination 這個字，如果是用這個字的話，翻譯起來就變成是點燈了，總之，本來主要的目標大概就是六本木 Midtown、Caretta 汐留和台場富士電視台三個，不過日本聖誕節前真的是到處都有燈飾，上面第一張照片就是 Midtown 裡面的景色了。...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16179501782/" title="東京 Midtown Illumination by othree, on Flickr"><img src="https://farm8.staticflickr.com/7469/16179501782_e2bf9e5441_b.jpg" width="1024" height="683" alt="東京 Midtown Illumination" srcset="https://farm8.staticflickr.com/7469/16179501782_e2bf9e5441_b.jpg 1024w, https://farm8.staticflickr.com/7469/16179501782_c42b181073_h.jpg 1600w" /></a></p>

<p>去年底去那趟東京主要的目標之一是看聖誕的燈飾，日本人喜歡用 Illumination 這個字，如果是用這個字的話，翻譯起來就變成是點燈了，總之，本來主要的目標大概就是六本木 Midtown、Caretta  汐留和台場富士電視台三個，不過日本聖誕節前真的是到處都有燈飾，上面第一張照片就是 Midtown 裡面的景色了。</p>
</b:mainContent>
				<b:extendContent><p>其實在羽田機場就有了，用小燈點綴的樹枝。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16180233965/" title="東京 羽田機場 by othree, on Flickr"><img src="https://farm8.staticflickr.com/7476/16180233965_30d7dd550d_b.jpg" width="683" height="1024" alt="東京 羽田機場" srcset="https://farm8.staticflickr.com/7476/16180233965_30d7dd550d_b.jpg 683w, https://farm8.staticflickr.com/7476/16180233965_e77b16ee19_h.jpg 1067w" /></a></p>

<p>接著去了 Midtown，這邊排隊的人就很多，要繞來繞去，最後才走到展區，平常展區那塊草地和步道是直接可以走過去的。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/15994464187/" title="東京 Midtown Illumination by othree, on Flickr"><img src="https://farm8.staticflickr.com/7503/15994464187_f9e10f6a73_b.jpg" width="1024" height="683" alt="東京 Midtown Illumination" srcset="https://farm8.staticflickr.com/7503/15994464187_f9e10f6a73_b.jpg 1024w, https://farm8.staticflickr.com/7503/15994464187_6d61f6920a_h.jpg 1600w" /></a></p>

<p>主要展區，有不斷輪撥的表演，藍光配上音效營造出讓人置身未來世界的感覺。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/15557892534/" title="東京 Midtown Illumination by othree, on Flickr"><img src="https://farm8.staticflickr.com/7489/15557892534_a34eea8f8e_b.jpg" width="1024" height="683" alt="東京 Midtown Illumination" srcset="https://farm8.staticflickr.com/7489/15557892534_a34eea8f8e_b.jpg 1024w, https://farm8.staticflickr.com/7489/15557892534_f4179e5608_h.jpg 1600w" /></a></p>

<p>去森大樓看東京鐵塔後，就在裡面發現天花板上的雪花燈飾。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16179485552/" title="東京 六本木 森大樓 by othree, on Flickr"><img src="https://farm9.staticflickr.com/8678/16179485552_bcbfb958e5_b.jpg" width="683" height="1024" alt="東京 六本木 森大樓" srcset="https://farm9.staticflickr.com/8678/16179485552_bcbfb958e5_b.jpg 683w, https://farm9.staticflickr.com/8678/16179485552_8f87b5b969_h.jpg 1067w" /></a></p>

<p>然後是森大樓外面的聖誕樹，很特別的設計，基本上是拍不太起來的設計，只能故意對不準焦來讓顏色顯現。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/15560455013/" title="東京 六本木 森大樓 by othree, on Flickr"><img src="https://farm9.staticflickr.com/8665/15560455013_79a812fdf6_b.jpg" width="683" height="1024" alt="東京 六本木 森大樓" srcset="https://farm9.staticflickr.com/8665/15560455013_79a812fdf6_b.jpg 683w, https://farm9.staticflickr.com/8665/15560455013_c5c1926110_h.jpg 1067w" /></a></p>

<p>到箱根的小王子博物館也有聖誕樹和特別的投影表演。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/15993952618/" title="箱根 小王子博物館 星の王子さまミュージアム by othree, on Flickr"><img src="https://farm8.staticflickr.com/7560/15993952618_d6f5768f3f_b.jpg" width="1024" height="683" alt="箱根 小王子博物館 星の王子さまミュージアム" srcset="https://farm8.staticflickr.com/7560/15993952618_d6f5768f3f_b.jpg 1024w, https://farm8.staticflickr.com/7560/15993952618_e40aceb304_h.jpg 1600w" /></a></p>

<p>然後是之前介紹過的 Disney TIMELESS STORY。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/15999327639/" title="新丸大樓 魔髮奇緣 by othree, on Flickr"><img src="https://farm8.staticflickr.com/7531/15999327639_d7e1eef74b_b.jpg" width="1024" height="683" alt="新丸大樓 魔髮奇緣" srcset="https://farm8.staticflickr.com/7531/15999327639_d7e1eef74b_b.jpg 1024w, https://farm8.staticflickr.com/7531/15999327639_3355eb0917_h.jpg 1600w" /></a></p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/15999578907/" title="丸大樓 Frozen by othree, on Flickr"><img src="https://farm9.staticflickr.com/8587/15999578907_2502cbddb4_b.jpg" width="1024" height="683" alt="丸大樓 Frozen" srcset="https://farm9.staticflickr.com/8587/15999578907_2502cbddb4_b.jpg 1024w, https://farm9.staticflickr.com/8587/15999578907_edabdcc82a_h.jpg 1600w" /></a></p>

<p>兩棟丸大樓後面的仲通り也裝飾的很漂亮，本來在六本木沒看到的街道燈飾也在這邊看到了></p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16185368255/" title="丸の内仲通り イルミネーション 丸之內仲通 illumination by othree, on Flickr"><img src="https://farm8.staticflickr.com/7562/16185368255_7920432223_b.jpg" width="1024" height="683" alt="丸の内仲通り イルミネーション 丸之內仲通 illumination" srcset="https://farm8.staticflickr.com/7562/16185368255_7920432223_b.jpg 1024w, https://farm8.staticflickr.com/7562/16185368255_23a276e65a_h.jpg 1600w" /></a></p>

<p>然後是東京郵政總局改的 Kitte 裡面也有聖誕樹，而且也有固定的表演。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16184598772/" title="Kitte by othree, on Flickr"><img src="https://farm9.staticflickr.com/8566/16184598772_751560bbd9_b.jpg" width="1024" height="683" alt="Kitte" srcset="https://farm9.staticflickr.com/8566/16184598772_751560bbd9_b.jpg 1024w, https://farm9.staticflickr.com/8566/16184598772_56eac1a650_h.jpg 1600w" /></a></p>

<p>這是旅館附近的大樓，回去時剛好看到。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/15562993324/" title="東京 田町 by othree, on Flickr"><img src="https://farm9.staticflickr.com/8584/15562993324_591684a8a2_b.jpg" width="1024" height="683" alt="東京 田町" srcset="https://farm9.staticflickr.com/8584/15562993324_591684a8a2_b.jpg 1024w, https://farm9.staticflickr.com/8584/15562993324_d2e44a007a_h.jpg 1600w" /></a></p>

<p>再來就是彩色的彩虹橋。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16007370108/" title="彩虹橋 by othree, on Flickr"><img src="https://farm9.staticflickr.com/8563/16007370108_0e2501b4f9_b.jpg" width="1024" height="683" alt="彩虹橋" srcset="https://farm9.staticflickr.com/8563/16007370108_0e2501b4f9_b.jpg 1024w, https://farm9.staticflickr.com/8563/16007370108_833b4be184_h.jpg 1600w" /></a></p>

<p>小小的台場點燈。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/15575022383/" title="台場  illumination by othree, on Flickr"><img src="https://farm8.staticflickr.com/7478/15575022383_44e08d2af3_b.jpg" width="1024" height="683" alt="台場  illumination" srcset="https://farm8.staticflickr.com/7478/15575022383_44e08d2af3_b.jpg 1024w, https://farm8.staticflickr.com/7478/15575022383_5ba23a4fb6_h.jpg 1600w" /></a></p>

<p>目標之二的富士電視台，還蠻有趣的，不過其實內容都是在廣告，然後現場直接用肉眼看會發現畫面太大，點陣圖看不太出來是什麼，透過相機小螢幕反而可以看的出來。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/15575022383/" title="台場  illumination by othree, on Flickr"><img src="https://farm8.staticflickr.com/7478/15575022383_44e08d2af3_b.jpg" width="1024" height="683" alt="台場  illumination" srcset="https://farm8.staticflickr.com/7478/15575022383_44e08d2af3_b.jpg 1024w, https://farm8.staticflickr.com/7478/15575022383_5ba23a4fb6_h.jpg 1600w" /></a></p>

<p>第一次到台場 Decks，他外面也有一顆聖誕樹。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16194829755/" title="台場 Decks by othree, on Flickr"><img src="https://farm8.staticflickr.com/7552/16194829755_f9ae1de7dc_b.jpg" width="1024" height="683" alt="台場 Decks" srcset="https://farm8.staticflickr.com/7552/16194829755_f9ae1de7dc_b.jpg 1024w, https://farm8.staticflickr.com/7552/16194829755_f75b51cc79_h.jpg 1600w" /></a></p>

<p>目標之三的 Caretta  汐留，最喜歡的點，剛好走天橋過去，從上面看的時候真的有種異世界的感覺，在下面人很多沒機會這樣感覺～</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16203842762/" title="Caretta  汐留 Illumination by othree, on Flickr"><img src="https://farm9.staticflickr.com/8610/16203842762_3a4695db7f_b.jpg" width="1024" height="683" alt="Caretta  汐留 Illumination" srcset="https://farm9.staticflickr.com/8610/16203842762_3a4695db7f_b.jpg 1024w, https://farm9.staticflickr.com/8610/16203842762_80fc2e73fd_h.jpg 1600w" /></a></p>

<p>這裡其實還可以排隊去照相，幾乎都是情侶，然後表演很頻繁，大概 15 分一次，在表演間的空檔才輪流拍照，另外也可以去走走道，穿過燈光的隧道，也是表演間的空檔一次開放一批人。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16202775001/" title="Caretta  汐留 Illumination by othree, on Flickr"><img src="https://farm9.staticflickr.com/8658/16202775001_c0d468fa97_b.jpg" width="1024" height="683" alt="Caretta  汐留 Illumination" srcset="https://farm9.staticflickr.com/8658/16202775001_c0d468fa97_b.jpg 1024w, https://farm9.staticflickr.com/8658/16202775001_d0542c6dff_h.jpg 1600w" /></a></p>

<p>Caretta  汐留點燈晚上很漂亮，不過白天經過的話，就會夢想破滅了～～</p>

<p>迪士尼樂園裡面也有很大的聖誕樹。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16049979098/" title="Tokyo Disney Resort by othree, on Flickr"><img src="https://farm8.staticflickr.com/7564/16049979098_b79bdbaed1_b.jpg" width="1024" height="683" alt="Tokyo Disney Resort" srcset="https://farm8.staticflickr.com/7564/16049979098_b79bdbaed1_b.jpg 1024w, https://farm8.staticflickr.com/7564/16049979098_db7fb75ee0_h.jpg 1600w" /></a></p>

<p>最後一天到銀座也看到一些特別的裝飾，像是 BVLGARI 的蛇。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16077055787/" title="BVLGARI 銀座 by othree, on Flickr"><img src="https://farm8.staticflickr.com/7527/16077055787_c339145a3e_b.jpg" width="683" height="1024" alt="BVLGARI 銀座" srcset="https://farm8.staticflickr.com/7527/16077055787_c339145a3e_b.jpg 683w, https://farm8.staticflickr.com/7527/16077055787_0fccbe9877_h.jpg 1067w" /></a></p>

<p>還有其中一條小路的路燈。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16261121991/" title="Ginza by othree, on Flickr"><img src="https://farm9.staticflickr.com/8572/16261121991_eef742a898_b.jpg" width="1024" height="683" alt="Ginza" srcset="https://farm9.staticflickr.com/8572/16261121991_eef742a898_b.jpg 1024w, https://farm9.staticflickr.com/8572/16261121991_c3b79e2d1a_h.jpg 1600w" /></a></p>

<p>以上就是這趟看到的聖誕燈飾了，有一些聖誕節過後就沒有了，有一些會維持到新年過後，所以如果瞄準這個來看的話還是要聖誕節前就到，數量真的是很多，日本好浪費電的啊～～</p>
</b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000832" baseName="tokyo-tower">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2015-02-03</b:date>
				<b:time>23:29:21</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>Tokyo Tower</b:title>
			<b:content>
				<b:summary> 去年底去日本的主要目標是看聖誕燈飾，結果而言是真的看到很多各式各樣的聖誕燈飾，不過另外還有一個收穫是也看到很多的東京鐵塔，第一張是森大樓的標準色。...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="https://www.flickr.com/photos/othree/15557880724/" title="東京 六本木 森大樓 夜景 by othree, on Flickr"><img src="https://farm8.staticflickr.com/7482/15557880724_a066ddf5df_b.jpg" width="1024" height="683" alt="東京 六本木 森大樓 夜景" srcset="https://farm8.staticflickr.com/7482/15557880724_a066ddf5df_b.jpg 1024w, https://farm8.staticflickr.com/7482/15557880724_c87370f081_h.jpg 1600w" /></a></p>

<p>去年底去日本的主要目標是看聖誕燈飾，結果而言是真的看到很多各式各樣的聖誕燈飾，不過另外還有一個收穫是也看到很多的東京鐵塔，第一張是森大樓的標準色。</p>
</b:mainContent>
				<b:extendContent><p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16154446766/" title="東京 六本木 森大樓 夜景 by othree, on Flickr"><img src="https://farm8.staticflickr.com/7463/16154446766_bef5a1c9d8_b.jpg" width="1024" height="683" alt="東京 六本木 森大樓 夜景" srcset="https://farm8.staticflickr.com/7463/16154446766_bef5a1c9d8_b.jpg 1024w, https://farm8.staticflickr.com/7463/16154446766_6320c2dc55_h.jpg 1600w" /></a></p>

<p>鑽石點燈。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16154465746/" title="Tokyo Tower by othree, on Flickr"><img src="https://farm8.staticflickr.com/7560/16154465746_c0a1f43024_b.jpg" width="1024" height="683" alt="Tokyo Tower" srcset="https://farm8.staticflickr.com/7560/16154465746_c0a1f43024_b.jpg 1024w, https://farm8.staticflickr.com/7560/16154465746_7f5dd5821c_h.jpg 1600w" /></a></p>

<p>從第一間旅館 Grand Arc 半藏門的房間就看的到了，這還是標準的色。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/15999556357/" title="東京鐵塔 by othree, on Flickr"><img src="https://farm8.staticflickr.com/7530/15999556357_70a6ab653c_b.jpg" width="683" height="1024" alt="東京鐵塔" srcset="https://farm8.staticflickr.com/7530/15999556357_70a6ab653c_b.jpg 683w, https://farm8.staticflickr.com/7530/15999556357_a653633b68_h.jpg 1067w" /></a></p>

<p>接近聖誕節開始有鑽石點燈加上愛心，這邊是第二間 JAL CITY 田町看過去的，聽說另外一邊的房間看的到彩虹橋。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16194838915/" title="東京 by othree, on Flickr"><img src="https://farm8.staticflickr.com/7534/16194838915_e918aa545a_b.jpg" width="1024" height="683" alt="東京" srcset="https://farm8.staticflickr.com/7534/16194838915_e918aa545a_b.jpg 1024w, https://farm8.staticflickr.com/7534/16194838915_e0ff7a0ed4_h.jpg 1600w" /></a></p>

<p>白天看愛心的部分。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16007370108/" title="彩虹橋 by othree, on Flickr"><img src="https://farm9.staticflickr.com/8563/16007370108_0e2501b4f9_b.jpg" width="1024" height="683" alt="彩虹橋" srcset="https://farm9.staticflickr.com/8563/16007370108_0e2501b4f9_b.jpg 1024w, https://farm9.staticflickr.com/8563/16007370108_833b4be184_h.jpg 1600w" /></a></p>

<p>然後去台場時還看到彩虹的彩虹橋加上東京鐵塔。</p>

<p><a class="thumbnail" href="https://www.flickr.com/photos/othree/16207863888/" title="Tokyo Tower 2014 by othree, on Flickr"><img src="https://farm8.staticflickr.com/7290/16207863888_019f8c7b5d_b.jpg" width="683" height="1024" alt="Tokyo Tower 2014" srcset="https://farm8.staticflickr.com/7290/16207863888_019f8c7b5d_b.jpg 683w, https://farm8.staticflickr.com/7290/16207863888_4308134cb9_h.jpg 1067w" /></a></p>

<p>過聖誕節之後變成 2014，據說過元旦後會有 2015，只是就沒待到那時候就沒看到了。</p>
</b:extendContent>
			</b:content>


		</b:entry>

	</b:entries>
</b:blog>
