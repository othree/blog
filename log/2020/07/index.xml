<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>m</b:listType>
			<b:listData listID="2020-07">July 2020</b:listData>

			<b:previous>
				<b:mTitle>May 2020</b:mTitle>
				<b:mDate>2020/05</b:mDate>
			</b:previous>


			<b:next>
				<b:mTitle>August 2020</b:mTitle>
				<b:mDate>2020/08</b:mDate>				
			</b:next>

		</b:entriesMeta>

		<b:entry entryID="000970" baseName="safari-3rd-party-cookie">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2020-07-17</b:date>
				<b:time>21:51:00</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>Safari 3rd-Party Cookie</b:title>
			<b:content>
				<b:summary> Apple 之前有宣告要完全阻擋 3rd-party cookie，iThome 也有相關的報導，iOS 和 iPadOS 應該是已經上線了，然後最近 Mac 版 Safari 也快要上線了，所以這篇來記錄一下要怎樣因應還有一些參考資料。 其實真的會寫到第三方 cookie 的服務是沒想像多的，如果不是開發給其它網站用的第三方服務的話（不是掛 script 而已），那其實沒那麼常見，舉例來說：很多人可能會覺得 Google Analytic 會受影響，但是其實並沒有，一般網站掛 Google Analytic 算是掛上 3rd-party script，但是它寫的 cookie 是 1st party cookie，也就是寫在你的網站的 domain 下，Google 的文件也有很詳細的說明他的每個 cookie 的用途，然後仔細看就會找到還有寫如何跨網域追蹤，而這其實是需要帶一些參數過去的，如果 GA 是用 3rd-party cookie...</b:summary>
				<b:mainContent><p><a class="thumbnail" href="https://www.flickr.com/photos/othree/50122828112/" title="Apple ITP by othree, on Flickr"><img src="https://live.staticflickr.com/65535/50122828112_79ce3e54d3_b.jpg" intrinsicsize="1024x837" width="936" height="765" alt="Apple ITP" srcset="https://live.staticflickr.com/65535/50122828112_79ce3e54d3_b.jpg 1024w, https://live.staticflickr.com/65535/50122828112_73eaebf7b0_h.jpg 1600w" /></a></p>
<p>Apple 之前有<a href="https://webkit.org/blog/10218/full-third-party-cookie-blocking-and-more/">宣告</a>要完全阻擋 3rd-party cookie，iThome 也有相關的<a href="https://www.ithome.com.tw/news/136565">報導</a>，iOS 和 iPadOS 應該是已經上線了，然後最近 Mac 版 Safari 也快要上線了，所以這篇來記錄一下要怎樣因應還有一些參考資料。</p>
<p>其實真的會寫到第三方 cookie 的服務是沒想像多的，如果不是開發給其它網站用的第三方服務的話（不是掛 script 而已），那其實沒那麼常見，舉例來說：很多人可能會覺得 Google Analytic 會受影響，但是其實並沒有，一般網站掛 Google Analytic 算是掛上 3rd-party script，但是它寫的 cookie 是 1st party cookie，也就是寫在你的網站的 domain 下，Google 的文件也有很詳細的說明他的每個 cookie 的<a href="https://developers.google.com/analytics/devguides/collection/analyticsjs/cookie-usage">用途</a>，然後仔細看就會找到還有寫如何<a href="https://developers.google.com/analytics/devguides/collection/analyticsjs/cross-domain">跨網域追蹤</a>，而這其實是需要帶一些參數過去的，如果 GA 是用 3rd-party cookie 寫在 Google 自己的 domain 的話，要跨網域追蹤就不需要這樣帶參數了，我是覺得 Apple 的 ITP 比較是針對廣告和 Facebook，早幾年前 Facebook 可以用 like button 來簡單的做到跨站追蹤，現在那些 iframe 都會被認為是 3rd-party，cookie 會和 1st-party 放不同區（partition），甚至本來如果有先去看過 facebook.com 之後，會有 24 小時可以存取該網域 3rd-party cookie 的能力也在 <a href="https://webkit.org/blog/8311/intelligent-tracking-prevention-2-0/">ITP 2.0</a> 移除，facebook 後來加上了 <code>fbclid</code> 這個參數來追蹤連出去的連結，然後 <a href="https://webkit.org/blog/8828/intelligent-tracking-prevention-2-2/">ITP 2.2</a> 就又針對這種連結裝飾（link decoration）也設了 cookie 的存取限制（剛好同時也影響到 Google Analytic）。</p>
<p>如果真的是需要作為 3rd-party 端提供服務的話怎麼辦呢？其實一開始 Apple 那篇<a href="https://webkit.org/blog/10218/full-third-party-cookie-blocking-and-more/">文章</a>，有列了幾個方案，其中正規的兩個方案：</p>
<ol>
<li>用 OAuth 2.0 作為 user auth 的方案，然後第一方網站拿到 token 後自己存好（作為 1st-party cookie 或是其它儲存方法）。</li>
<li>用 <a href="https://webkit.org/blog/8124/introducing-storage-access-api/">Storage Access API</a>，這是 Apple 所提出的 Web API，在被視為第三方的 context 中（例如 iframe），可以透過 Storage Access API 來取得 1st-party cookie 的存取權限，不過一般人直接用這個 API 要權限，可能會覺得奇怪怎麼 Safari 都沒有問使用者要不要給，權限就拿到了，其實這是因為 Apple 那邊的想法是這個 API 要盡可能的不干擾使用者，所以只有被歸類（classified）為有追蹤能力的域名才會跳出視窗跟使用者詢問，至於這個歸類的方法是在 <a href="https://webkit.org/blog/7675/intelligent-tracking-prevention/">ITP 1.0</a> 中提出的，Apple 考慮到隱私問題，所以這個機制是用機器學習的，每台電腦/裝置都維護自己的清單，沒有中心化的黑名單（Firefox 應該是用這種方法），而如果想要親自驗證自己的 domain 要是被歸類為追蹤網站的話，會發生什麼事的話，也有篇<a href="https://webkit.org/blog/8387/itp-debug-mode-in-safari-technology-preview-62/">文章</a>介紹，我自己有測試過也確實看到了那個詢問視窗。</li>
</ol>
<p>然後如果要用 Storage Access API，其實還有些限制，Safari 從 1.0 開始，就有個針對 3rd-party cookie 的限制，就是使用者要曾經直接訪問過該網域，並且寫入過 1st-party cookie，之後該網域才能對 3rd-party cookie 做存取，而這項限制也延伸到 Storage Access API 這邊，一樣要先作為 1st-party 寫入過 cookie，之後才能夠透過 Storage Access API 取得 1st-party cookie 的存取權限，Apple 負責 ITP 的 <a href="https://twitter.com/johnwilander">John Wilander</a> 最近正在寫相關的<a href="https://bugs.webkit.org/show_bug.cgi?id=193277#c7">文件</a>，裡面就有提到，然後這個限制 Firefox 也有，不過 Firefox 似乎是 30 天內有訪問過該網域就可以。</p>
<p>寫到這邊，其實有件事情忘記先提，就是網路上你去搜尋 <strong>Safari 3rd Party Cookie</strong> 會找到一些方法說可以成功讀寫 3rd-party cookie 的，那些全部都已經失效了，而且不只是 cookie，所有可以寫入的東西像是 DOM Storage 也是有受到一樣的限制保護的（然後 Storage Access API 現在<a href="https://twitter.com/jonathandavis/status/1204102948571119616">只能拿到 cookie 的權限</a>），目前也沒有出現其它的繞過方式，而且就算有人找到，Apple 都會修掉的，所以如果有這需求還是趕快用 Storage Access API 實做吧（別忘了 feature detection）。</p>
<p>然後或許有人會覺得 ITP 沒檔到 Google Analytic 好像沒什麼意義，其實 <a href="https://twitter.com/johnwilander">John Wilander</a> 早在 2017 年就有在 WebAppSec 稍微<a href="https://lists.w3.org/Archives/Public/public-webappsec/2017Mar/0034.html">提過 Single Trust</a> 這件事，提的就是網頁內掛的 3rd-party script 其實是安全性隱憂，應該只有同 domain 的東西可以信任，在 cookie 這邊來說就是 3rd-party script 不應該有存取網站 1st-party cookie 的權限（不過後來發生的是<a href="https://twitter.com/GossiTheDog/status/1038333980423204865">某航空公司的信用卡資訊輸入頁面放的第三方 script 會做 key log</a>），如果真的進行，這個改變可以想像的到影響非常的巨大，舉例來說，以前的 Performance Practice 其中一項是把 static file 放到 CDN 並且用不同 domain host，但是這樣其實就會被當成是 3rd-party script 了，雖然他在我們的認知下是可信任的，然後目前也有非常大量的現存網站是這樣做。目前 Apple 也有在做一些相關的研究，其中一個已經廣為人知(?)的就是 Safari 現在有在<a href="https://bugs.webkit.org/show_bug.cgi?id=204262">紀錄 3rd-party script 的數量</a>，另外就是我之前在 <a href="https://blog.othree.net/log/2019/05/27/incrementally-better-cookies/">SameSite Cookie</a> 這篇文章有提到的，Mike West 起草的 <a href="https://github.com/WICG/first-party-sets">First-Party Sets</a>，透過 <code>/.well-known/</code> 下的檔案定義可以被認為是 1st-party 的 domain 清單，假設未來真的要做到 single trust 的程度，要處理 CDN 之類的問題，像是 First-Party Sets 的機制就不可少。</p>
<p>最後附上一些延伸的參考資料：</p>
<ul>
<li><a href="https://github.com/whatwg/html/issues/3338#issuecomment-357790890">在提案 Storage Access API 時，Apple 工程師整理的 Safari 行為</a></li>
<li><a href="https://medium.com/@meistudio/the-rise-of-privacy-8c9ea5f53b09">Paul Li 之前在介紹 SameSite Cookie 時也有討論到相關的問題，並且還有一個 test suite</a></li>
<li><a href="https://www.tenmax.io/archives/14012">TenMax 介紹 ITP 的這篇文章的 ITP 發展歷程整理的很棒</a></li>
<li><a href="https://note.com/martech">日本的 AD EBiS マーテック研究会 的文章資訊都很新且深入</a></li>
</ul>
</b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

	</b:entries>
</b:blog>
