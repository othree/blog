<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="/main.xsl"?>
<b:blog xmlns="http://www.w3.org/1999/xhtml" xmlns:b="http://blog.othree.net"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://blog.othree.net http://blog.othree.net/blooog.xsd">
	<b:blogTitle>O3noBLOG</b:blogTitle>
	<b:blogDescription></b:blogDescription>
	<b:entries>
		<b:entriesMeta>
			<b:listType>m</b:listType>
			<b:listData listID="2007-01">January 2007</b:listData>

			<b:previous>
				<b:mTitle>December 2006</b:mTitle>
				<b:mDate>2006/12</b:mDate>
			</b:previous>


			<b:next>
				<b:mTitle>February 2007</b:mTitle>
				<b:mDate>2007/02</b:mDate>				
			</b:next>

		</b:entriesMeta>

		<b:entry entryID="000382" baseName="adult-buy">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2007-01-27</b:date>
				<b:time>14:37:59</b:time>
			</b:datetime>
			<b:category>buy</b:category>
			<b:title>大人買</b:title>
			<b:content>
				<b:summary> 所謂大人買就是一個東西買很多個，而根據買的分數不同，還會有不同的購買目的，像是有買三份用來使用、收藏、增值，或是買五份來使用、收藏、增值、觀賞、傳教，我所聽過最多的有七份買法，不過我已經忘了七份分別是買來做何用途的。...</b:summary>
				<b:mainContent><p><a href="https://blog.othree.net/log/2007/01/27/adult-buy/DSCF1008.JPG" class="thickbox"><img alt="兩台Wii !!" src="https://blog.othree.net/log/2007/01/27/adult-buy/DSCF1008-thumb-400x300.jpg" width="400" height="300" /></a></p>

<p>所謂<strong>大人買</strong>就是一個東西買很多個，而根據買的分數不同，還會有不同的購買目的，像是有買三份用來使用、收藏、增值，或是買五份來使用、收藏、增值、觀賞、傳教，我所聽過最多的有七份買法，不過我已經忘了七份分別是買來做何用途的。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000381" baseName="negative-captcha">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2007-01-24</b:date>
				<b:time>00:16:27</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>反向CAPTCHA</b:title>
			<b:content>
				<b:summary>CAPTCHA在blog領域聽到大概就是用來反垃圾留言的，多數都是用圖形函式庫製造一張機器無法順利判讀的文字圖形，留言者要在網站上輸入該圖片內的文字或數字才可以順利留言，不過此一機制也產生了親和力的問題，因此又有了一些替代方案，像是基本常識問答來取代圖形猜字等，不過前幾天看到另一種很有趣的方法，本來的CAPTCHA是需要使用者多填一個欄位，現在變成有一個欄位不能填，我們可以把那個欄位的名稱取為email、homepage等等看起來很基本的欄位，但是用CSS或其他方法來隱藏他，讓使用者透過瀏覽器看不到該欄位，但是留言機器人並不會理會CSS的樣式所造成的影響，看到欄位就給他填下去，所以伺服器端只要抓到該欄位有值就.....。 至於純文字瀏覽器可以加註說明文字，對親和力的影響不會很大，並且此一方法施行很容易，不用抓別人的程式碼或自己研究圖形函式庫，只要加些條件關係就可以了，我覺得是現在看到最好的CAPTCHA機制，不過不知道效果如何就是:P。...</b:summary>
				<b:mainContent><p><a href="http://zh.wikipedia.org/w/index.php?title=Captcha&amp;variant=zh-tw"><span class="caps">CAPTCHA</span></a>在blog領域聽到大概就是用來反垃圾留言的，多數都是用圖形函式庫製造一張機器無法順利判讀的文字圖形，留言者要在網站上輸入該圖片內的文字或數字才可以順利留言，不過此一機制也產生了親和力的問題，因此又有了一些替代方案，像是基本常識問答來取代圖形猜字等，不過前幾天看到另一種很<a href="http://damienkatz.net/2007/01/negative_captch.html">有趣的方法</a>，本來的CAPTCHA是需要使用者多填一個欄位，現在變成有一個欄位不能填，我們可以把那個欄位的名稱取為<strong>email</strong>、<strong>homepage</strong>等等看起來很基本的欄位，但是用CSS或其他方法來隱藏他，讓使用者透過瀏覽器看不到該欄位，但是留言機器人並不會理會CSS的樣式所造成的影響，看到欄位就給他填下去，所以伺服器端只要抓到該欄位有值就.....。</p>

<p>至於純文字瀏覽器可以加註說明文字，對親和力的影響不會很大，並且此一方法施行很容易，不用抓別人的程式碼或自己研究圖形函式庫，只要加些條件關係就可以了，我覺得是現在看到最好的CAPTCHA機制，不過不知道效果如何就是:P。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000380" baseName="save-your-firefox">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2007-01-23</b:date>
				<b:time>19:03:31</b:time>
			</b:datetime>
			<b:category>software</b:category>
			<b:title>Save Your Firefox</b:title>
			<b:content>
				<b:summary>hlb今天發表了Crash Your Firefox，如果你不幸點了第二個，然後又選擇要還原當機前的分頁狀態，你很可能就會陷入無限當機循環，這時候其實你可以不用砍個人設定檔，只要修改Firefox紀錄分頁狀態的檔案就可以了，該檔案就是個人設定資料夾的sessionstore.js這個java script檔案，用文字編輯軟體開啟後尋找http://hlb.yichi.org/test/firefox/crash-by-column2.html這個字串，隨便改成其他的字串後即可開啟Friefox。...</b:summary>
				<b:mainContent><p>hlb今天發表了<a href="http://hlb.yichi.org/blog/2007/01/23/151">Crash Your Firefox</a>，如果你不幸點了第二個，然後又選擇要還原當機前的分頁狀態，你很可能就會陷入無限當機循環，這時候其實你可以不用砍個人設定檔，只要修改Firefox紀錄分頁狀態的檔案就可以了，該檔案就是個人<a href="http://wiki.moztw.org/index.php/%E8%A8%AD%E5%AE%9A%E6%AA%94%E8%A9%B3%E8%A7%A3">設定資料夾</a>的<strong>sessionstore.js</strong>這個java script檔案，用文字編輯軟體開啟後尋找<strong>http://hlb.yichi.org/test/firefox/crash-by-column2.html</strong>這個字串，隨便改成其他的字串後即可開啟Friefox。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000379" baseName="css-study-2007">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2007-01-20</b:date>
				<b:time>23:54:22</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>日本的CSS 新春勉強會</b:title>
			<b:content>
				<b:summary>上週日本某家公司開了一場CSS勉強會（讀書會），會後出來了一些投影片，有興趣的可以看看，目前都整理在2007 CSS Study Meeting這裡，其中我覺得最有趣的是WiiとCSS這篇，沒想到Wii的Opera雖然有掉些中文字，不過已經可以通過Acid2了，今天看到雜誌說預計6、7月會推出正式版，然後要用500點來買（500日圓）。還有一份CSS + JavaScript Tips，可以直接從47頁開始，看過這篇我才知道現在javascript原來也可以新增CSS規則，不是只能新增inline style。至於其他的投影片就不是完全推薦啦，有一兩份投影片用很奇怪的方式來呈現，看起來很累。...</b:summary>
				<b:mainContent><p>上週日本某家公司開了一場CSS勉強會（讀書會），會後出來了一些投影片，有興趣的可以看看，目前都整理在<a href="http://artcode.g.hatena.ne.jp/keyword/2007%20CSS%20Study%20Meeting">2007 <span class="caps">CSS</span> Study Meeting</a>這裡，其中我覺得最有趣的是<a href="http://miniturbo.org/sample/presentation/wss/#(1)">WiiとCSS</a>這篇，沒想到Wii的Opera雖然有掉些中文字，不過已經可以通過Acid2了，今天看到雜誌說預計6、7月會推出正式版，然後要用500點來買（500日圓）。還有一份<a href="http://usrb.in/amachang/static/cssstudy/200701/"><span class="caps">CSS </span>+ JavaScript Tips</a>，可以直接從47頁開始，看過這篇我才知道現在javascript原來也可以新增CSS規則，不是只能新增inline style。至於其他的投影片就不是完全推薦啦，有一兩份投影片用很奇怪的方式來呈現，看起來很累。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000378" baseName="toki">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2007-01-18</b:date>
				<b:time>15:56:01</b:time>
			</b:datetime>
			<b:category>acg</b:category>
			<b:title>時をかける少女</b:title>
			<b:content>
				<b:summary> 時をかける少女即將在台上映啦，由博偉引進，將在3/9日上映，翻譯成跳躍吧！時空少女，，不過博偉很沒誠意的連一個中文介紹網頁都沒有，首頁上的海報點下去是連到日本的官方網頁，感覺有點難過QQ，不管如何到時候我一定會去看的啦，畢竟是我現在最想看的劇場版動畫。 1/31更新，中文的網頁出來了！...</b:summary>
				<b:mainContent><p><img src="http://blog.othree.net/log/2007/01/18/toki/toki.jpg" alt="台灣的海報和日本一樣" height="474" width="331" /></p>

<p><strong>時をかける少女</strong>即將在台上映啦，由<a href="http://www.bvi.com.tw/">博偉</a>引進，將在3/9日上映，翻譯成<strong>跳躍吧！時空少女</strong>，，不過博偉很沒誠意的連一個中文介紹網頁都沒有，首頁上的海報點下去是連到<a href="http://www.kadokawa.co.jp/tokikake/index.php?cnts=info">日本的官方網頁</a>，感覺有點難過QQ，不管如何到時候我一定會去看的啦，畢竟是我現在最想看的劇場版動畫。</p>

<p>1/31更新，<a href="http://www.bvi.com.tw/movies/timeleapt/">中文的網頁</a>出來了！</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000377" baseName="cssom">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2007-01-17</b:date>
				<b:time>00:10:17</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>CSSOM</b:title>
			<b:content>
				<b:summary>來自hlb長輩的情報，階層式樣式表物件模型，不要問我他是做什麼的，我不想知道（逃避現實中）。 PS: 這標準(?)還在非常初步的階段，甚至連Working Draft都還不是。...</b:summary>
				<b:mainContent><p>來自<a href="http://hlb.yichi.org/blog/">hlb長輩</a>的情報，<a href="http://dev.w3.org/cvsweb/~checkout~/csswg/cssom/Overview.html?content-type=text%2Fhtml;%20charset=utf-8%23the-stylesheet" title="Cascading Style Sheets Object Model">階層式樣式表物件模型</a>，不要問我他是做什麼的，我不想知道（逃避現實中）。</p>

<p>PS: 這標準(?)還在非常初步的階段，甚至連Working Draft都還不是。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000376" baseName="checkbox">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2007-01-16</b:date>
				<b:time>20:53:36</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>checkbox</b:title>
			<b:content>
				<b:summary>昨天發表了一篇很沒誠意的jQuery 1.1發佈的文章，是因為在研究checkbox的行為，因為想要用jQuery來抓checkbox和radio的值，radio還算簡單： $(&quot;input[@name=fieldname][@checked]&quot;).val(); 這樣一行就可以了，checkbox基本上也可以如法炮製，不過會遇到問題，可能有複數個checkbox的name屬性一樣，像是：...</b:summary>
				<b:mainContent><p>昨天發表了一篇很沒誠意的<a href="http://blog.othree.net/log/2007/01/15/jquery-11/">jQuery 1.1發佈的文章</a>，是因為在研究checkbox的行為，因為想要用jQuery來抓checkbox和radio的值，radio還算簡單：</p>

<pre><code>$(&quot;input[@name=fieldname][@checked]&quot;).val();</code></pre>

<p>這樣一行就可以了，checkbox基本上也可以如法炮製，不過會遇到問題，可能有複數個checkbox的name屬性一樣，像是：</p></b:mainContent>
				<b:extendContent><pre><code>&lt;input type=&quot;checkbox&quot; name=&quot;pet&quot; value=&quot;1&quot;/&gt;
&lt;input type=&quot;checkbox&quot; name=&quot;pet&quot; value=&quot;2&quot;/&gt;
&lt;input type=&quot;checkbox&quot; name=&quot;pet&quot; value=&quot;4&quot;/&gt;</code></pre>

<p>這段HTML裡面有三個checkbox，他們的欄位名稱都是pet，但是值不一樣。假設全部都勾選，送出之後在HTTP header裡面會像是：</p>

<pre><code>pet: 1
pet: 2
pet: 3</code></pre>

<p>眼尖的人就會發現，在大部分的程式語言中，這樣會變成是重複宣告變數，後宣告的值會取代先宣告的值，以PHP為例，在後端程式收到的事實上等於只有<code>$_POST['pet'] = 4;</code>這個值，所以通常PHP程式設計師都會把checkbox的欄位名稱改成<code>pet[]</code>，變成：</p>

<pre><code>&lt;input type=&quot;checkbox&quot; name=&quot;pet[]&quot; value=&quot;1&quot;/&gt;
&lt;input type=&quot;checkbox&quot; name=&quot;pet[]&quot; value=&quot;2&quot;/&gt;
&lt;input type=&quot;checkbox&quot; name=&quot;pet[]&quot; value=&quot;4&quot;/&gt;</code></pre>

<p>這樣後端程式會變成收到一個陣列<code>$_POST['pet'] = array(1,2,4);</code>，其他後端程式語言會變成怎樣我比較不清楚，不過別忘了我是想用jQuery來取值，我努力了一個晚上，結果還是只能用一個function來處理，還沒辦法縮成一行直接在程式碼裡使用：</p>

<pre><code>function getCheckbox (name) {
	var val = [];
	$(&quot;input[@name=&quot;+name+&quot;][@checked]&quot;).each(function(){val.push($(this).val());});
	return val;
}</code></pre>

<p>至於這樣做的原因？是要用來作ajax的資料傳輸用，透過jQuery來傳送表單可以使用<a href="http://www.json.org/"><span class="caps">JSON</span></a>作為參數的格式，並不影響後端程式。ajax的form serialize和deserialize加PHP的<a href="http://www.aurore.net/projects/php-json/">php-json</a>加上<a href="http://adodb.sourceforge.net/"><span class="caps">ADO</span>db</a>的<a href="http://phplens.com/lens/adodb/docs-adodb.htm#autoexecute">AutoExcute</a>，整個合起來超方便的:P。</p>

<p>最後補充，據說jQuery 1.1的選擇器（selector）的速度有大幅度的進步，快了10～20倍。</p></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000375" baseName="jquery-11">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2007-01-15</b:date>
				<b:time>23:58:23</b:time>
			</b:datetime>
			<b:category>script</b:category>
			<b:title>jQuery 1.1</b:title>
			<b:content>
				<b:summary>正式公開了，除了新的1.1版外，官方網頁還更新版面，新的說明文件也同時上線，比起之前詳盡不少，並且使用media wiki系統，最後就是，未來將會有一本jQuery的書。...</b:summary>
				<b:mainContent><p>正式<a href="http://jquery.com/">公開了</a>，除了新的1.1版外，官方網頁還更新版面，新的<a href="http://docs.jquery.com/Main_Page">說明文件</a>也同時上線，比起之前詳盡不少，並且使用media wiki系統，最後就是，未來將會有一本jQuery的書。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000374" baseName="wii">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2007-01-11</b:date>
				<b:time>21:28:33</b:time>
			</b:datetime>
			<b:category>diary</b:category>
			<b:title>Wii</b:title>
			<b:content>
				<b:summary>我買了！！ 不得不稱讚這個使用者介面，超親切好用，台灣機不能中文化真是太可惜了。...</b:summary>
				<b:mainContent><p>我買了！！</p>

<p>不得不稱讚這個使用者介面，超親切好用，台灣機不能中文化真是太可惜了。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000373" baseName="webkit-support-css3-box-shadow">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2007-01-08</b:date>
				<b:time>20:09:20</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>WebKit支援CSS3的box-shadow了</b:title>
			<b:content>
				<b:summary>如題XD，附上真相： 想試試看的可以去WebKit Nightly Builds下載最新版的下來，然後連到Sufin's Safari的Box Shadow這篇文章。...</b:summary>
				<b:mainContent><p>如題XD，附上真相：</p>

<p><img alt="" src="https://blog.othree.net/log/2007/01/08/webkit-support-css3-box-shadow/webkit-boxshadow.png" width="400" height="349" /></p>

<p>想試試看的可以去<a href="http://nightly.webkit.org/">WebKit Nightly Builds</a>下載最新版的下來，然後連到Sufin's Safari的<a href="http://webkit.org/blog/?p=86">Box Shadow</a>這篇文章。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000372" baseName="hard-to-follow-w3c">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2007-01-08</b:date>
				<b:time>01:32:04</b:time>
			</b:datetime>
			<b:category>web</b:category>
			<b:title>完全遵照W3C標準？</b:title>
			<b:content>
				<b:summary>這又是一個似乎要屈服在現實考量下的問題了，在現今的網路環境下，要完全遵照W3C的標準及建議來建製網頁其實還蠻有困難以及不方便的，除了CSS 3還要制定很久、IE對現有CSS的bug，因此有不少人用了CSS hack，當然大部分都不會通過CSS語法檢查，另外網頁表單已經不敷使用了，所以有了Web Forms 2.0（不是W3C制定的，不過W3C有想和XForms整合到XHTML），裡面像是required的屬性值就很有用，但是加上去就過不了HTML檢查，還有要用object取代embed、img兩種標籤，卡在IE支援度問題，一直推展不起來。 會想寫這篇是因為最近很想用一些Web Forms 2.0的東西，加上Peter-Paul Koch是站在不需要通過檢查那派的，至於我，以前是很守標準的那派，不過這次改版時就已經有一些理念不像以前那樣堅持了，現在則覺得好像快要大徹大悟了XD。 其他：我到現在還看不懂XForms的內容。...</b:summary>
				<b:mainContent><p>這又是一個似乎要屈服在現實考量下的問題了，在現今的網路環境下，要完全遵照W3C的標準及建議來建製網頁其實還蠻有困難以及不方便的，除了<a href="http://www.w3.org/Style/CSS/current-work"><span class="caps">CSS</span> 3</a>還要制定很久、IE對現有CSS的bug，因此有不少人用了<a href="http://centricle.com/ref/css/filters/"><span class="caps">CSS </span>hack</a>，當然大部分都不會通過<a href="http://jigsaw.w3.org/css-validator/"><span class="caps">CSS</span>語法檢查</a>，另外網頁表單已經不敷使用了，所以有了<a href="http://www.whatwg.org/specs/web-forms/current-work/">Web Forms 2.0</a>（不是W3C制定的，不過W3C有想和<a href="http://www.w3.org/MarkUp/Forms/">XForms</a>整合到XHTML），裡面像是required的屬性值就很有用，但是加上去就過不了<a href="http://validator.w3.org/"><span class="caps">HTML</span>檢查</a>，還有要用<a href="http://www.w3.org/TR/html4/struct/objects.html#edef-OBJECT">object</a>取代embed、img兩種標籤，卡在IE支援度問題，一直推展不起來。</p>

<p>會想寫這篇是因為最近很想用一些Web Forms 2.0的東西，加上Peter-Paul Koch是站在不需要通過檢查那派的，至於我，以前是很守標準的那派，不過這次改版時就已經有一些理念不像以前那樣堅持了，現在則覺得好像快要大徹大悟了XD。</p>

<p>其他：我到現在還看不懂XForms的內容。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000371" baseName="firefox-3-as-information-broker">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2007-01-07</b:date>
				<b:time>00:37:56</b:time>
			</b:datetime>
			<b:category>software</b:category>
			<b:title>Firefox 3 將成為資訊中間人</b:title>
			<b:content>
				<b:summary> Mozilla的設計師Alex Faaborg在聖誕節前發表了一些文章在說明microformats(微格，不清楚的可以參考我之前的文章，語意網與microformats)，並且提到Firefox未來可能會支援microformats，而且希望Firefox 3就可以做到，而這樣的功能將使的Firefox從一個網頁瀏覽器，變成為資訊中間人（Information Broker）的角色，這和以前的瀏覽器有什麼不一樣呢？他是這樣說的： future Web browsers are likely going to associate semantically marked up data you encounter on the Web with specific applications, either on your system or online. 舉例來說，Firefox在網頁中發現到hCard（hCard是vCard的microformat，內容是聯絡人的相關資料）的標籤結構，就可以幫你把這個資訊匯到你的聯絡人的管理程式，Windows下可能是outlook express或thunderbird，OSX可能是通訊錄，見到不同的microformat就可以自動送到不同的程式，而且無關作業系統（只要有對應該種資訊的程式就可以）。 Mozilla Does Microformats: Firefox 3 as Information...</b:summary>
				<b:mainContent><p><a href="https://blog.othree.net/log/2007/01/07/firefox-3-as-information-broker/informationBroker.jpg_large.jpg" class="thickbox"><img alt="資訊中間人可以把不同的資訊分別送給各自負責的應用程式" src="https://blog.othree.net/log/2007/01/07/firefox-3-as-information-broker/informationBroker.jpg" width="440" height="216" /></a></p>

<p>Mozilla的設計師<a href="http://blog.mozilla.com/faaborg/">Alex Faaborg</a>在聖誕節前發表了一些文章在說明microformats(微格，不清楚的可以參考我之前的文章，<a href="http://blog.othree.net/log/2005/08/23/microformats/">語意網與microformats</a>)，並且提到Firefox未來可能會支援microformats，而且希望Firefox 3就可以做到，而這樣的功能將使的Firefox從一個網頁瀏覽器，變成為資訊中間人（Information Broker）的角色，這和以前的瀏覽器有什麼不一樣呢？他是這樣說的：</p>

<blockquote cite="http://blog.mozilla.com/faaborg/2006/12/11/microformats-part-0-introduction">future Web browsers are likely going to associate semantically marked up data you encounter on the Web with specific applications, either on your system or online.</blockquote>

<p>舉例來說，Firefox在網頁中發現到<strong>hCard</strong>（hCard是vCard的microformat，內容是聯絡人的相關資料）的標籤結構，就可以幫你把這個資訊匯到你的聯絡人的管理程式，Windows下可能是outlook express或thunderbird，OSX可能是通訊錄，見到不同的microformat就可以自動送到不同的程式，而且無關作業系統（只要有對應該種資訊的程式就可以）。</p>


<ul>
<li><a href="http://www.readwriteweb.com/archives/mozilla_does_microformats_firefox3.php">Mozilla Does Microformats: Firefox 3 as Information Broker</a></li>
</ul>

</b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

		<b:entry entryID="000370" baseName="were-html-css-js-seperated">
			<b:author>
				<b:authorName>othree</b:authorName>
				<b:authorEmail>othree@gmail.com</b:authorEmail>
				<b:authorUrl></b:authorUrl>
			</b:author>
			<b:datetime>
				<b:date>2007-01-06</b:date>
				<b:time>20:25:22</b:time>
			</b:datetime>
			<b:category>css-html</b:category>
			<b:title>內容、樣式、行為，分開了嗎？</b:title>
			<b:content>
				<b:summary>學CSS的人大概都知道要把網頁的內容、樣式和網頁行為分開，不過其實一直到現在，內容的部份，也就是HTML的結構，其實都還是會受到網頁的樣式影響，例如一些圓角框的設計是透過多三層的div標籤來達到多重背景圖的效果，雖然div標籤和span標籤是隨你用，加幾層都不會影響網頁的語意，但是這樣的使用法我自己都是能免則免，因為又增加網頁大小、看原始碼又覺得很混亂，比較好的方法是透過javascript來作製造這種為了視覺效果所需要的元素，不過這時就要考慮到使用者關閉javascript時，網頁的版面還能夠維持在正常，或至少可讀的程度，雖然說如果只是圓角框就不需要擔心這問題啦，我想，這問題大概要很久以後才能獲得解決吧，除了要各家瀏覽器都遵照標準來描繪網頁、並且都支援到夠新的CSS（至少現在的CSS2已經不敷網頁設計師使用了），最重要的還要使用者都有更新瀏覽器@@。...</b:summary>
				<b:mainContent><p>學CSS的人大概都知道要把網頁的內容、樣式和網頁行為分開，不過其實一直到現在，內容的部份，也就是HTML的結構，其實都還是會受到網頁的樣式影響，例如一些圓角框的設計是透過多三層的div標籤來達到多重背景圖的效果，雖然div標籤和span標籤是隨你用，加幾層都不會影響網頁的語意，但是這樣的使用法我自己都是能免則免，因為又增加網頁大小、看原始碼又覺得很混亂，比較好的方法是透過javascript來作製造這種為了視覺效果所需要的元素，不過這時就要考慮到使用者關閉javascript時，網頁的版面還能夠維持在正常，或至少可讀的程度，雖然說如果只是圓角框就不需要擔心這問題啦，我想，這問題大概要很久以後才能獲得解決吧，除了要各家瀏覽器都遵照標準來描繪網頁、並且都支援到夠新的CSS（至少現在的CSS2已經不敷網頁設計師使用了），最重要的還要使用者都有更新瀏覽器@@。</p></b:mainContent>
				<b:extendContent></b:extendContent>
			</b:content>


		</b:entry>

	</b:entries>
</b:blog>
